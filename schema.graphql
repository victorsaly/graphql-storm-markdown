schema {
  query: SASQuery
  mutation: SASMutations
  subscription: SASSubscriptions
}

type SASQuery {
  # Runs a average aggregation on the request fields
  averageAssetRollHeader(
    # Entity filter
    assetRollHeader: AssetRollHeaderSearch
  ): AssetRollHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageBuildRequestItem(
    # Entity filter
    buildRequestItem: BuildRequestItemSearch
  ): BuildRequestItemQLAvgType

  # Runs a average aggregation on the request fields
  averageCategory(
    # Entity filter
    category: CategorySearch
  ): CategoryQLAvgType

  # Runs a average aggregation on the request fields
  averageCountry(
    # Entity filter
    country: CountrySearch
  ): CountryQLAvgType

  # Runs a average aggregation on the request fields
  averageCourierDeliveryMethod(
    # Entity filter
    courierDeliveryMethod: CourierDeliveryMethodSearch
  ): CourierDeliveryMethodQLAvgType

  # Runs a average aggregation on the request fields
  averageCurrency(
    # Entity filter
    currency: CurrencySearch
  ): CurrencyQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerCreditNoteHeader(
    # Entity filter
    customerCreditNoteHeader: CustomerCreditNoteHeaderSearch
  ): CustomerCreditNoteHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerCreditNoteItem(
    # Entity filter
    customerCreditNoteItem: CustomerCreditNoteItemSearch
  ): CustomerCreditNoteItemQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerCreditNoteItemUnit(
    # Entity filter
    customerCreditNoteItemUnit: CustomerCreditNoteItemUnitSearch
  ): CustomerCreditNoteItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerInvoiceHeader(
    # Entity filter
    customerInvoiceHeader: CustomerInvoiceHeaderSearch
  ): CustomerInvoiceHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerInvoiceItem(
    # Entity filter
    customerInvoiceItem: CustomerInvoiceItemSearch
  ): CustomerInvoiceItemQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerInvoiceItemUnit(
    # Entity filter
    customerInvoiceItemUnit: CustomerInvoiceItemUnitSearch
  ): CustomerInvoiceItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerPurchaseOrderRequestHeader(
    # Entity filter
    customerPurchaseOrderRequestHeader: CustomerPurchaseOrderRequestHeaderSearch
  ): CustomerPurchaseOrderRequestHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerPurchaseOrderRequestItem(
    # Entity filter
    customerPurchaseOrderRequestItem: CustomerPurchaseOrderRequestItemSearch
  ): CustomerPurchaseOrderRequestItemQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerReturnHeader(
    # Entity filter
    customerReturnHeader: CustomerReturnHeaderSearch
  ): CustomerReturnHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerReturnItem(
    # Entity filter
    customerReturnItem: CustomerReturnItemSearch
  ): CustomerReturnItemQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerReturnItemUnit(
    # Entity filter
    customerReturnItemUnit: CustomerReturnItemUnitSearch
  ): CustomerReturnItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerReturnRequestItem(
    # Entity filter
    customerReturnRequestItem: CustomerReturnRequestItemSearch
  ): CustomerReturnRequestItemQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerSageAux(
    # Entity filter
    customerSageAux: CustomerSageAuxSearch
  ): CustomerSageAuxQLAvgType

  # Runs a average aggregation on the request fields
  averageCustomerStockLevel(
    # Entity filter
    customerStockLevel: CustomerStockLevelSearch
  ): CustomerStockLevelQLAvgType

  # Runs a average aggregation on the request fields
  averageDeliveryMethod(
    # Entity filter
    deliveryMethod: DeliveryMethodSearch
  ): DeliveryMethodQLAvgType

  # Runs a average aggregation on the request fields
  averageDispatchNoteHeader(
    # Entity filter
    dispatchNoteHeader: DispatchNoteHeaderSearch
  ): DispatchNoteHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageDispatchNoteItem(
    # Entity filter
    dispatchNoteItem: DispatchNoteItemSearch
  ): DispatchNoteItemQLAvgType

  # Runs a average aggregation on the request fields
  averageDispatchNoteItemUnit(
    # Entity filter
    dispatchNoteItemUnit: DispatchNoteItemUnitSearch
  ): DispatchNoteItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOOutstandingPurchaseOrder(
    # Entity filter
    outstandingPurchaseOrder: OutstandingPurchaseOrderSearch
  ): OutstandingPurchaseOrderQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOPurchaseOrderHeaderMemoRecursive(
    # Entity filter
    purchaseOrderHeaderMemoRecursive: PurchaseOrderHeaderMemoRecursiveSearch
  ): PurchaseOrderHeaderMemoRecursiveQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOQuoteList(
    # Entity filter
    quoteList: QuoteListSearch
  ): QuoteListQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByCategory(
    # Entity filter
    stockByCategory: StockByCategorySearch
  ): StockByCategoryQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByCustomer(
    # Entity filter
    stockByCustomer: StockByCustomerSearch
  ): StockByCustomerQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByLocation(
    # Entity filter
    stockByLocation: StockByLocationSearch
  ): StockByLocationQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByLocationSummary(
    # Entity filter
    stockByLocationSummary: StockByLocationSummarySearch
  ): StockByLocationSummaryQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByPartNo(
    # Entity filter
    stockByPartNo: StockByPartNoSearch
  ): StockByPartNoQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockBySalesPersonSummary(
    # Entity filter
    stockBySalesPersonSummary: StockBySalesPersonSummarySearch
  ): StockBySalesPersonSummaryQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByType(
    # Entity filter
    stockByType: StockByTypeSearch
  ): StockByTypeQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByTypeSummary(
    # Entity filter
    stockByTypeSummary: StockByTypeSummarySearch
  ): StockByTypeSummaryQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockByUnit(
    # Entity filter
    stockByUnit: StockByUnitSearch
  ): StockByUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOStockMemoRecursive(
    # Entity filter
    stockMemoRecursive: StockMemoRecursiveSearch
  ): StockMemoRecursiveQLAvgType

  # Runs a average aggregation on the request fields
  averageDTOSupplierProductsPurchased(
    # Entity filter
    supplierProductsPurchased: SupplierProductsPurchasedSearch
  ): SupplierProductsPurchasedQLAvgType

  # Runs a average aggregation on the request fields
  averageGoodsReceivedNoteItem(
    # Entity filter
    goodsReceivedNoteItem: GoodsReceivedNoteItemSearch
  ): GoodsReceivedNoteItemQLAvgType

  # Runs a average aggregation on the request fields
  averageGoodsReceivedNoteItemUnit(
    # Entity filter
    goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch
  ): GoodsReceivedNoteItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageHighValueThreshold(
    # Entity filter
    highValueThreshold: HighValueThresholdSearch
  ): HighValueThresholdQLAvgType

  # Runs a average aggregation on the request fields
  averageIncidental(
    # Entity filter
    incidental: IncidentalSearch
  ): IncidentalQLAvgType

  # Runs a average aggregation on the request fields
  averageIncoTerm(
    # Entity filter
    incoTerm: IncoTermSearch
  ): IncoTermQLAvgType

  # Runs a average aggregation on the request fields
  averageLoqateAddress(
    # Entity filter
    loqateAddress: LoqateAddressSearch
  ): LoqateAddressQLAvgType

  # Runs a average aggregation on the request fields
  averageNonOrderedGoodsItem(
    # Entity filter
    nonOrderedGoodsItem: NonOrderedGoodsItemSearch
  ): NonOrderedGoodsItemQLAvgType

  # Runs a average aggregation on the request fields
  averageNonOrderedGoodsItemUnit(
    # Entity filter
    nonOrderedGoodsItemUnit: NonOrderedGoodsItemUnitSearch
  ): NonOrderedGoodsItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageProFormaInvoiceHeader(
    # Entity filter
    proFormaInvoiceHeader: ProFormaInvoiceHeaderSearch
  ): ProFormaInvoiceHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageProFormaInvoiceItem(
    # Entity filter
    proFormaInvoiceItem: ProFormaInvoiceItemSearch
  ): ProFormaInvoiceItemQLAvgType

  # Runs a average aggregation on the request fields
  averagePurchaseOrderHeader(
    # Entity filter
    purchaseOrderHeader: PurchaseOrderHeaderSearch
  ): PurchaseOrderHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averagePurchaseOrderHeaderCarriageChargeMapping(
    # Entity filter
    purchaseOrderHeaderCarriageChargeMapping: PurchaseOrderHeaderCarriageChargeMappingSearch
  ): PurchaseOrderHeaderCarriageChargeMappingQLAvgType

  # Runs a average aggregation on the request fields
  averagePurchaseOrderItem(
    # Entity filter
    purchaseOrderItem: PurchaseOrderItemSearch
  ): PurchaseOrderItemQLAvgType

  # Runs a average aggregation on the request fields
  averagePurchaseOrderItemUnit(
    # Entity filter
    purchaseOrderItemUnit: PurchaseOrderItemUnitSearch
  ): PurchaseOrderItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageQuoteHeader(
    # Entity filter
    quoteHeader: QuoteHeaderSearch
  ): QuoteHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageQuoteItem(
    # Entity filter
    quoteItem: QuoteItemSearch
  ): QuoteItemQLAvgType

  # Runs a average aggregation on the request fields
  averageSalesOrderHeader(
    # Entity filter
    salesOrderHeader: SalesOrderHeaderSearch
  ): SalesOrderHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageSalesOrderItem(
    # Entity filter
    salesOrderItem: SalesOrderItemSearch
  ): SalesOrderItemQLAvgType

  # Runs a average aggregation on the request fields
  averageSalesOrderItemUnit(
    # Entity filter
    salesOrderItemUnit: SalesOrderItemUnitSearch
  ): SalesOrderItemUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageSalesOrderRequestHeader(
    # Entity filter
    salesOrderRequestHeader: SalesOrderRequestHeaderSearch
  ): SalesOrderRequestHeaderQLAvgType

  # Runs a average aggregation on the request fields
  averageSalesOrderRequestItem(
    # Entity filter
    salesOrderRequestItem: SalesOrderRequestItemSearch
  ): SalesOrderRequestItemQLAvgType

  # Runs a average aggregation on the request fields
  averageSic(
    # Entity filter
    sic: SicSearch
  ): SicQLAvgType

  # Runs a average aggregation on the request fields
  averageStock(
    # Entity filter
    stock: StockSearch
  ): StockQLAvgType

  # Runs a average aggregation on the request fields
  averageStockMovement(
    # Entity filter
    stockMovement: StockMovementSearch
  ): StockMovementQLAvgType

  # Runs a average aggregation on the request fields
  averageStockTakeAdjustmentCode(
    # Entity filter
    stockTakeAdjustmentCode: StockTakeAdjustmentCodeSearch
  ): StockTakeAdjustmentCodeQLAvgType

  # Runs a average aggregation on the request fields
  averageStockTakeDiscrepancy(
    # Entity filter
    stockTakeDiscrepancy: StockTakeDiscrepancySearch
  ): StockTakeDiscrepancyQLAvgType

  # Runs a average aggregation on the request fields
  averageStockTakeItem(
    # Entity filter
    stockTakeItem: StockTakeItemSearch
  ): StockTakeItemQLAvgType

  # Runs a average aggregation on the request fields
  averageStockTally(
    # Entity filter
    stockTally: StockTallySearch
  ): StockTallyQLAvgType

  # Runs a average aggregation on the request fields
  averageStockThreshold(
    # Entity filter
    stockThreshold: StockThresholdSearch
  ): StockThresholdQLAvgType

  # Runs a average aggregation on the request fields
  averageStockUnit(
    # Entity filter
    stockUnit: StockUnitSearch
  ): StockUnitQLAvgType

  # Runs a average aggregation on the request fields
  averageStockUnitGroup(
    # Entity filter
    stockUnitGroup: StockUnitGroupSearch
  ): StockUnitGroupQLAvgType

  # Runs a average aggregation on the request fields
  averageStormDeliveryCharge(
    # Entity filter
    stormDeliveryCharge: StormDeliveryChargeSearch
  ): StormDeliveryChargeQLAvgType

  # Runs a average aggregation on the request fields
  averageStormStatusMapping(
    # Entity filter
    stormStatusMapping: StormStatusMappingSearch
  ): StormStatusMappingQLAvgType

  # Runs a average aggregation on the request fields
  averageSupplierDeliveryCharge(
    # Entity filter
    supplierDeliveryCharge: SupplierDeliveryChargeSearch
  ): SupplierDeliveryChargeQLAvgType

  # Runs a average aggregation on the request fields
  averageSupplierStockAndCost(
    # Entity filter
    supplierStockAndCost: SupplierStockAndCostSearch
  ): SupplierStockAndCostQLAvgType

  # Runs a average aggregation on the request fields
  averageTeam(
    # Entity filter
    team: TeamSearch
  ): TeamQLAvgType

  # Runs a average aggregation on the request fields
  averageUserProfileTarget(
    # Entity filter
    userProfileTarget: UserProfileTargetSearch
  ): UserProfileTargetQLAvgType

  # Runs a average aggregation on the request fields
  averageVatcode(
    # Entity filter
    vatcode: VatcodeSearch
  ): VatcodeQLAvgType
  contactManager_Autocomplete(
    input: ContactAutocompleteInputModel!
  ): PagedListResultOfContactAutocompleteOutputModel

  # Auth: app-warehouse ViewDispatchNoteAuth: app-sales ViewDispatchNote
  dispatchNoteManager_GetEmail(input: EmailInputModel!): EmailOutputModel
  getAddress(
    # Id Field
    id: ID!
  ): AddressQLType
  getAddressFeatureMapping(
    # Id Field
    id: ID!
  ): AddressFeatureMappingQLType
  getAddressProviderMapping(
    # Id Field
    id: ID!
  ): AddressProviderMappingQLType
  getAddressType(
    # Id Field
    id: ID!
  ): AddressTypeQLType
  getApplication(
    # Id Field
    id: ID!
  ): ApplicationQLType
  getArea(
    # Id Field
    id: ID!
  ): AreaQLType
  getAssetRollHeader(
    # Id Field
    id: ID!
  ): AssetRollHeaderQLType
  getAssetRollItem(
    # Id Field
    id: ID!
  ): AssetRollItemQLType
  getBuildRequestHeader(
    # Id Field
    id: ID!
  ): BuildRequestHeaderQLType
  getBuildRequestHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): BuildRequestHeaderFeatureMappingQLType
  getBuildRequestItem(
    # Id Field
    id: ID!
  ): BuildRequestItemQLType
  getBuildRequestItemUnit(
    # Id Field
    id: ID!
  ): BuildRequestItemUnitQLType
  getCategory(
    # Id Field
    id: ID!
  ): CategoryQLType
  getContact(
    # Id Field
    id: ID!
  ): ContactQLType
  getContactFeatureMapping(
    # Id Field
    id: ID!
  ): ContactFeatureMappingQLType
  getCorrelation(
    # Id Field
    id: ID!
  ): CorrelationQLType
  getCountry(
    # Id Field
    id: ID!
  ): CountryQLType
  getCourier(
    # Id Field
    id: ID!
  ): CourierQLType
  getCourierDeliveryMethod(
    # Id Field
    id: ID!
  ): CourierDeliveryMethodQLType
  getCurrency(
    # Id Field
    id: ID!
  ): CurrencyQLType
  getCustomer(
    # Id Field
    id: ID!
  ): CustomerQLType
  getCustomerAddressMapping(
    # Id Field
    id: ID!
  ): CustomerAddressMappingQLType
  getCustomerContactMapping(
    # Id Field
    id: ID!
  ): CustomerContactMappingQLType
  getCustomerCreditNoteHeader(
    # Id Field
    id: ID!
  ): CustomerCreditNoteHeaderQLType
  getCustomerCreditNoteItem(
    # Id Field
    id: ID!
  ): CustomerCreditNoteItemQLType
  getCustomerCreditNoteItemUnit(
    # Id Field
    id: ID!
  ): CustomerCreditNoteItemUnitQLType
  getCustomerFeatureMapping(
    # Id Field
    id: ID!
  ): CustomerFeatureMappingQLType
  getCustomerInvoiceHeader(
    # Id Field
    id: ID!
  ): CustomerInvoiceHeaderQLType
  getCustomerInvoiceItem(
    # Id Field
    id: ID!
  ): CustomerInvoiceItemQLType
  getCustomerInvoiceItemUnit(
    # Id Field
    id: ID!
  ): CustomerInvoiceItemUnitQLType
  getCustomerPaymentTerm(
    # Id Field
    id: ID!
  ): CustomerPaymentTermQLType
  getCustomerPurchaseOrderRequestHeader(
    # Id Field
    id: ID!
  ): CustomerPurchaseOrderRequestHeaderQLType
  getCustomerPurchaseOrderRequestHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): CustomerPurchaseOrderRequestHeaderFeatureMappingQLType
  getCustomerPurchaseOrderRequestItem(
    # Id Field
    id: ID!
  ): CustomerPurchaseOrderRequestItemQLType
  getCustomerReturnHeader(
    # Id Field
    id: ID!
  ): CustomerReturnHeaderQLType
  getCustomerReturnHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): CustomerReturnHeaderFeatureMappingQLType
  getCustomerReturnItem(
    # Id Field
    id: ID!
  ): CustomerReturnItemQLType
  getCustomerReturnItemUnit(
    # Id Field
    id: ID!
  ): CustomerReturnItemUnitQLType
  getCustomerReturnRequestHeader(
    # Id Field
    id: ID!
  ): CustomerReturnRequestHeaderQLType
  getCustomerReturnRequestItem(
    # Id Field
    id: ID!
  ): CustomerReturnRequestItemQLType
  getCustomerReturnRequestItemUnit(
    # Id Field
    id: ID!
  ): CustomerReturnRequestItemUnitQLType
  getCustomerSageAux(
    # Id Field
    id: ID!
  ): CustomerSageAuxQLType
  getCustomerSicmapping(
    # Id Field
    id: ID!
  ): CustomerSicmappingQLType
  getCustomerStockLevel(
    # Id Field
    id: ID!
  ): CustomerStockLevelQLType
  getDeliveryMethod(
    # Id Field
    id: ID!
  ): DeliveryMethodQLType
  getDepartment(
    # Id Field
    id: ID!
  ): DepartmentQLType
  getDispatchNoteHeader(
    # Id Field
    id: ID!
  ): DispatchNoteHeaderQLType
  getDispatchNoteHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): DispatchNoteHeaderFeatureMappingQLType
  getDispatchNoteItem(
    # Id Field
    id: ID!
  ): DispatchNoteItemQLType
  getDispatchNoteItemUnit(
    # Id Field
    id: ID!
  ): DispatchNoteItemUnitQLType
  getDispatchNoteTransaction(
    # Id Field
    id: ID!
  ): DispatchNoteTransactionQLType
  getEmployment(
    # Id Field
    id: ID!
  ): EmploymentQLType
  getFeature(
    # Id Field
    id: ID!
  ): FeatureQLType
  getGoodsReceivedNoteHeader(
    # Id Field
    id: ID!
  ): GoodsReceivedNoteHeaderQLType
  getGoodsReceivedNoteItem(
    # Id Field
    id: ID!
  ): GoodsReceivedNoteItemQLType
  getGoodsReceivedNoteItemUnit(
    # Id Field
    id: ID!
  ): GoodsReceivedNoteItemUnitQLType
  getGoodsReceivedNoteItemUnitTransaction(
    # Id Field
    id: ID!
  ): GoodsReceivedNoteItemUnitTransactionQLType
  getGoodsReceivedNoteTransaction(
    # Id Field
    id: ID!
  ): GoodsReceivedNoteTransactionQLType
  getHighValueThreshold(
    # Id Field
    id: ID!
  ): HighValueThresholdQLType
  getIncidental(
    # Id Field
    id: ID!
  ): IncidentalQLType
  getIncoTerm(
    # Id Field
    id: ID!
  ): IncoTermQLType
  getLocale(
    # Id Field
    id: ID!
  ): LocaleQLType
  getLoqateAddress(
    # Id Field
    id: ID!
  ): LoqateAddressQLType
  getManufacturer(
    # Id Field
    id: ID!
  ): ManufacturerQLType
  getMemo(
    # Id Field
    id: ID!
  ): MemoQLType
  getMemoMapping(
    # Id Field
    id: ID!
  ): MemoMappingQLType
  getMemoType(
    # Id Field
    id: ID!
  ): MemoTypeQLType
  getNonOrderedGoodsHeader(
    # Id Field
    id: ID!
  ): NonOrderedGoodsHeaderQLType
  getNonOrderedGoodsItem(
    # Id Field
    id: ID!
  ): NonOrderedGoodsItemQLType
  getNonOrderedGoodsItemUnit(
    # Id Field
    id: ID!
  ): NonOrderedGoodsItemUnitQLType
  getNonOrderedGoodsOrigin(
    # Id Field
    id: ID!
  ): NonOrderedGoodsOriginQLType
  getParentUserProfileMapping(
    # Id Field
    id: ID!
  ): ParentUserProfileMappingQLType
  getPaymentMethod(
    # Id Field
    id: ID!
  ): PaymentMethodQLType
  getPaymentTerm(
    # Id Field
    id: ID!
  ): PaymentTermQLType
  getProFormaInvoiceHeader(
    # Id Field
    id: ID!
  ): ProFormaInvoiceHeaderQLType
  getProFormaInvoiceHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): ProFormaInvoiceHeaderFeatureMappingQLType
  getProFormaInvoiceItem(
    # Id Field
    id: ID!
  ): ProFormaInvoiceItemQLType
  getProofOfDelivery(
    # Id Field
    id: ID!
  ): ProofOfDeliveryQLType
  getPurchaseOrderHeader(
    # Id Field
    id: ID!
  ): PurchaseOrderHeaderQLType
  getPurchaseOrderHeaderCarriageChargeMapping(
    # Id Field
    id: ID!
  ): PurchaseOrderHeaderCarriageChargeMappingQLType
  getPurchaseOrderHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): PurchaseOrderHeaderFeatureMappingQLType
  getPurchaseOrderItem(
    # Id Field
    id: ID!
  ): PurchaseOrderItemQLType
  getPurchaseOrderItemUnit(
    # Id Field
    id: ID!
  ): PurchaseOrderItemUnitQLType
  getQuoteHeader(
    # Id Field
    id: ID!
  ): QuoteHeaderQLType
  getQuoteHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): QuoteHeaderFeatureMappingQLType
  getQuoteItem(
    # Id Field
    id: ID!
  ): QuoteItemQLType
  getQuoteValidationTerm(
    # Id Field
    id: ID!
  ): QuoteValidationTermQLType
  getRole(
    # Id Field
    id: ID!
  ): RoleQLType
  getSalesOrderHeader(
    # Id Field
    id: ID!
  ): SalesOrderHeaderQLType
  getSalesOrderHeaderFeatureMapping(
    # Id Field
    id: ID!
  ): SalesOrderHeaderFeatureMappingQLType
  getSalesOrderHeaderResponseEmailMapping(
    # Id Field
    id: ID!
  ): SalesOrderHeaderResponseEmailMappingQLType
  getSalesOrderItem(
    # Id Field
    id: ID!
  ): SalesOrderItemQLType
  getSalesOrderItemUnit(
    # Id Field
    id: ID!
  ): SalesOrderItemUnitQLType
  getSalesOrderRequestHeader(
    # Id Field
    id: ID!
  ): SalesOrderRequestHeaderQLType
  getSalesOrderRequestItem(
    # Id Field
    id: ID!
  ): SalesOrderRequestItemQLType
  getSector(
    # Id Field
    id: ID!
  ): SectorQLType
  getSic(
    # Id Field
    id: ID!
  ): SicQLType
  getSicsection(
    # Id Field
    id: ID!
  ): SicsectionQLType
  getStock(
    # Id Field
    id: ID!
  ): StockQLType
  getStockFeatureMapping(
    # Id Field
    id: ID!
  ): StockFeatureMappingQLType
  getStockLocation(
    # Id Field
    id: ID!
  ): StockLocationQLType
  getStockMovement(
    # Id Field
    id: ID!
  ): StockMovementQLType
  getStockMovementParentType(
    # Id Field
    id: ID!
  ): StockMovementParentTypeQLType
  getStockMovementRequestHeader(
    # Id Field
    id: ID!
  ): StockMovementRequestHeaderQLType
  getStockMovementRequestItem(
    # Id Field
    id: ID!
  ): StockMovementRequestItemQLType
  getStockMovementTransaction(
    # Id Field
    id: ID!
  ): StockMovementTransactionQLType
  getStockMovementType(
    # Id Field
    id: ID!
  ): StockMovementTypeQLType
  getStockTakeAdjustmentCode(
    # Id Field
    id: ID!
  ): StockTakeAdjustmentCodeQLType
  getStockTakeDiscrepancy(
    # Id Field
    id: ID!
  ): StockTakeDiscrepancyQLType
  getStockTakeHeader(
    # Id Field
    id: ID!
  ): StockTakeHeaderQLType
  getStockTakeItem(
    # Id Field
    id: ID!
  ): StockTakeItemQLType
  getStockTally(
    # Id Field
    id: ID!
  ): StockTallyQLType
  getStockThreshold(
    # Id Field
    id: ID!
  ): StockThresholdQLType
  getStockType(
    # Id Field
    id: ID!
  ): StockTypeQLType
  getStockUnit(
    # Id Field
    id: ID!
  ): StockUnitQLType
  getStockUnitAsset(
    # Id Field
    id: ID!
  ): StockUnitAssetQLType
  getStockUnitAttribute(
    # Id Field
    id: ID!
  ): StockUnitAttributeQLType
  getStockUnitAttributeType(
    # Id Field
    id: ID!
  ): StockUnitAttributeTypeQLType
  getStockUnitGroup(
    # Id Field
    id: ID!
  ): StockUnitGroupQLType
  getStockUnitStatus(
    # Id Field
    id: ID!
  ): StockUnitStatusQLType
  getStockUnitTransaction(
    # Id Field
    id: ID!
  ): StockUnitTransactionQLType
  getStormDeliveryCharge(
    # Id Field
    id: ID!
  ): StormDeliveryChargeQLType
  getStormError(
    # Id Field
    id: ID!
  ): StormErrorQLType
  getStormErrorType(
    # Id Field
    id: ID!
  ): StormErrorTypeQLType
  getStormStatus(
    # Id Field
    id: ID!
  ): StormStatusQLType
  getStormStatusMapping(
    # Id Field
    id: ID!
  ): StormStatusMappingQLType
  getSupplier(
    # Id Field
    id: ID!
  ): SupplierQLType
  getSupplierContactMapping(
    # Id Field
    id: ID!
  ): SupplierContactMappingQLType
  getSupplierDeliveryCharge(
    # Id Field
    id: ID!
  ): SupplierDeliveryChargeQLType
  getSupplierFeatureMapping(
    # Id Field
    id: ID!
  ): SupplierFeatureMappingQLType
  getSupplierProvider(
    # Id Field
    id: ID!
  ): SupplierProviderQLType
  getSupplierProviderMapping(
    # Id Field
    id: ID!
  ): SupplierProviderMappingQLType
  getSupplierStockAndCost(
    # Id Field
    id: ID!
  ): SupplierStockAndCostQLType
  getTableName(
    # Id Field
    id: ID!
  ): TableNameQLType
  getTeam(
    # Id Field
    id: ID!
  ): TeamQLType
  getUnitOfMeasurement(
    # Id Field
    id: ID!
  ): UnitOfMeasurementQLType
  getUserProfile(
    # Id Field
    id: ID!
  ): UserProfileQLType
  getUserProfileDepartmentMapping(
    # Id Field
    id: ID!
  ): UserProfileDepartmentMappingQLType
  getUserProfileTarget(
    # Id Field
    id: ID!
  ): UserProfileTargetQLType
  getUserProfileTeamMapping(
    # Id Field
    id: ID!
  ): UserProfileTeamMappingQLType
  getVatcode(
    # Id Field
    id: ID!
  ): VatcodeQLType
  getWarranty(
    # Id Field
    id: ID!
  ): WarrantyQLType

  # Auth: app-warehouse WGRNV
  goodsReceivedNoteManager_GetEmail(input: EmailInputModel!): EmailOutputModel
  liveStockManager_Get(
    input: StockLiveStockInputModel!
  ): StockSearchProductOutputModel
  liveStockManager_Search(input: StockSearchInputModel!): StockSearchOutputModel
  lookupManager_FindAddress(
    searchContext: AddressSearchInputModel!
  ): AddressesSearchOutputModel
  lookupManager_FindAddressByPostcode(
    searchContext: AddressSearchInputModel!
  ): AddressGetOutputModel
  lookupManager_GetAddress(
    searchContext: AddressGetInputModel!
  ): AddressGetOutputModel
  lookupManager_GetAddressFromPostcode(
    searchContext: AddressSearchInputModel!
  ): AddressGetOutputModel
  memoManager_GetMemos(input: MemoTypeInputModel!): [MemoQLType]
  onePortalManager_TransactionHeader(
    input: TransactionHeaderInputModel!
  ): PagedListResultOfTransactionOutputModel
  pluginManager_Search(input: SearchPluginInputModel!): PluginSearchOutputModel

  # Auth: app-sales SQUV
  quoteManager_GetEmail(input: EmailInputModel!): EmailOutputModel

  # Auth: app-sales SQUV
  quoteManager_GetRFQEmail(input: RFQEmailInputModel!): EmailOutputModel
  sageManager_SageAccountInfoAsync(
    input: SageSalesLedgerInputModel!
  ): SageLedgerAccountInfoOutputModel
  sageManager_SalesLedgerAvailableToSpendAsync(
    input: SageSalesLedgerInputModel!
  ): Decimal
  sageManager_SalesLedgerBalanceAsync(
    input: SageSalesLedgerInputModel!
  ): Decimal
  sageManager_SalesLedgerBalanceSASAsync(
    input: SageSalesLedgerInputModel!
  ): Decimal
  sageManager_SalesLedgerCreditLimitAsync(
    input: SageSalesLedgerInputModel!
  ): Decimal
  sageManager_SalesLedgerOverCreditLimitAsync(
    input: SageSalesLedgerInputModel!
  ): Boolean

  # Auth: app-warehouse viewSalesOrder
  salesOrderManager_GetEmail(input: EmailInputModel!): EmailOutputModel

  # Auth: app-sales viewSalesOrder
  salesOrderManager_GetRFQEmail(input: RFQEmailInputModel!): EmailOutputModel
  searchAddress(
    address: AddressSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfAddress
  searchAddressFeatureMapping(
    addressFeatureMapping: AddressFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfAddressFeatureMapping
  searchAddressProviderMapping(
    addressProviderMapping: AddressProviderMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfAddressProviderMapping
  searchAddressType(
    addressType: AddressTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfAddressType
  searchApplication(
    application: ApplicationSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfApplication
  searchArea(
    area: AreaSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfArea
  searchAssetRollHeader(
    assetRollHeader: AssetRollHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfAssetRollHeader
  searchAssetRollItem(
    assetRollItem: AssetRollItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfAssetRollItem
  searchBuildRequestHeader(
    buildRequestHeader: BuildRequestHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfBuildRequestHeader
  searchBuildRequestHeaderFeatureMapping(
    buildRequestHeaderFeatureMapping: BuildRequestHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfBuildRequestHeaderFeatureMapping
  searchBuildRequestItem(
    buildRequestItem: BuildRequestItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfBuildRequestItem
  searchBuildRequestItemUnit(
    buildRequestItemUnit: BuildRequestItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfBuildRequestItemUnit
  searchCategory(
    category: CategorySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCategory
  searchContact(
    contact: ContactSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfContact
  searchContactFeatureMapping(
    contactFeatureMapping: ContactFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfContactFeatureMapping
  searchCorrelation(
    correlation: CorrelationSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCorrelation
  searchCountry(
    country: CountrySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCountry
  searchCourier(
    courier: CourierSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCourier
  searchCourierDeliveryMethod(
    courierDeliveryMethod: CourierDeliveryMethodSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCourierDeliveryMethod
  searchCurrency(
    currency: CurrencySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCurrency
  searchCustomer(
    customer: CustomerSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomer
  searchCustomerAddressMapping(
    customerAddressMapping: CustomerAddressMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerAddressMapping
  searchCustomerContactMapping(
    customerContactMapping: CustomerContactMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerContactMapping
  searchCustomerCreditNoteHeader(
    customerCreditNoteHeader: CustomerCreditNoteHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerCreditNoteHeader
  searchCustomerCreditNoteItem(
    customerCreditNoteItem: CustomerCreditNoteItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerCreditNoteItem
  searchCustomerCreditNoteItemUnit(
    customerCreditNoteItemUnit: CustomerCreditNoteItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerCreditNoteItemUnit
  searchCustomerFeatureMapping(
    customerFeatureMapping: CustomerFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerFeatureMapping
  searchCustomerInvoiceHeader(
    customerInvoiceHeader: CustomerInvoiceHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerInvoiceHeader
  searchCustomerInvoiceItem(
    customerInvoiceItem: CustomerInvoiceItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerInvoiceItem
  searchCustomerInvoiceItemUnit(
    customerInvoiceItemUnit: CustomerInvoiceItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerInvoiceItemUnit
  searchCustomerPaymentTerm(
    customerPaymentTerm: CustomerPaymentTermSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerPaymentTerm
  searchCustomerPurchaseOrderRequestHeader(
    customerPurchaseOrderRequestHeader: CustomerPurchaseOrderRequestHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerPurchaseOrderRequestHeader
  searchCustomerPurchaseOrderRequestHeaderFeatureMapping(
    customerPurchaseOrderRequestHeaderFeatureMapping: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerPurchaseOrderRequestHeaderFeatureMapping
  searchCustomerPurchaseOrderRequestItem(
    customerPurchaseOrderRequestItem: CustomerPurchaseOrderRequestItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerPurchaseOrderRequestItem
  searchCustomerReturnHeader(
    customerReturnHeader: CustomerReturnHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerReturnHeader
  searchCustomerReturnHeaderFeatureMapping(
    customerReturnHeaderFeatureMapping: CustomerReturnHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerReturnHeaderFeatureMapping
  searchCustomerReturnItem(
    customerReturnItem: CustomerReturnItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerReturnItem
  searchCustomerReturnItemUnit(
    customerReturnItemUnit: CustomerReturnItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerReturnItemUnit
  searchCustomerReturnRequestHeader(
    customerReturnRequestHeader: CustomerReturnRequestHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerReturnRequestHeader
  searchCustomerReturnRequestItem(
    customerReturnRequestItem: CustomerReturnRequestItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerReturnRequestItem
  searchCustomerReturnRequestItemUnit(
    customerReturnRequestItemUnit: CustomerReturnRequestItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerReturnRequestItemUnit
  searchCustomerSageAux(
    customerSageAux: CustomerSageAuxSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerSageAux
  searchCustomerSicmapping(
    customerSicmapping: CustomerSicmappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerSicmapping
  searchCustomerStockLevel(
    customerStockLevel: CustomerStockLevelSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfCustomerStockLevel
  searchDeliveryMethod(
    deliveryMethod: DeliveryMethodSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfDeliveryMethod
  searchDepartment(
    department: DepartmentSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfDepartment
  searchDispatchNoteHeader(
    dispatchNoteHeader: DispatchNoteHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfDispatchNoteHeader
  searchDispatchNoteHeaderFeatureMapping(
    dispatchNoteHeaderFeatureMapping: DispatchNoteHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfDispatchNoteHeaderFeatureMapping
  searchDispatchNoteItem(
    dispatchNoteItem: DispatchNoteItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfDispatchNoteItem
  searchDispatchNoteItemUnit(
    dispatchNoteItemUnit: DispatchNoteItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfDispatchNoteItemUnit
  searchDispatchNoteTransaction(
    dispatchNoteTransaction: DispatchNoteTransactionSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfDispatchNoteTransaction
  searchDTOOutstandingPurchaseOrder(
    outstandingPurchaseOrder: OutstandingPurchaseOrderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfOutstandingPurchaseOrder
  searchDTOPurchaseOrderHeaderMemoRecursive(
    purchaseOrderHeaderMemoRecursive: PurchaseOrderHeaderMemoRecursiveSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPurchaseOrderHeaderMemoRecursive
  searchDTOQuoteList(
    quoteList: QuoteListSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfQuoteList
  searchDTOStockByCategory(
    stockByCategory: StockByCategorySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByCategory
  searchDTOStockByCustomer(
    stockByCustomer: StockByCustomerSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByCustomer
  searchDTOStockByLocation(
    stockByLocation: StockByLocationSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByLocation
  searchDTOStockByLocationSummary(
    stockByLocationSummary: StockByLocationSummarySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByLocationSummary
  searchDTOStockByPartNo(
    stockByPartNo: StockByPartNoSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByPartNo
  searchDTOStockBySalesPersonSummary(
    stockBySalesPersonSummary: StockBySalesPersonSummarySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockBySalesPersonSummary
  searchDTOStockByType(
    stockByType: StockByTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByType
  searchDTOStockByTypeSummary(
    stockByTypeSummary: StockByTypeSummarySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByTypeSummary
  searchDTOStockByUnit(
    stockByUnit: StockByUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockByUnit
  searchDTOStockLocationInUse(
    stockLocationInUse: StockLocationInUseSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockLocationInUse
  searchDTOStockMemoRecursive(
    stockMemoRecursive: StockMemoRecursiveSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockMemoRecursive
  searchDTOSupplierProductsPurchased(
    supplierProductsPurchased: SupplierProductsPurchasedSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplierProductsPurchased
  searchEmployment(
    employment: EmploymentSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfEmployment
  searchFeature(
    feature: FeatureSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfFeature
  searchGoodsReceivedNoteHeader(
    goodsReceivedNoteHeader: GoodsReceivedNoteHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfGoodsReceivedNoteHeader
  searchGoodsReceivedNoteItem(
    goodsReceivedNoteItem: GoodsReceivedNoteItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfGoodsReceivedNoteItem
  searchGoodsReceivedNoteItemUnit(
    goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfGoodsReceivedNoteItemUnit
  searchGoodsReceivedNoteItemUnitTransaction(
    goodsReceivedNoteItemUnitTransaction: GoodsReceivedNoteItemUnitTransactionSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfGoodsReceivedNoteItemUnitTransaction
  searchGoodsReceivedNoteTransaction(
    goodsReceivedNoteTransaction: GoodsReceivedNoteTransactionSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfGoodsReceivedNoteTransaction
  searchHighValueThreshold(
    highValueThreshold: HighValueThresholdSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfHighValueThreshold
  searchIncidental(
    incidental: IncidentalSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfIncidental
  searchIncoTerm(
    incoTerm: IncoTermSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfIncoTerm
  searchLocale(
    locale: LocaleSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfLocale
  searchLoqateAddress(
    loqateAddress: LoqateAddressSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfLoqateAddress
  searchManufacturer(
    manufacturer: ManufacturerSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfManufacturer
  searchMemo(
    memo: MemoSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfMemo
  searchMemoMapping(
    memoMapping: MemoMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfMemoMapping
  searchMemoType(
    memoType: MemoTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfMemoType
  searchNonOrderedGoodsHeader(
    nonOrderedGoodsHeader: NonOrderedGoodsHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfNonOrderedGoodsHeader
  searchNonOrderedGoodsItem(
    nonOrderedGoodsItem: NonOrderedGoodsItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfNonOrderedGoodsItem
  searchNonOrderedGoodsItemUnit(
    nonOrderedGoodsItemUnit: NonOrderedGoodsItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfNonOrderedGoodsItemUnit
  searchNonOrderedGoodsOrigin(
    nonOrderedGoodsOrigin: NonOrderedGoodsOriginSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfNonOrderedGoodsOrigin
  searchParentUserProfileMapping(
    parentUserProfileMapping: ParentUserProfileMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfParentUserProfileMapping
  searchPaymentMethod(
    paymentMethod: PaymentMethodSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPaymentMethod
  searchPaymentTerm(
    paymentTerm: PaymentTermSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPaymentTerm
  searchProFormaInvoiceHeader(
    proFormaInvoiceHeader: ProFormaInvoiceHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfProFormaInvoiceHeader
  searchProFormaInvoiceHeaderFeatureMapping(
    proFormaInvoiceHeaderFeatureMapping: ProFormaInvoiceHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfProFormaInvoiceHeaderFeatureMapping
  searchProFormaInvoiceItem(
    proFormaInvoiceItem: ProFormaInvoiceItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfProFormaInvoiceItem
  searchProofOfDelivery(
    proofOfDelivery: ProofOfDeliverySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfProofOfDelivery
  searchPurchaseOrderHeader(
    purchaseOrderHeader: PurchaseOrderHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPurchaseOrderHeader
  searchPurchaseOrderHeaderCarriageChargeMapping(
    purchaseOrderHeaderCarriageChargeMapping: PurchaseOrderHeaderCarriageChargeMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPurchaseOrderHeaderCarriageChargeMapping
  searchPurchaseOrderHeaderFeatureMapping(
    purchaseOrderHeaderFeatureMapping: PurchaseOrderHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPurchaseOrderHeaderFeatureMapping
  searchPurchaseOrderItem(
    purchaseOrderItem: PurchaseOrderItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPurchaseOrderItem
  searchPurchaseOrderItemUnit(
    purchaseOrderItemUnit: PurchaseOrderItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfPurchaseOrderItemUnit
  searchQuoteHeader(
    quoteHeader: QuoteHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfQuoteHeader
  searchQuoteHeaderFeatureMapping(
    quoteHeaderFeatureMapping: QuoteHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfQuoteHeaderFeatureMapping
  searchQuoteItem(
    quoteItem: QuoteItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfQuoteItem
  searchQuoteValidationTerm(
    quoteValidationTerm: QuoteValidationTermSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfQuoteValidationTerm
  searchRole(
    role: RoleSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfRole
  searchSalesOrderHeader(
    salesOrderHeader: SalesOrderHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSalesOrderHeader
  searchSalesOrderHeaderFeatureMapping(
    salesOrderHeaderFeatureMapping: SalesOrderHeaderFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSalesOrderHeaderFeatureMapping
  searchSalesOrderHeaderResponseEmailMapping(
    salesOrderHeaderResponseEmailMapping: SalesOrderHeaderResponseEmailMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSalesOrderHeaderResponseEmailMapping
  searchSalesOrderItem(
    salesOrderItem: SalesOrderItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSalesOrderItem
  searchSalesOrderItemUnit(
    salesOrderItemUnit: SalesOrderItemUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSalesOrderItemUnit
  searchSalesOrderRequestHeader(
    salesOrderRequestHeader: SalesOrderRequestHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSalesOrderRequestHeader
  searchSalesOrderRequestItem(
    salesOrderRequestItem: SalesOrderRequestItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSalesOrderRequestItem
  searchSector(
    sector: SectorSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSector
  searchSic(
    sic: SicSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSic
  searchSicsection(
    sicsection: SicsectionSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSicsection
  searchStock(
    stock: StockSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStock
  searchStockFeatureMapping(
    stockFeatureMapping: StockFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockFeatureMapping
  searchStockLocation(
    stockLocation: StockLocationSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockLocation
  searchStockMovement(
    stockMovement: StockMovementSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockMovement
  searchStockMovementParentType(
    stockMovementParentType: StockMovementParentTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockMovementParentType
  searchStockMovementRequestHeader(
    stockMovementRequestHeader: StockMovementRequestHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockMovementRequestHeader
  searchStockMovementRequestItem(
    stockMovementRequestItem: StockMovementRequestItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockMovementRequestItem
  searchStockMovementTransaction(
    stockMovementTransaction: StockMovementTransactionSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockMovementTransaction
  searchStockMovementType(
    stockMovementType: StockMovementTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockMovementType
  searchStockTakeAdjustmentCode(
    stockTakeAdjustmentCode: StockTakeAdjustmentCodeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockTakeAdjustmentCode
  searchStockTakeDiscrepancy(
    stockTakeDiscrepancy: StockTakeDiscrepancySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockTakeDiscrepancy
  searchStockTakeHeader(
    stockTakeHeader: StockTakeHeaderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockTakeHeader
  searchStockTakeItem(
    stockTakeItem: StockTakeItemSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockTakeItem
  searchStockTally(
    stockTally: StockTallySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockTally
  searchStockThreshold(
    stockThreshold: StockThresholdSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockThreshold
  searchStockType(
    stockType: StockTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockType
  searchStockUnit(
    stockUnit: StockUnitSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockUnit
  searchStockUnitAsset(
    stockUnitAsset: StockUnitAssetSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockUnitAsset
  searchStockUnitAttribute(
    stockUnitAttribute: StockUnitAttributeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockUnitAttribute
  searchStockUnitAttributeType(
    stockUnitAttributeType: StockUnitAttributeTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockUnitAttributeType
  searchStockUnitGroup(
    stockUnitGroup: StockUnitGroupSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockUnitGroup
  searchStockUnitStatus(
    stockUnitStatus: StockUnitStatusSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockUnitStatus
  searchStockUnitTransaction(
    stockUnitTransaction: StockUnitTransactionSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStockUnitTransaction
  searchStormDeliveryCharge(
    stormDeliveryCharge: StormDeliveryChargeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStormDeliveryCharge
  searchStormError(
    stormError: StormErrorSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStormError
  searchStormErrorType(
    stormErrorType: StormErrorTypeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStormErrorType
  searchStormStatus(
    stormStatus: StormStatusSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStormStatus
  searchStormStatusMapping(
    stormStatusMapping: StormStatusMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfStormStatusMapping
  searchSupplier(
    supplier: SupplierSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplier
  searchSupplierContactMapping(
    supplierContactMapping: SupplierContactMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplierContactMapping
  searchSupplierDeliveryCharge(
    supplierDeliveryCharge: SupplierDeliveryChargeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplierDeliveryCharge
  searchSupplierFeatureMapping(
    supplierFeatureMapping: SupplierFeatureMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplierFeatureMapping
  searchSupplierProvider(
    supplierProvider: SupplierProviderSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplierProvider
  searchSupplierProviderMapping(
    supplierProviderMapping: SupplierProviderMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplierProviderMapping
  searchSupplierStockAndCost(
    supplierStockAndCost: SupplierStockAndCostSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfSupplierStockAndCost
  searchTableName(
    tableName: TableNameSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfTableName
  searchTeam(
    team: TeamSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfTeam
  searchUnitOfMeasurement(
    unitOfMeasurement: UnitOfMeasurementSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfUnitOfMeasurement
  searchUserProfile(
    userProfile: UserProfileSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfUserProfile
  searchUserProfileDepartmentMapping(
    userProfileDepartmentMapping: UserProfileDepartmentMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfUserProfileDepartmentMapping
  searchUserProfileTarget(
    userProfileTarget: UserProfileTargetSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfUserProfileTarget
  searchUserProfileTeamMapping(
    userProfileTeamMapping: UserProfileTeamMappingSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfUserProfileTeamMapping
  searchVatcode(
    vatcode: VatcodeSearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfVatcode
  searchWarranty(
    warranty: WarrantySearch
    pageSize: Int
    pageNumber: Int = 1
    sortOrder: [SortOrderType]
  ): PagedListResultOfWarranty

  # Auth: app-warehouse WSUV
  stockUnitManager_Suggester(
    input: StockUnitSearchInputModel!
  ): [StockUnitQLType]
  stormStatusManager_GetList(
    table: TableNameTypeEnumQLType!
    isOpen: Boolean
    isMutable: Boolean
    isVisible: Boolean
  ): [StormStatusMappingQLType]

  # Runs a sum aggregation on the request fields
  sumAssetRollHeader(
    # Entity filter
    assetRollHeader: AssetRollHeaderSearch
  ): AssetRollHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumBuildRequestItem(
    # Entity filter
    buildRequestItem: BuildRequestItemSearch
  ): BuildRequestItemQLSumType

  # Runs a sum aggregation on the request fields
  sumCategory(
    # Entity filter
    category: CategorySearch
  ): CategoryQLSumType

  # Runs a sum aggregation on the request fields
  sumCountry(
    # Entity filter
    country: CountrySearch
  ): CountryQLSumType

  # Runs a sum aggregation on the request fields
  sumCourierDeliveryMethod(
    # Entity filter
    courierDeliveryMethod: CourierDeliveryMethodSearch
  ): CourierDeliveryMethodQLSumType

  # Runs a sum aggregation on the request fields
  sumCurrency(
    # Entity filter
    currency: CurrencySearch
  ): CurrencyQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerCreditNoteHeader(
    # Entity filter
    customerCreditNoteHeader: CustomerCreditNoteHeaderSearch
  ): CustomerCreditNoteHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerCreditNoteItem(
    # Entity filter
    customerCreditNoteItem: CustomerCreditNoteItemSearch
  ): CustomerCreditNoteItemQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerCreditNoteItemUnit(
    # Entity filter
    customerCreditNoteItemUnit: CustomerCreditNoteItemUnitSearch
  ): CustomerCreditNoteItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerInvoiceHeader(
    # Entity filter
    customerInvoiceHeader: CustomerInvoiceHeaderSearch
  ): CustomerInvoiceHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerInvoiceItem(
    # Entity filter
    customerInvoiceItem: CustomerInvoiceItemSearch
  ): CustomerInvoiceItemQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerInvoiceItemUnit(
    # Entity filter
    customerInvoiceItemUnit: CustomerInvoiceItemUnitSearch
  ): CustomerInvoiceItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerPurchaseOrderRequestHeader(
    # Entity filter
    customerPurchaseOrderRequestHeader: CustomerPurchaseOrderRequestHeaderSearch
  ): CustomerPurchaseOrderRequestHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerPurchaseOrderRequestItem(
    # Entity filter
    customerPurchaseOrderRequestItem: CustomerPurchaseOrderRequestItemSearch
  ): CustomerPurchaseOrderRequestItemQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerReturnHeader(
    # Entity filter
    customerReturnHeader: CustomerReturnHeaderSearch
  ): CustomerReturnHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerReturnItem(
    # Entity filter
    customerReturnItem: CustomerReturnItemSearch
  ): CustomerReturnItemQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerReturnItemUnit(
    # Entity filter
    customerReturnItemUnit: CustomerReturnItemUnitSearch
  ): CustomerReturnItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerReturnRequestItem(
    # Entity filter
    customerReturnRequestItem: CustomerReturnRequestItemSearch
  ): CustomerReturnRequestItemQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerSageAux(
    # Entity filter
    customerSageAux: CustomerSageAuxSearch
  ): CustomerSageAuxQLSumType

  # Runs a sum aggregation on the request fields
  sumCustomerStockLevel(
    # Entity filter
    customerStockLevel: CustomerStockLevelSearch
  ): CustomerStockLevelQLSumType

  # Runs a sum aggregation on the request fields
  sumDeliveryMethod(
    # Entity filter
    deliveryMethod: DeliveryMethodSearch
  ): DeliveryMethodQLSumType

  # Runs a sum aggregation on the request fields
  sumDispatchNoteHeader(
    # Entity filter
    dispatchNoteHeader: DispatchNoteHeaderSearch
  ): DispatchNoteHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumDispatchNoteItem(
    # Entity filter
    dispatchNoteItem: DispatchNoteItemSearch
  ): DispatchNoteItemQLSumType

  # Runs a sum aggregation on the request fields
  sumDispatchNoteItemUnit(
    # Entity filter
    dispatchNoteItemUnit: DispatchNoteItemUnitSearch
  ): DispatchNoteItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOOutstandingPurchaseOrder(
    # Entity filter
    outstandingPurchaseOrder: OutstandingPurchaseOrderSearch
  ): OutstandingPurchaseOrderQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOPurchaseOrderHeaderMemoRecursive(
    # Entity filter
    purchaseOrderHeaderMemoRecursive: PurchaseOrderHeaderMemoRecursiveSearch
  ): PurchaseOrderHeaderMemoRecursiveQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOQuoteList(
    # Entity filter
    quoteList: QuoteListSearch
  ): QuoteListQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByCategory(
    # Entity filter
    stockByCategory: StockByCategorySearch
  ): StockByCategoryQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByCustomer(
    # Entity filter
    stockByCustomer: StockByCustomerSearch
  ): StockByCustomerQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByLocation(
    # Entity filter
    stockByLocation: StockByLocationSearch
  ): StockByLocationQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByLocationSummary(
    # Entity filter
    stockByLocationSummary: StockByLocationSummarySearch
  ): StockByLocationSummaryQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByPartNo(
    # Entity filter
    stockByPartNo: StockByPartNoSearch
  ): StockByPartNoQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockBySalesPersonSummary(
    # Entity filter
    stockBySalesPersonSummary: StockBySalesPersonSummarySearch
  ): StockBySalesPersonSummaryQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByType(
    # Entity filter
    stockByType: StockByTypeSearch
  ): StockByTypeQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByTypeSummary(
    # Entity filter
    stockByTypeSummary: StockByTypeSummarySearch
  ): StockByTypeSummaryQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockByUnit(
    # Entity filter
    stockByUnit: StockByUnitSearch
  ): StockByUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOStockMemoRecursive(
    # Entity filter
    stockMemoRecursive: StockMemoRecursiveSearch
  ): StockMemoRecursiveQLSumType

  # Runs a sum aggregation on the request fields
  sumDTOSupplierProductsPurchased(
    # Entity filter
    supplierProductsPurchased: SupplierProductsPurchasedSearch
  ): SupplierProductsPurchasedQLSumType

  # Runs a sum aggregation on the request fields
  sumGoodsReceivedNoteItem(
    # Entity filter
    goodsReceivedNoteItem: GoodsReceivedNoteItemSearch
  ): GoodsReceivedNoteItemQLSumType

  # Runs a sum aggregation on the request fields
  sumGoodsReceivedNoteItemUnit(
    # Entity filter
    goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch
  ): GoodsReceivedNoteItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumHighValueThreshold(
    # Entity filter
    highValueThreshold: HighValueThresholdSearch
  ): HighValueThresholdQLSumType

  # Runs a sum aggregation on the request fields
  sumIncidental(
    # Entity filter
    incidental: IncidentalSearch
  ): IncidentalQLSumType

  # Runs a sum aggregation on the request fields
  sumIncoTerm(
    # Entity filter
    incoTerm: IncoTermSearch
  ): IncoTermQLSumType

  # Runs a sum aggregation on the request fields
  sumLoqateAddress(
    # Entity filter
    loqateAddress: LoqateAddressSearch
  ): LoqateAddressQLSumType

  # Runs a sum aggregation on the request fields
  sumNonOrderedGoodsItem(
    # Entity filter
    nonOrderedGoodsItem: NonOrderedGoodsItemSearch
  ): NonOrderedGoodsItemQLSumType

  # Runs a sum aggregation on the request fields
  sumNonOrderedGoodsItemUnit(
    # Entity filter
    nonOrderedGoodsItemUnit: NonOrderedGoodsItemUnitSearch
  ): NonOrderedGoodsItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumProFormaInvoiceHeader(
    # Entity filter
    proFormaInvoiceHeader: ProFormaInvoiceHeaderSearch
  ): ProFormaInvoiceHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumProFormaInvoiceItem(
    # Entity filter
    proFormaInvoiceItem: ProFormaInvoiceItemSearch
  ): ProFormaInvoiceItemQLSumType

  # Runs a sum aggregation on the request fields
  sumPurchaseOrderHeader(
    # Entity filter
    purchaseOrderHeader: PurchaseOrderHeaderSearch
  ): PurchaseOrderHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumPurchaseOrderHeaderCarriageChargeMapping(
    # Entity filter
    purchaseOrderHeaderCarriageChargeMapping: PurchaseOrderHeaderCarriageChargeMappingSearch
  ): PurchaseOrderHeaderCarriageChargeMappingQLSumType

  # Runs a sum aggregation on the request fields
  sumPurchaseOrderItem(
    # Entity filter
    purchaseOrderItem: PurchaseOrderItemSearch
  ): PurchaseOrderItemQLSumType

  # Runs a sum aggregation on the request fields
  sumPurchaseOrderItemUnit(
    # Entity filter
    purchaseOrderItemUnit: PurchaseOrderItemUnitSearch
  ): PurchaseOrderItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumQuoteHeader(
    # Entity filter
    quoteHeader: QuoteHeaderSearch
  ): QuoteHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumQuoteItem(
    # Entity filter
    quoteItem: QuoteItemSearch
  ): QuoteItemQLSumType

  # Runs a sum aggregation on the request fields
  sumSalesOrderHeader(
    # Entity filter
    salesOrderHeader: SalesOrderHeaderSearch
  ): SalesOrderHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumSalesOrderItem(
    # Entity filter
    salesOrderItem: SalesOrderItemSearch
  ): SalesOrderItemQLSumType

  # Runs a sum aggregation on the request fields
  sumSalesOrderItemUnit(
    # Entity filter
    salesOrderItemUnit: SalesOrderItemUnitSearch
  ): SalesOrderItemUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumSalesOrderRequestHeader(
    # Entity filter
    salesOrderRequestHeader: SalesOrderRequestHeaderSearch
  ): SalesOrderRequestHeaderQLSumType

  # Runs a sum aggregation on the request fields
  sumSalesOrderRequestItem(
    # Entity filter
    salesOrderRequestItem: SalesOrderRequestItemSearch
  ): SalesOrderRequestItemQLSumType

  # Runs a sum aggregation on the request fields
  sumSic(
    # Entity filter
    sic: SicSearch
  ): SicQLSumType

  # Runs a sum aggregation on the request fields
  sumStock(
    # Entity filter
    stock: StockSearch
  ): StockQLSumType

  # Runs a sum aggregation on the request fields
  sumStockMovement(
    # Entity filter
    stockMovement: StockMovementSearch
  ): StockMovementQLSumType

  # Runs a sum aggregation on the request fields
  sumStockTakeAdjustmentCode(
    # Entity filter
    stockTakeAdjustmentCode: StockTakeAdjustmentCodeSearch
  ): StockTakeAdjustmentCodeQLSumType

  # Runs a sum aggregation on the request fields
  sumStockTakeDiscrepancy(
    # Entity filter
    stockTakeDiscrepancy: StockTakeDiscrepancySearch
  ): StockTakeDiscrepancyQLSumType

  # Runs a sum aggregation on the request fields
  sumStockTakeItem(
    # Entity filter
    stockTakeItem: StockTakeItemSearch
  ): StockTakeItemQLSumType

  # Runs a sum aggregation on the request fields
  sumStockTally(
    # Entity filter
    stockTally: StockTallySearch
  ): StockTallyQLSumType

  # Runs a sum aggregation on the request fields
  sumStockThreshold(
    # Entity filter
    stockThreshold: StockThresholdSearch
  ): StockThresholdQLSumType

  # Runs a sum aggregation on the request fields
  sumStockUnit(
    # Entity filter
    stockUnit: StockUnitSearch
  ): StockUnitQLSumType

  # Runs a sum aggregation on the request fields
  sumStockUnitGroup(
    # Entity filter
    stockUnitGroup: StockUnitGroupSearch
  ): StockUnitGroupQLSumType

  # Runs a sum aggregation on the request fields
  sumStormDeliveryCharge(
    # Entity filter
    stormDeliveryCharge: StormDeliveryChargeSearch
  ): StormDeliveryChargeQLSumType

  # Runs a sum aggregation on the request fields
  sumStormStatusMapping(
    # Entity filter
    stormStatusMapping: StormStatusMappingSearch
  ): StormStatusMappingQLSumType

  # Runs a sum aggregation on the request fields
  sumSupplierDeliveryCharge(
    # Entity filter
    supplierDeliveryCharge: SupplierDeliveryChargeSearch
  ): SupplierDeliveryChargeQLSumType

  # Runs a sum aggregation on the request fields
  sumSupplierStockAndCost(
    # Entity filter
    supplierStockAndCost: SupplierStockAndCostSearch
  ): SupplierStockAndCostQLSumType

  # Runs a sum aggregation on the request fields
  sumTeam(
    # Entity filter
    team: TeamSearch
  ): TeamQLSumType

  # Runs a sum aggregation on the request fields
  sumUserProfileTarget(
    # Entity filter
    userProfileTarget: UserProfileTargetSearch
  ): UserProfileTargetQLSumType

  # Runs a sum aggregation on the request fields
  sumVatcode(
    # Entity filter
    vatcode: VatcodeSearch
  ): VatcodeQLSumType
  timelineManager_GetTransactions(
    input: TimelineInputModel!
  ): [TimelineOutputModel]
  workflowManager_CancelWorkflow(
    input: WorkflowCancelInputModel!
  ): WorkflowOutputModel
  workflowManager_GetWorkflowDetails(
    input: WorkflowInputModel!
  ): WorkflowDetailsOutputModel
  workflowManager_ListWorkflows(
    input: WorkflowListInputModel!
  ): WorkflowListOutputModel
  workflowManager_OpsCheck(input: WorkflowEmailInputModel!): WorkflowOutputModel
  workflowManager_SendEmail(
    input: WorkflowEmailInputModel!
  ): WorkflowOutputModel
  workflowManager_StartWorkflow(
    input: WorkflowStartInputModel!
  ): WorkflowOutputModel
  workflowManager_UserResponse(
    input: WorkflowUserResponseInputModel!
  ): WorkflowOutputModel
  workflowManager_WorkflowComplete(
    input: WorkflowCompleteInputModel!
  ): WorkflowOutputModel
}

type PagedListResultOfAddress {
  currentPage: Int!
  items: [AddressQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type AddressQLType {
  address1: String
  address2: String
  address3: String
  address4: String
  addressFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressFeatureMappingSearchTyp Filter
    filter: AddressFeatureMappingSearch
  ): [AddressFeatureMappingQLType]

  # ***Excludes IsDeleted***
  addressFeatureMappingsCount: Int
  addressProviderMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressProviderMappingSearchTyp Filter
    filter: AddressProviderMappingSearch
  ): [AddressProviderMappingQLType]

  # ***Excludes IsDeleted***
  addressProviderMappingsCount: Int
  addressType: AddressTypeQLType
  addressTypeId: Int!
  application: ApplicationQLType
  applicationId: Int!
  city: String
  companyName: String
  contacts(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactSearchTyp Filter
    filter: ContactSearch
  ): [ContactQLType]

  # ***Excludes IsDeleted***
  contactsCount: Int
  country: CountryQLType
  countryId: Int
  county: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerAddressMappings(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerAddressMappingSearchTyp Filter
    filter: CustomerAddressMappingSearch
  ): [CustomerAddressMappingQLType]

  #
  customerAddressMappingsCount: Int
  customerPurchaseOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeadersCount: Int
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  customerSicmappingCustomers(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerSicmappingSearchTyp Filter
    filter: CustomerSicmappingSearch
  ): [CustomerSicmappingQLType]

  #
  customerSicmappingCustomersCount: Int
  customerSicmappingSics(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerSicmappingSearchTyp Filter
    filter: CustomerSicmappingSearch
  ): [CustomerSicmappingQLType]

  #
  customerSicmappingSicsCount: Int
  dispatchNoteHeaderAddresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderAddressesCount: Int
  dispatchNoteHeaderRequestedAddresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderRequestedAddressesCount: Int
  extension: String
  faxNumber: String
  guid: ID!
  id: Int!
  isAuthorised: Boolean!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  phoneNumber: String
  postCode: String
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  reference: String
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salesOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeadersCount: Int
  specialInstructions: String
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  vatcode: VatcodeQLType
  vatcodeId: Int
}

scalar Long

# The `DateTime` scalar type represents a date and time. `DateTime` expects timestamps to be formatted in accordance with the [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
scalar DateTime

type AddressTypeQLType {
  addresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressSearchTyp Filter
    filter: AddressSearch
  ): [AddressQLType]

  # ***Excludes IsDeleted***
  addressesCount: Int
  created: DateTime!
  id: Int!
  type: String
}

input SortOrderType {
  field: String!

  #
  direction: SortDirectionEnum = ASC
}

enum SortDirectionEnum {
  ASC
  DESC
}

# Address SearchContext
input AddressSearch {
  # Id
  id: [IntSearch]

  # AddressTypeId
  addressTypeId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # CompanyName
  companyName: [StringSearchType]

  # Address1
  address1: [StringSearchType]

  # Address2
  address2: [StringSearchType]

  # Address3
  address3: [StringSearchType]

  # Address4
  address4: [StringSearchType]

  # City
  city: [StringSearchType]

  # County
  county: [StringSearchType]

  # PostCode
  postCode: [StringSearchType]

  # PhoneNumber
  phoneNumber: [StringSearchType]

  # Extension
  extension: [StringSearchType]

  # FaxNumber
  faxNumber: [StringSearchType]

  # CountryId
  countryId: [IntSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # SpecialInstructions
  specialInstructions: [StringSearchType]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # AddressType
  addressType: AddressTypeSearch

  # Application
  application: ApplicationSearch

  # Country
  country: CountrySearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in AddressFeatureMappings
  addressFeatureMappings: AddressFeatureMappingSearch

  # Searches for matches in AddressProviderMappings
  addressProviderMappings: AddressProviderMappingSearch

  # Searches for matches in Contacts
  contacts: ContactSearch

  # Searches for matches in CustomerAddressMappings
  customerAddressMappings: CustomerAddressMappingSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaders
  customerPurchaseOrderRequestHeaders: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in CustomerSicmappingCustomers
  customerSicmappingCustomers: CustomerSicmappingSearch

  # Searches for matches in CustomerSicmappingSics
  customerSicmappingSics: CustomerSicmappingSearch

  # Searches for matches in DispatchNoteHeaderAddresses
  dispatchNoteHeaderAddresses: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteHeaderRequestedAddresses
  dispatchNoteHeaderRequestedAddresses: DispatchNoteHeaderSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderRequestHeaders
  salesOrderRequestHeaders: SalesOrderRequestHeaderSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# Integer search, used for byte, short, int, long.
input IntSearch {
  #
  operator: SearchOperatorEnumType = OR

  # Operator
  method: NumberSearchMethod = equal
  values: [Long]
}

enum SearchOperatorEnumType {
  # OR
  OR

  # AND
  AND
}

enum NumberSearchMethod {
  #
  equal

  #
  notEqual

  # Min and max, min in value index 1, and max in value index 2
  range
}

input StringSearchType {
  #
  operator: SearchOperatorEnumType = OR
  method: StringSearchMethod = equals
  values: [String]
}

enum StringSearchMethod {
  # =
  equals

  # <>
  notEqual

  # (term)%
  startsWith

  # %(term)%
  contains

  # %(term)
  endsWith
}

# Boolean search
input BooleanSearch {
  #
  operator: SearchOperatorEnumType = OR
  value: Boolean
}

input DateTimeSearch {
  #
  operator: SearchOperatorEnumType = OR
  from: DateTime
  to: DateTime
}

input GuidSearchTypeScalarSearch {
  #
  operator: SearchOperatorEnumType = OR
  value: ID
}

# AddressType SearchContext
input AddressTypeSearch {
  # Id
  id: [IntSearch]

  # Type
  type: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Addresses
  addresses: AddressSearch
}

# Application SearchContext
input ApplicationSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Searches for matches in AddressFeatureMappings
  addressFeatureMappings: AddressFeatureMappingSearch

  # Searches for matches in Addresses
  addresses: AddressSearch

  # Searches for matches in Areas
  areas: AreaSearch

  # Searches for matches in AssetRollHeaders
  assetRollHeaders: AssetRollHeaderSearch

  # Searches for matches in AssetRollItems
  assetRollItems: AssetRollItemSearch

  # Searches for matches in BuildRequestHeaderFeatureMappings
  buildRequestHeaderFeatureMappings: BuildRequestHeaderFeatureMappingSearch

  # Searches for matches in BuildRequestHeaders
  buildRequestHeaders: BuildRequestHeaderSearch

  # Searches for matches in BuildRequestItemUnits
  buildRequestItemUnits: BuildRequestItemUnitSearch

  # Searches for matches in BuildRequestItems
  buildRequestItems: BuildRequestItemSearch

  # Searches for matches in ContactFeatureMappings
  contactFeatureMappings: ContactFeatureMappingSearch

  # Searches for matches in Contacts
  contacts: ContactSearch

  # Searches for matches in CustomerCreditNoteHeaders
  customerCreditNoteHeaders: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerCreditNoteItemUnits
  customerCreditNoteItemUnits: CustomerCreditNoteItemUnitSearch

  # Searches for matches in CustomerCreditNoteItems
  customerCreditNoteItems: CustomerCreditNoteItemSearch

  # Searches for matches in CustomerFeatureMappings
  customerFeatureMappings: CustomerFeatureMappingSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerInvoiceItemUnits
  customerInvoiceItemUnits: CustomerInvoiceItemUnitSearch

  # Searches for matches in CustomerInvoiceItems
  customerInvoiceItems: CustomerInvoiceItemSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaderFeatureMappings
  customerPurchaseOrderRequestHeaderFeatureMappings: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaders
  customerPurchaseOrderRequestHeaders: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestItems
  customerPurchaseOrderRequestItems: CustomerPurchaseOrderRequestItemSearch

  # Searches for matches in CustomerReturnHeaderFeatureMappings
  customerReturnHeaderFeatureMappings: CustomerReturnHeaderFeatureMappingSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnItemUnits
  customerReturnItemUnits: CustomerReturnItemUnitSearch

  # Searches for matches in CustomerReturnItems
  customerReturnItems: CustomerReturnItemSearch

  # Searches for matches in CustomerReturnRequestHeaders
  customerReturnRequestHeaders: CustomerReturnRequestHeaderSearch

  # Searches for matches in CustomerReturnRequestItemUnits
  customerReturnRequestItemUnits: CustomerReturnRequestItemUnitSearch

  # Searches for matches in CustomerReturnRequestItems
  customerReturnRequestItems: CustomerReturnRequestItemSearch

  # Searches for matches in CustomerStockLevels
  customerStockLevels: CustomerStockLevelSearch

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in DispatchNoteHeaderFeatureMappings
  dispatchNoteHeaderFeatureMappings: DispatchNoteHeaderFeatureMappingSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteItemUnits
  dispatchNoteItemUnits: DispatchNoteItemUnitSearch

  # Searches for matches in DispatchNoteItems
  dispatchNoteItems: DispatchNoteItemSearch

  # Searches for matches in DispatchNoteTransactions
  dispatchNoteTransactions: DispatchNoteTransactionSearch

  # Searches for matches in Features
  features: FeatureSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteItemUnitTransactions
  goodsReceivedNoteItemUnitTransactions: GoodsReceivedNoteItemUnitTransactionSearch

  # Searches for matches in GoodsReceivedNoteItemUnits
  goodsReceivedNoteItemUnits: GoodsReceivedNoteItemUnitSearch

  # Searches for matches in GoodsReceivedNoteItems
  goodsReceivedNoteItems: GoodsReceivedNoteItemSearch

  # Searches for matches in GoodsReceivedNoteTransactions
  goodsReceivedNoteTransactions: GoodsReceivedNoteTransactionSearch

  # Searches for matches in Incidentals
  incidentals: IncidentalSearch

  # Searches for matches in NonOrderedGoodsHeaders
  nonOrderedGoodsHeaders: NonOrderedGoodsHeaderSearch

  # Searches for matches in NonOrderedGoodsItemUnits
  nonOrderedGoodsItemUnits: NonOrderedGoodsItemUnitSearch

  # Searches for matches in NonOrderedGoodsItems
  nonOrderedGoodsItems: NonOrderedGoodsItemSearch

  # Searches for matches in ProFormaInvoiceHeaderFeatureMappings
  proFormaInvoiceHeaderFeatureMappings: ProFormaInvoiceHeaderFeatureMappingSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in ProFormaInvoiceItems
  proFormaInvoiceItems: ProFormaInvoiceItemSearch

  # Searches for matches in PurchaseOrderHeaderFeatureMappings
  purchaseOrderHeaderFeatureMappings: PurchaseOrderHeaderFeatureMappingSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in PurchaseOrderItemUnits
  purchaseOrderItemUnits: PurchaseOrderItemUnitSearch

  # Searches for matches in PurchaseOrderItems
  purchaseOrderItems: PurchaseOrderItemSearch

  # Searches for matches in QuoteHeaderFeatureMappings
  quoteHeaderFeatureMappings: QuoteHeaderFeatureMappingSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch

  # Searches for matches in QuoteItems
  quoteItems: QuoteItemSearch

  # Searches for matches in SalesOrderHeaderFeatureMappings
  salesOrderHeaderFeatureMappings: SalesOrderHeaderFeatureMappingSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderItemUnits
  salesOrderItemUnits: SalesOrderItemUnitSearch

  # Searches for matches in SalesOrderItems
  salesOrderItems: SalesOrderItemSearch

  # Searches for matches in SalesOrderRequestHeaders
  salesOrderRequestHeaders: SalesOrderRequestHeaderSearch

  # Searches for matches in SalesOrderRequestItems
  salesOrderRequestItems: SalesOrderRequestItemSearch

  # Searches for matches in StockFeatureMappings
  stockFeatureMappings: StockFeatureMappingSearch

  # Searches for matches in StockLocations
  stockLocations: StockLocationSearch

  # Searches for matches in StockMovementParentTypes
  stockMovementParentTypes: StockMovementParentTypeSearch

  # Searches for matches in StockMovementRequestHeaders
  stockMovementRequestHeaders: StockMovementRequestHeaderSearch

  # Searches for matches in StockMovementRequestItems
  stockMovementRequestItems: StockMovementRequestItemSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockMovementTypes
  stockMovementTypes: StockMovementTypeSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch

  # Searches for matches in StockTakeAdjustmentCodes
  stockTakeAdjustmentCodes: StockTakeAdjustmentCodeSearch

  # Searches for matches in StockTakeDiscrepancies
  stockTakeDiscrepancies: StockTakeDiscrepancySearch

  # Searches for matches in StockTakeHeaders
  stockTakeHeaders: StockTakeHeaderSearch

  # Searches for matches in StockTakeItems
  stockTakeItems: StockTakeItemSearch

  # Searches for matches in StockTallies
  stockTallies: StockTallySearch

  # Searches for matches in StockThresholds
  stockThresholds: StockThresholdSearch

  # Searches for matches in StockUnitAssets
  stockUnitAssets: StockUnitAssetSearch

  # Searches for matches in StockUnitAttributes
  stockUnitAttributes: StockUnitAttributeSearch

  # Searches for matches in StockUnitGroups
  stockUnitGroups: StockUnitGroupSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch

  # Searches for matches in Stocks
  stocks: StockSearch

  # Searches for matches in SupplierFeatureMappings
  supplierFeatureMappings: SupplierFeatureMappingSearch

  # Searches for matches in SupplierStockAndCosts
  supplierStockAndCosts: SupplierStockAndCostSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch

  # Searches for matches in UserProfiles
  userProfiles: UserProfileSearch

  # Searches for matches in Warranties
  warranties: WarrantySearch
}

# AddressFeatureMapping SearchContext
input AddressFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # AddressId
  addressId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Address
  address: AddressSearch

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch
}

# UserProfile SearchContext
input UserProfileSearch {
  # Id
  id: [IntSearch]

  # LoginId
  loginId: [StringSearchType]

  # AreaId
  areaId: [IntSearch]

  # FullName
  fullName: [StringSearchType]

  # JobTitle
  jobTitle: [StringSearchType]

  # RoleId
  roleId: [IntSearch]

  # PhoneNumber
  phoneNumber: [StringSearchType]

  # Extension
  extension: [StringSearchType]

  # Mobile
  mobile: [StringSearchType]

  # Email
  email: [StringSearchType]

  # AvatarUrl
  avatarUrl: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedBy
  createdBy: [StringSearchType]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Area
  area: AreaSearch

  # Role
  role: RoleSearch

  # Searches for matches in AddressCreatedBies
  addressCreatedBies: AddressSearch

  # Searches for matches in AddressFeatureMappingCreatedBies
  addressFeatureMappingCreatedBies: AddressFeatureMappingSearch

  # Searches for matches in AddressFeatureMappingModifiedBies
  addressFeatureMappingModifiedBies: AddressFeatureMappingSearch

  # Searches for matches in AddressModifiedBies
  addressModifiedBies: AddressSearch

  # Searches for matches in AddressProviderMappings
  addressProviderMappings: AddressProviderMappingSearch

  # Searches for matches in Areas
  areas: AreaSearch

  # Searches for matches in AssetRollHeaders
  assetRollHeaders: AssetRollHeaderSearch

  # Searches for matches in AssetRollItems
  assetRollItems: AssetRollItemSearch

  # Searches for matches in BuildRequestHeaderAssignedTos
  buildRequestHeaderAssignedTos: BuildRequestHeaderSearch

  # Searches for matches in BuildRequestHeaderCompletedBies
  buildRequestHeaderCompletedBies: BuildRequestHeaderSearch

  # Searches for matches in BuildRequestHeaderCreatedBies
  buildRequestHeaderCreatedBies: BuildRequestHeaderSearch

  # Searches for matches in BuildRequestHeaderFeatureMappingCreatedBies
  buildRequestHeaderFeatureMappingCreatedBies: BuildRequestHeaderFeatureMappingSearch

  # Searches for matches in BuildRequestHeaderFeatureMappingModifiedBies
  buildRequestHeaderFeatureMappingModifiedBies: BuildRequestHeaderFeatureMappingSearch

  # Searches for matches in BuildRequestHeaderModifiedBies
  buildRequestHeaderModifiedBies: BuildRequestHeaderSearch

  # Searches for matches in BuildRequestHeaderRequestedBies
  buildRequestHeaderRequestedBies: BuildRequestHeaderSearch

  # Searches for matches in BuildRequestItemCreatedBies
  buildRequestItemCreatedBies: BuildRequestItemSearch

  # Searches for matches in BuildRequestItemModifiedBies
  buildRequestItemModifiedBies: BuildRequestItemSearch

  # Searches for matches in BuildRequestItemUnitCreatedBies
  buildRequestItemUnitCreatedBies: BuildRequestItemUnitSearch

  # Searches for matches in BuildRequestItemUnitModifiedBies
  buildRequestItemUnitModifiedBies: BuildRequestItemUnitSearch

  # Searches for matches in Categories
  categories: CategorySearch

  # Searches for matches in ContactCreatedBies
  contactCreatedBies: ContactSearch

  # Searches for matches in ContactFeatureMappingCreatedBies
  contactFeatureMappingCreatedBies: ContactFeatureMappingSearch

  # Searches for matches in ContactFeatureMappingModifiedBies
  contactFeatureMappingModifiedBies: ContactFeatureMappingSearch

  # Searches for matches in ContactModifiedBies
  contactModifiedBies: ContactSearch

  # Searches for matches in CorrelationCreatedBies
  correlationCreatedBies: CorrelationSearch

  # Searches for matches in CorrelationModifiedBies
  correlationModifiedBies: CorrelationSearch

  # Searches for matches in CourierCreatedBies
  courierCreatedBies: CourierSearch

  # Searches for matches in CourierDeliveryMethods
  courierDeliveryMethods: CourierDeliveryMethodSearch

  # Searches for matches in CourierModifiedBies
  courierModifiedBies: CourierSearch

  # Searches for matches in CustomerCreatedBies
  customerCreatedBies: CustomerSearch

  # Searches for matches in CustomerCreditControllers
  customerCreditControllers: CustomerSearch

  # Searches for matches in CustomerCreditNoteHeaderCreatedBies
  customerCreditNoteHeaderCreatedBies: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerCreditNoteHeaderModifiedBies
  customerCreditNoteHeaderModifiedBies: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerCreditNoteHeaderSalesPeople
  customerCreditNoteHeaderSalesPeople: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerCreditNoteItemCreatedBies
  customerCreditNoteItemCreatedBies: CustomerCreditNoteItemSearch

  # Searches for matches in CustomerCreditNoteItemModifiedBies
  customerCreditNoteItemModifiedBies: CustomerCreditNoteItemSearch

  # Searches for matches in CustomerCreditNoteItemUnitCreatedBies
  customerCreditNoteItemUnitCreatedBies: CustomerCreditNoteItemUnitSearch

  # Searches for matches in CustomerCreditNoteItemUnitModifiedBies
  customerCreditNoteItemUnitModifiedBies: CustomerCreditNoteItemUnitSearch

  # Searches for matches in CustomerFeatureMappingCreatedBies
  customerFeatureMappingCreatedBies: CustomerFeatureMappingSearch

  # Searches for matches in CustomerFeatureMappingModifiedBies
  customerFeatureMappingModifiedBies: CustomerFeatureMappingSearch

  # Searches for matches in CustomerInvoiceHeaderCreatedBies
  customerInvoiceHeaderCreatedBies: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerInvoiceHeaderModifiedBies
  customerInvoiceHeaderModifiedBies: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerInvoiceHeaderSalesPeople
  customerInvoiceHeaderSalesPeople: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerInvoiceItemCreatedBies
  customerInvoiceItemCreatedBies: CustomerInvoiceItemSearch

  # Searches for matches in CustomerInvoiceItemModifiedBies
  customerInvoiceItemModifiedBies: CustomerInvoiceItemSearch

  # Searches for matches in CustomerInvoiceItemUnitCreatedBies
  customerInvoiceItemUnitCreatedBies: CustomerInvoiceItemUnitSearch

  # Searches for matches in CustomerInvoiceItemUnitModifiedBies
  customerInvoiceItemUnitModifiedBies: CustomerInvoiceItemUnitSearch

  # Searches for matches in CustomerModifiedBies
  customerModifiedBies: CustomerSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaderCreatedBies
  customerPurchaseOrderRequestHeaderCreatedBies: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaderFeatureMappingCreatedBies
  customerPurchaseOrderRequestHeaderFeatureMappingCreatedBies: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaderFeatureMappingModifiedBies
  customerPurchaseOrderRequestHeaderFeatureMappingModifiedBies: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaderModifiedBies
  customerPurchaseOrderRequestHeaderModifiedBies: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestItemCreatedBies
  customerPurchaseOrderRequestItemCreatedBies: CustomerPurchaseOrderRequestItemSearch

  # Searches for matches in CustomerPurchaseOrderRequestItemModifiedBies
  customerPurchaseOrderRequestItemModifiedBies: CustomerPurchaseOrderRequestItemSearch

  # Searches for matches in CustomerReturnHeaderAssignedTos
  customerReturnHeaderAssignedTos: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnHeaderCreatedBies
  customerReturnHeaderCreatedBies: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnHeaderFeatureMappingCreatedBies
  customerReturnHeaderFeatureMappingCreatedBies: CustomerReturnHeaderFeatureMappingSearch

  # Searches for matches in CustomerReturnHeaderFeatureMappingModifiedBies
  customerReturnHeaderFeatureMappingModifiedBies: CustomerReturnHeaderFeatureMappingSearch

  # Searches for matches in CustomerReturnHeaderModifiedBies
  customerReturnHeaderModifiedBies: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnHeaderSalesPeople
  customerReturnHeaderSalesPeople: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnItemCreatedBies
  customerReturnItemCreatedBies: CustomerReturnItemSearch

  # Searches for matches in CustomerReturnItemModifiedBies
  customerReturnItemModifiedBies: CustomerReturnItemSearch

  # Searches for matches in CustomerReturnItemUnitCreatedBies
  customerReturnItemUnitCreatedBies: CustomerReturnItemUnitSearch

  # Searches for matches in CustomerReturnItemUnitModifiedBies
  customerReturnItemUnitModifiedBies: CustomerReturnItemUnitSearch

  # Searches for matches in CustomerReturnRequestHeaderCreatedBies
  customerReturnRequestHeaderCreatedBies: CustomerReturnRequestHeaderSearch

  # Searches for matches in CustomerReturnRequestHeaderModifiedBies
  customerReturnRequestHeaderModifiedBies: CustomerReturnRequestHeaderSearch

  # Searches for matches in CustomerReturnRequestHeaderSalesPeople
  customerReturnRequestHeaderSalesPeople: CustomerReturnRequestHeaderSearch

  # Searches for matches in CustomerReturnRequestItemCreatedBies
  customerReturnRequestItemCreatedBies: CustomerReturnRequestItemSearch

  # Searches for matches in CustomerReturnRequestItemModifiedBies
  customerReturnRequestItemModifiedBies: CustomerReturnRequestItemSearch

  # Searches for matches in CustomerReturnRequestItemUnitCreatedBies
  customerReturnRequestItemUnitCreatedBies: CustomerReturnRequestItemUnitSearch

  # Searches for matches in CustomerReturnRequestItemUnitModifiedBies
  customerReturnRequestItemUnitModifiedBies: CustomerReturnRequestItemUnitSearch

  # Searches for matches in CustomerSageAuxes
  customerSageAuxes: CustomerSageAuxSearch

  # Searches for matches in CustomerSalesPeople
  customerSalesPeople: CustomerSearch

  # Searches for matches in CustomerStockLevels
  customerStockLevels: CustomerStockLevelSearch

  # Searches for matches in DeliveryMethods
  deliveryMethods: DeliveryMethodSearch

  # Searches for matches in DispatchNoteHeaderCreatedBies
  dispatchNoteHeaderCreatedBies: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteHeaderDispatchedBies
  dispatchNoteHeaderDispatchedBies: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteHeaderFeatureMappingCreatedBies
  dispatchNoteHeaderFeatureMappingCreatedBies: DispatchNoteHeaderFeatureMappingSearch

  # Searches for matches in DispatchNoteHeaderFeatureMappingModifiedBies
  dispatchNoteHeaderFeatureMappingModifiedBies: DispatchNoteHeaderFeatureMappingSearch

  # Searches for matches in DispatchNoteHeaderModifiedBies
  dispatchNoteHeaderModifiedBies: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteHeaderSalesPeople
  dispatchNoteHeaderSalesPeople: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteItemCreatedBies
  dispatchNoteItemCreatedBies: DispatchNoteItemSearch

  # Searches for matches in DispatchNoteItemModifiedBies
  dispatchNoteItemModifiedBies: DispatchNoteItemSearch

  # Searches for matches in DispatchNoteItemUnitCreatedBies
  dispatchNoteItemUnitCreatedBies: DispatchNoteItemUnitSearch

  # Searches for matches in DispatchNoteItemUnitModifiedBies
  dispatchNoteItemUnitModifiedBies: DispatchNoteItemUnitSearch

  # Searches for matches in DispatchNoteTransactionCreatedBies
  dispatchNoteTransactionCreatedBies: DispatchNoteTransactionSearch

  # Searches for matches in DispatchNoteTransactionModifiedBies
  dispatchNoteTransactionModifiedBies: DispatchNoteTransactionSearch

  # Searches for matches in Employments
  employments: EmploymentSearch

  # Searches for matches in FeatureCreatedBies
  featureCreatedBies: FeatureSearch

  # Searches for matches in FeatureModifiedBies
  featureModifiedBies: FeatureSearch

  # Searches for matches in GoodsReceivedNoteHeaderCreatedBies
  goodsReceivedNoteHeaderCreatedBies: GoodsReceivedNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteHeaderModifiedBies
  goodsReceivedNoteHeaderModifiedBies: GoodsReceivedNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteHeaderReceivedBies
  goodsReceivedNoteHeaderReceivedBies: GoodsReceivedNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteItemCreatedBies
  goodsReceivedNoteItemCreatedBies: GoodsReceivedNoteItemSearch

  # Searches for matches in GoodsReceivedNoteItemModifiedBies
  goodsReceivedNoteItemModifiedBies: GoodsReceivedNoteItemSearch

  # Searches for matches in GoodsReceivedNoteItemUnitCreatedBies
  goodsReceivedNoteItemUnitCreatedBies: GoodsReceivedNoteItemUnitSearch

  # Searches for matches in GoodsReceivedNoteItemUnitModifiedBies
  goodsReceivedNoteItemUnitModifiedBies: GoodsReceivedNoteItemUnitSearch

  # Searches for matches in GoodsReceivedNoteItemUnitTransactionCreatedBies
  goodsReceivedNoteItemUnitTransactionCreatedBies: GoodsReceivedNoteItemUnitTransactionSearch

  # Searches for matches in GoodsReceivedNoteItemUnitTransactionModifiedBies
  goodsReceivedNoteItemUnitTransactionModifiedBies: GoodsReceivedNoteItemUnitTransactionSearch

  # Searches for matches in GoodsReceivedNoteTransactionCreatedBies
  goodsReceivedNoteTransactionCreatedBies: GoodsReceivedNoteTransactionSearch

  # Searches for matches in GoodsReceivedNoteTransactionModifiedBies
  goodsReceivedNoteTransactionModifiedBies: GoodsReceivedNoteTransactionSearch

  # Searches for matches in IncidentalCreatedBies
  incidentalCreatedBies: IncidentalSearch

  # Searches for matches in IncidentalModifiedBies
  incidentalModifiedBies: IncidentalSearch

  # Searches for matches in IncidentalSalesPeople
  incidentalSalesPeople: IncidentalSearch

  # Searches for matches in LoqateAddresses
  loqateAddresses: LoqateAddressSearch

  # Searches for matches in MemoAllocatedTos
  memoAllocatedTos: MemoSearch

  # Searches for matches in MemoCompletedBies
  memoCompletedBies: MemoSearch

  # Searches for matches in MemoCreatedBies
  memoCreatedBies: MemoSearch

  # Searches for matches in MemoModifiedBies
  memoModifiedBies: MemoSearch

  # Searches for matches in NonOrderedGoodsHeaderCreatedBies
  nonOrderedGoodsHeaderCreatedBies: NonOrderedGoodsHeaderSearch

  # Searches for matches in NonOrderedGoodsHeaderModifiedBies
  nonOrderedGoodsHeaderModifiedBies: NonOrderedGoodsHeaderSearch

  # Searches for matches in NonOrderedGoodsItemCreatedBies
  nonOrderedGoodsItemCreatedBies: NonOrderedGoodsItemSearch

  # Searches for matches in NonOrderedGoodsItemModifiedBies
  nonOrderedGoodsItemModifiedBies: NonOrderedGoodsItemSearch

  # Searches for matches in NonOrderedGoodsItemUnitCreatedBies
  nonOrderedGoodsItemUnitCreatedBies: NonOrderedGoodsItemUnitSearch

  # Searches for matches in NonOrderedGoodsItemUnitModifiedBies
  nonOrderedGoodsItemUnitModifiedBies: NonOrderedGoodsItemUnitSearch

  # Searches for matches in NonOrderedGoodsOriginCreatedBies
  nonOrderedGoodsOriginCreatedBies: NonOrderedGoodsOriginSearch

  # Searches for matches in NonOrderedGoodsOriginModifiedBies
  nonOrderedGoodsOriginModifiedBies: NonOrderedGoodsOriginSearch

  # Searches for matches in ParentUserProfileMappingChildUserProfiles
  parentUserProfileMappingChildUserProfiles: ParentUserProfileMappingSearch

  # Searches for matches in ParentUserProfileMappingParentUserProfiles
  parentUserProfileMappingParentUserProfiles: ParentUserProfileMappingSearch

  # Searches for matches in ProFormaInvoiceHeaderCreatedBies
  proFormaInvoiceHeaderCreatedBies: ProFormaInvoiceHeaderSearch

  # Searches for matches in ProFormaInvoiceHeaderFeatureMappingCreatedBies
  proFormaInvoiceHeaderFeatureMappingCreatedBies: ProFormaInvoiceHeaderFeatureMappingSearch

  # Searches for matches in ProFormaInvoiceHeaderFeatureMappingModifiedBies
  proFormaInvoiceHeaderFeatureMappingModifiedBies: ProFormaInvoiceHeaderFeatureMappingSearch

  # Searches for matches in ProFormaInvoiceHeaderModifiedBies
  proFormaInvoiceHeaderModifiedBies: ProFormaInvoiceHeaderSearch

  # Searches for matches in ProFormaInvoiceHeaderSalesPeople
  proFormaInvoiceHeaderSalesPeople: ProFormaInvoiceHeaderSearch

  # Searches for matches in ProFormaInvoiceItemCreatedBies
  proFormaInvoiceItemCreatedBies: ProFormaInvoiceItemSearch

  # Searches for matches in ProFormaInvoiceItemModifiedBies
  proFormaInvoiceItemModifiedBies: ProFormaInvoiceItemSearch

  # Searches for matches in ProofOfDeliveryCreatedBies
  proofOfDeliveryCreatedBies: ProofOfDeliverySearch

  # Searches for matches in ProofOfDeliveryModifiedBies
  proofOfDeliveryModifiedBies: ProofOfDeliverySearch

  # Searches for matches in PurchaseOrderHeaderCarriageChargeMappingCreatedBies
  purchaseOrderHeaderCarriageChargeMappingCreatedBies: PurchaseOrderHeaderCarriageChargeMappingSearch

  # Searches for matches in PurchaseOrderHeaderCarriageChargeMappingModifiedBies
  purchaseOrderHeaderCarriageChargeMappingModifiedBies: PurchaseOrderHeaderCarriageChargeMappingSearch

  # Searches for matches in PurchaseOrderHeaderCreatedBies
  purchaseOrderHeaderCreatedBies: PurchaseOrderHeaderSearch

  # Searches for matches in PurchaseOrderHeaderFeatureMappingCreatedBies
  purchaseOrderHeaderFeatureMappingCreatedBies: PurchaseOrderHeaderFeatureMappingSearch

  # Searches for matches in PurchaseOrderHeaderFeatureMappingModifiedBies
  purchaseOrderHeaderFeatureMappingModifiedBies: PurchaseOrderHeaderFeatureMappingSearch

  # Searches for matches in PurchaseOrderHeaderModifiedBies
  purchaseOrderHeaderModifiedBies: PurchaseOrderHeaderSearch

  # Searches for matches in PurchaseOrderHeaderSalesPeople
  purchaseOrderHeaderSalesPeople: PurchaseOrderHeaderSearch

  # Searches for matches in PurchaseOrderItemCreatedBies
  purchaseOrderItemCreatedBies: PurchaseOrderItemSearch

  # Searches for matches in PurchaseOrderItemModifiedBies
  purchaseOrderItemModifiedBies: PurchaseOrderItemSearch

  # Searches for matches in PurchaseOrderItemUnitCreatedBies
  purchaseOrderItemUnitCreatedBies: PurchaseOrderItemUnitSearch

  # Searches for matches in PurchaseOrderItemUnitModifiedBies
  purchaseOrderItemUnitModifiedBies: PurchaseOrderItemUnitSearch

  # Searches for matches in QuoteHeaderCreatedBies
  quoteHeaderCreatedBies: QuoteHeaderSearch

  # Searches for matches in QuoteHeaderFeatureMappingCreatedBies
  quoteHeaderFeatureMappingCreatedBies: QuoteHeaderFeatureMappingSearch

  # Searches for matches in QuoteHeaderFeatureMappingModifiedBies
  quoteHeaderFeatureMappingModifiedBies: QuoteHeaderFeatureMappingSearch

  # Searches for matches in QuoteHeaderModifiedBies
  quoteHeaderModifiedBies: QuoteHeaderSearch

  # Searches for matches in QuoteHeaderSalesPeople
  quoteHeaderSalesPeople: QuoteHeaderSearch

  # Searches for matches in QuoteItemCreatedBies
  quoteItemCreatedBies: QuoteItemSearch

  # Searches for matches in QuoteItemModifiedBies
  quoteItemModifiedBies: QuoteItemSearch

  # Searches for matches in SalesOrderHeaderCreatedBies
  salesOrderHeaderCreatedBies: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderHeaderFeatureMappingCreatedBies
  salesOrderHeaderFeatureMappingCreatedBies: SalesOrderHeaderFeatureMappingSearch

  # Searches for matches in SalesOrderHeaderFeatureMappingModifiedBies
  salesOrderHeaderFeatureMappingModifiedBies: SalesOrderHeaderFeatureMappingSearch

  # Searches for matches in SalesOrderHeaderModifiedBies
  salesOrderHeaderModifiedBies: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderHeaderSalesPeople
  salesOrderHeaderSalesPeople: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderItemCreatedBies
  salesOrderItemCreatedBies: SalesOrderItemSearch

  # Searches for matches in SalesOrderItemModifiedBies
  salesOrderItemModifiedBies: SalesOrderItemSearch

  # Searches for matches in SalesOrderItemUnitCreatedBies
  salesOrderItemUnitCreatedBies: SalesOrderItemUnitSearch

  # Searches for matches in SalesOrderItemUnitModifiedBies
  salesOrderItemUnitModifiedBies: SalesOrderItemUnitSearch

  # Searches for matches in SalesOrderRequestHeaderCreatedBies
  salesOrderRequestHeaderCreatedBies: SalesOrderRequestHeaderSearch

  # Searches for matches in SalesOrderRequestHeaderModifiedBies
  salesOrderRequestHeaderModifiedBies: SalesOrderRequestHeaderSearch

  # Searches for matches in SalesOrderRequestItemCreatedBies
  salesOrderRequestItemCreatedBies: SalesOrderRequestItemSearch

  # Searches for matches in SalesOrderRequestItemModifiedBies
  salesOrderRequestItemModifiedBies: SalesOrderRequestItemSearch

  # Searches for matches in StockCreatedBies
  stockCreatedBies: StockSearch

  # Searches for matches in StockFeatureMappingCreatedBies
  stockFeatureMappingCreatedBies: StockFeatureMappingSearch

  # Searches for matches in StockFeatureMappingModifiedBies
  stockFeatureMappingModifiedBies: StockFeatureMappingSearch

  # Searches for matches in StockLocationCreatedBies
  stockLocationCreatedBies: StockLocationSearch

  # Searches for matches in StockLocationModifiedBies
  stockLocationModifiedBies: StockLocationSearch

  # Searches for matches in StockModifiedBies
  stockModifiedBies: StockSearch

  # Searches for matches in StockMovementCreatedBies
  stockMovementCreatedBies: StockMovementSearch

  # Searches for matches in StockMovementModifiedBies
  stockMovementModifiedBies: StockMovementSearch

  # Searches for matches in StockMovementParentTypeCreatedBies
  stockMovementParentTypeCreatedBies: StockMovementParentTypeSearch

  # Searches for matches in StockMovementParentTypeModifiedBies
  stockMovementParentTypeModifiedBies: StockMovementParentTypeSearch

  # Searches for matches in StockMovementRequestHeaderCreatedBies
  stockMovementRequestHeaderCreatedBies: StockMovementRequestHeaderSearch

  # Searches for matches in StockMovementRequestHeaderModifiedBies
  stockMovementRequestHeaderModifiedBies: StockMovementRequestHeaderSearch

  # Searches for matches in StockMovementRequestHeaderRequestedBies
  stockMovementRequestHeaderRequestedBies: StockMovementRequestHeaderSearch

  # Searches for matches in StockMovementRequestHeaderRequestedFors
  stockMovementRequestHeaderRequestedFors: StockMovementRequestHeaderSearch

  # Searches for matches in StockMovementRequestItemCompletedBies
  stockMovementRequestItemCompletedBies: StockMovementRequestItemSearch

  # Searches for matches in StockMovementRequestItemCreatedBies
  stockMovementRequestItemCreatedBies: StockMovementRequestItemSearch

  # Searches for matches in StockMovementRequestItemModifiedBies
  stockMovementRequestItemModifiedBies: StockMovementRequestItemSearch

  # Searches for matches in StockMovementTransactionCreatedBies
  stockMovementTransactionCreatedBies: StockMovementTransactionSearch

  # Searches for matches in StockMovementTransactionModifiedBies
  stockMovementTransactionModifiedBies: StockMovementTransactionSearch

  # Searches for matches in StockMovementTypeCreatedBies
  stockMovementTypeCreatedBies: StockMovementTypeSearch

  # Searches for matches in StockMovementTypeModifiedBies
  stockMovementTypeModifiedBies: StockMovementTypeSearch

  # Searches for matches in StockTakeAdjustmentCodeCreatedBies
  stockTakeAdjustmentCodeCreatedBies: StockTakeAdjustmentCodeSearch

  # Searches for matches in StockTakeAdjustmentCodeModifiedBies
  stockTakeAdjustmentCodeModifiedBies: StockTakeAdjustmentCodeSearch

  # Searches for matches in StockTakeDiscrepancyCreatedBies
  stockTakeDiscrepancyCreatedBies: StockTakeDiscrepancySearch

  # Searches for matches in StockTakeDiscrepancyModifiedBies
  stockTakeDiscrepancyModifiedBies: StockTakeDiscrepancySearch

  # Searches for matches in StockTakeHeaderCreatedBies
  stockTakeHeaderCreatedBies: StockTakeHeaderSearch

  # Searches for matches in StockTakeHeaderModifiedBies
  stockTakeHeaderModifiedBies: StockTakeHeaderSearch

  # Searches for matches in StockTakeItemBookedInBies
  stockTakeItemBookedInBies: StockTakeItemSearch

  # Searches for matches in StockTakeItemCreatedBies
  stockTakeItemCreatedBies: StockTakeItemSearch

  # Searches for matches in StockTakeItemModifiedBies
  stockTakeItemModifiedBies: StockTakeItemSearch

  # Searches for matches in StockTallyCreatedBies
  stockTallyCreatedBies: StockTallySearch

  # Searches for matches in StockTallyModifiedBies
  stockTallyModifiedBies: StockTallySearch

  # Searches for matches in StockThresholdCreatedBies
  stockThresholdCreatedBies: StockThresholdSearch

  # Searches for matches in StockThresholdModifiedBies
  stockThresholdModifiedBies: StockThresholdSearch

  # Searches for matches in StockUnitAssetCreatedBies
  stockUnitAssetCreatedBies: StockUnitAssetSearch

  # Searches for matches in StockUnitAssetModifiedBies
  stockUnitAssetModifiedBies: StockUnitAssetSearch

  # Searches for matches in StockUnitAttributeCreatedBies
  stockUnitAttributeCreatedBies: StockUnitAttributeSearch

  # Searches for matches in StockUnitAttributeModifiedBies
  stockUnitAttributeModifiedBies: StockUnitAttributeSearch

  # Searches for matches in StockUnitCreatedBies
  stockUnitCreatedBies: StockUnitSearch

  # Searches for matches in StockUnitGroupCreatedBies
  stockUnitGroupCreatedBies: StockUnitGroupSearch

  # Searches for matches in StockUnitGroupModifiedBies
  stockUnitGroupModifiedBies: StockUnitGroupSearch

  # Searches for matches in StockUnitModifiedBies
  stockUnitModifiedBies: StockUnitSearch

  # Searches for matches in StockUnitTransactionCreatedBies
  stockUnitTransactionCreatedBies: StockUnitTransactionSearch

  # Searches for matches in StockUnitTransactionModifiedBies
  stockUnitTransactionModifiedBies: StockUnitTransactionSearch

  # Searches for matches in SupplierCreatedBies
  supplierCreatedBies: SupplierSearch

  # Searches for matches in SupplierFeatureMappingCreatedBies
  supplierFeatureMappingCreatedBies: SupplierFeatureMappingSearch

  # Searches for matches in SupplierFeatureMappingModifiedBies
  supplierFeatureMappingModifiedBies: SupplierFeatureMappingSearch

  # Searches for matches in SupplierModifiedBies
  supplierModifiedBies: SupplierSearch

  # Searches for matches in SupplierProviderMappingCreatedBies
  supplierProviderMappingCreatedBies: SupplierProviderMappingSearch

  # Searches for matches in SupplierProviderMappingModifiedBies
  supplierProviderMappingModifiedBies: SupplierProviderMappingSearch

  # Searches for matches in SupplierPurchaseLedgerControllers
  supplierPurchaseLedgerControllers: SupplierSearch

  # Searches for matches in SupplierStockAndCostCreatedBies
  supplierStockAndCostCreatedBies: SupplierStockAndCostSearch

  # Searches for matches in SupplierStockAndCostModifiedBies
  supplierStockAndCostModifiedBies: SupplierStockAndCostSearch

  # Searches for matches in Teams
  teams: TeamSearch

  # Searches for matches in UserProfileDepartmentMappingCreatedBies
  userProfileDepartmentMappingCreatedBies: UserProfileDepartmentMappingSearch

  # Searches for matches in UserProfileDepartmentMappingUserProfiles
  userProfileDepartmentMappingUserProfiles: UserProfileDepartmentMappingSearch

  # Searches for matches in UserProfileTargetCreatedBies
  userProfileTargetCreatedBies: UserProfileTargetSearch

  # Searches for matches in UserProfileTargetUserProfiles
  userProfileTargetUserProfiles: UserProfileTargetSearch

  # Searches for matches in UserProfileTeamMappingCreatedBies
  userProfileTeamMappingCreatedBies: UserProfileTeamMappingSearch

  # Searches for matches in UserProfileTeamMappingUserProfiles
  userProfileTeamMappingUserProfiles: UserProfileTeamMappingSearch

  # Searches for matches in WarrantyCreatedBies
  warrantyCreatedBies: WarrantySearch

  # Searches for matches in WarrantyModifiedBies
  warrantyModifiedBies: WarrantySearch
}

# Area SearchContext
input AreaSearch {
  # Id
  id: [IntSearch]

  # AreaName
  areaName: [StringSearchType]

  # ParentAreaId
  parentAreaId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ParentArea
  parentArea: AreaSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in InverseParentArea
  inverseParentArea: AreaSearch

  # Searches for matches in NonOrderedGoodsHeaders
  nonOrderedGoodsHeaders: NonOrderedGoodsHeaderSearch

  # Searches for matches in StockLocations
  stockLocations: StockLocationSearch

  # Searches for matches in UserProfiles
  userProfiles: UserProfileSearch
}

# GoodsReceivedNoteHeader SearchContext
input GoodsReceivedNoteHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # DateReceived
  dateReceived: [DateTimeSearch]

  # ReceivedById
  receivedById: [IntSearch]

  # AreaId
  areaId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # GoodsReceivedNoteTransactionId
  goodsReceivedNoteTransactionId: [IntSearch]

  # StockMovementRequestHeaderId
  stockMovementRequestHeaderId: [IntSearch]

  # OriginRef
  originRef: [StringSearchType]

  # CustomerId
  customerId: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # CompletedDate
  completedDate: [DateTimeSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Area
  area: AreaSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch

  # GoodsReceivedNoteTransaction
  goodsReceivedNoteTransaction: GoodsReceivedNoteTransactionSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ReceivedBy
  receivedBy: UserProfileSearch

  # StockMovementRequestHeader
  stockMovementRequestHeader: StockMovementRequestHeaderSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Supplier
  supplier: SupplierSearch

  # Searches for matches in GoodsReceivedNoteItems
  goodsReceivedNoteItems: GoodsReceivedNoteItemSearch
}

# Correlation SearchContext
input CorrelationSearch {
  # Id
  id: [IntSearch]

  # CorrelationCode
  correlationCode: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in BuildRequestHeaders
  buildRequestHeaders: BuildRequestHeaderSearch

  # Searches for matches in CustomerCreditNoteHeaders
  customerCreditNoteHeaders: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaders
  customerPurchaseOrderRequestHeaders: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnRequestHeaders
  customerReturnRequestHeaders: CustomerReturnRequestHeaderSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in NonOrderedGoodsHeaders
  nonOrderedGoodsHeaders: NonOrderedGoodsHeaderSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderRequestHeaders
  salesOrderRequestHeaders: SalesOrderRequestHeaderSearch
}

# BuildRequestHeader SearchContext
input BuildRequestHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # RequiredDate
  requiredDate: [DateTimeSearch]

  # CustomerId
  customerId: [IntSearch]

  # ContactId
  contactId: [IntSearch]

  # CustomerPo
  customerPo: [StringSearchType]

  # CustomerRef
  customerRef: [StringSearchType]

  # RequestedById
  requestedById: [IntSearch]

  # AssignedToId
  assignedToId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # StartDate
  startDate: [DateTimeSearch]

  # CompletedDate
  completedDate: [DateTimeSearch]

  # CompletedById
  completedById: [IntSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # ConfigurationDetails
  configurationDetails: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # AssignedTo
  assignedTo: UserProfileSearch

  # CompletedBy
  completedBy: UserProfileSearch

  # Contact
  contact: ContactSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # RequestedBy
  requestedBy: UserProfileSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in BuildRequestHeaderFeatureMappings
  buildRequestHeaderFeatureMappings: BuildRequestHeaderFeatureMappingSearch

  # Searches for matches in BuildRequestItems
  buildRequestItems: BuildRequestItemSearch
}

# Contact SearchContext
input ContactSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # AddressId
  addressId: [IntSearch]

  # Title
  title: [StringSearchType]

  # Salutation
  salutation: [StringSearchType]

  # Name
  name: [StringSearchType]

  # JobTitle
  jobTitle: [StringSearchType]

  # StormStatusId
  stormStatusId: [IntSearch]

  # Email
  email: [StringSearchType]

  # PhoneNumber
  phoneNumber: [StringSearchType]

  # Extension
  extension: [StringSearchType]

  # MobileNumber
  mobileNumber: [StringSearchType]

  # Mailshots
  mailshots: [BooleanSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Address
  address: AddressSearch

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in BuildRequestHeaders
  buildRequestHeaders: BuildRequestHeaderSearch

  # Searches for matches in ContactFeatureMappings
  contactFeatureMappings: ContactFeatureMappingSearch

  # Searches for matches in CustomerContactMappings
  customerContactMappings: CustomerContactMappingSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in SupplierContactMappings
  supplierContactMappings: SupplierContactMappingSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# MemoMapping SearchContext
input MemoMappingSearch {
  # Id
  id: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Addresses
  addresses: AddressSearch

  # Searches for matches in AssetRollHeaders
  assetRollHeaders: AssetRollHeaderSearch

  # Searches for matches in AssetRollItems
  assetRollItems: AssetRollItemSearch

  # Searches for matches in BuildRequestHeaders
  buildRequestHeaders: BuildRequestHeaderSearch

  # Searches for matches in BuildRequestItemUnits
  buildRequestItemUnits: BuildRequestItemUnitSearch

  # Searches for matches in Contacts
  contacts: ContactSearch

  # Searches for matches in Couriers
  couriers: CourierSearch

  # Searches for matches in CustomerCreditNoteHeaders
  customerCreditNoteHeaders: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnItemUnits
  customerReturnItemUnits: CustomerReturnItemUnitSearch

  # Searches for matches in CustomerReturnRequestHeaders
  customerReturnRequestHeaders: CustomerReturnRequestHeaderSearch

  # Searches for matches in CustomerReturnRequestItemUnits
  customerReturnRequestItemUnits: CustomerReturnRequestItemUnitSearch

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in Incidentals
  incidentals: IncidentalSearch

  # Searches for matches in Memos
  memos: MemoSearch

  # Searches for matches in NonOrderedGoodsHeaders
  nonOrderedGoodsHeaders: NonOrderedGoodsHeaderSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in ProofOfDeliveries
  proofOfDeliveries: ProofOfDeliverySearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in StockMovementRequestHeaders
  stockMovementRequestHeaders: StockMovementRequestHeaderSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch

  # Searches for matches in StockTakeHeaders
  stockTakeHeaders: StockTakeHeaderSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch

  # Searches for matches in Stocks
  stocks: StockSearch

  # Searches for matches in SupplierStockAndCosts
  supplierStockAndCosts: SupplierStockAndCostSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# AssetRollHeader SearchContext
input AssetRollHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerId
  customerId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # AssetTagPrefix
  assetTagPrefix: [StringSearchType]

  # StartNumber
  startNumber: [IntSearch]

  # EndNumber
  endNumber: [IntSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # SalesOrderItemId
  salesOrderItemId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # SalesOrderItem
  salesOrderItem: SalesOrderItemSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in AssetRollItems
  assetRollItems: AssetRollItemSearch
}

# Customer SearchContext
input CustomerSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerAddressMappingId
  customerAddressMappingId: [IntSearch]

  # SageAccount
  sageAccount: [StringSearchType]

  # CustomerName
  customerName: [StringSearchType]

  # CompanyNumber
  companyNumber: [StringSearchType]

  # PrimaryContactId
  primaryContactId: [IntSearch]

  # AccountSetupDate
  accountSetupDate: [DateTimeSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # ParentCustomerId
  parentCustomerId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # CreditControllerId
  creditControllerId: [IntSearch]

  # CustomerPaymentTermId
  customerPaymentTermId: [IntSearch]

  # QuoteValidationTermId
  quoteValidationTermId: [IntSearch]

  # Urn
  urn: [StringSearchType]

  # SectorId
  sectorId: [IntSearch]

  # IsPublic
  isPublic: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # IsCustomerVisible
  isCustomerVisible: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CreditController
  creditController: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # CustomerAddressMapping
  customerAddressMapping: CustomerAddressMappingSearch

  # CustomerPaymentTerm
  customerPaymentTerm: CustomerPaymentTermSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ParentCustomer
  parentCustomer: CustomerSearch

  # PrimaryContact
  primaryContact: ContactSearch

  # QuoteValidationTerm
  quoteValidationTerm: QuoteValidationTermSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # Sector
  sector: SectorSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in AssetRollHeaders
  assetRollHeaders: AssetRollHeaderSearch

  # Searches for matches in BuildRequestHeaders
  buildRequestHeaders: BuildRequestHeaderSearch

  # Searches for matches in CustomerContactMappings
  customerContactMappings: CustomerContactMappingSearch

  # Searches for matches in CustomerCreditNoteHeaders
  customerCreditNoteHeaders: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerFeatureMappings
  customerFeatureMappings: CustomerFeatureMappingSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaders
  customerPurchaseOrderRequestHeaders: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnRequestHeaders
  customerReturnRequestHeaders: CustomerReturnRequestHeaderSearch

  # Searches for matches in CustomerSageAuxes
  customerSageAuxes: CustomerSageAuxSearch

  # Searches for matches in CustomerStockLevelCustomers
  customerStockLevelCustomers: CustomerStockLevelSearch

  # Searches for matches in CustomerStockLevelParentCustomers
  customerStockLevelParentCustomers: CustomerStockLevelSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in InverseParentCustomer
  inverseParentCustomer: CustomerSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderRequestHeaders
  salesOrderRequestHeaders: SalesOrderRequestHeaderSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# Currency SearchContext
input CurrencySearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # CurrencyCode
  currencyCode: [StringSearchType]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # DefaultLocaleId
  defaultLocaleId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # DefaultLocale
  defaultLocale: LocaleSearch

  # Searches for matches in CustomerCreditNoteHeaders
  customerCreditNoteHeaders: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaders
  customerPurchaseOrderRequestHeaders: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderRequestHeaders
  salesOrderRequestHeaders: SalesOrderRequestHeaderSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# Float search, used for float, double.
input FloatSearch {
  #
  operator: SearchOperatorEnumType = OR

  # Operator
  method: NumberSearchMethod = equal
  values: [Float]
}

# Locale SearchContext
input LocaleSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Value
  value: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Currencies
  currencies: CurrencySearch
}

# CustomerCreditNoteHeader SearchContext
input CustomerCreditNoteHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # CustomerInvoiceHeaderId
  customerInvoiceHeaderId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # CustomerPo
  customerPo: [StringSearchType]

  # CustomerRef
  customerRef: [StringSearchType]

  # DatePaid
  datePaid: [DateTimeSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # NettTotal
  nettTotal: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # GrossTotal
  grossTotal: [FloatSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # DeliveryCharge
  deliveryCharge: [FloatSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsPaid
  isPaid: [BooleanSearch]

  # IncoTerm
  incoTerm: [StringSearchType]

  # IsSubmitted
  isSubmitted: [BooleanSearch]

  # IsCommissionExcluded
  isCommissionExcluded: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # CustomerInvoiceHeader
  customerInvoiceHeader: CustomerInvoiceHeaderSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in CustomerCreditNoteItems
  customerCreditNoteItems: CustomerCreditNoteItemSearch
}

# CustomerInvoiceHeader SearchContext
input CustomerInvoiceHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # DateInvoiced
  dateInvoiced: [DateTimeSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # DispatchNoteHeaderId
  dispatchNoteHeaderId: [IntSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # CustomerPo
  customerPo: [StringSearchType]

  # DateDispatched
  dateDispatched: [DateTimeSearch]

  # DatePaid
  datePaid: [DateTimeSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # NettTotal
  nettTotal: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # GrossTotal
  grossTotal: [FloatSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # DeliveryCharge
  deliveryCharge: [FloatSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # PaymentTermId
  paymentTermId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # DispatchNoteHeader
  dispatchNoteHeader: DispatchNoteHeaderSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # PaymentTerm
  paymentTerm: PaymentTermSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in CustomerCreditNoteHeaders
  customerCreditNoteHeaders: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerInvoiceItemUnits
  customerInvoiceItemUnits: CustomerInvoiceItemUnitSearch

  # Searches for matches in CustomerInvoiceItems
  customerInvoiceItems: CustomerInvoiceItemSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch
}

# DispatchNoteHeader SearchContext
input DispatchNoteHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # DateRequired
  dateRequired: [DateTimeSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # DispatchNoteTransactionId
  dispatchNoteTransactionId: [IntSearch]

  # CustomerInvoiceHeaderId
  customerInvoiceHeaderId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # DeliveryMethodId
  deliveryMethodId: [IntSearch]

  # CustomerPo
  customerPo: [StringSearchType]

  # CorrelationId
  correlationId: [IntSearch]

  # CourierId
  courierId: [IntSearch]

  # CourierCost
  courierCost: [FloatSearch]

  # RequestedDeliveryMethodId
  requestedDeliveryMethodId: [IntSearch]

  # RequestedCourierId
  requestedCourierId: [IntSearch]

  # RequestedDispatchDate
  requestedDispatchDate: [DateTimeSearch]

  # DispatchedFor
  dispatchedFor: [IntSearch]

  # DispatchedById
  dispatchedById: [IntSearch]

  # DateDispatched
  dateDispatched: [DateTimeSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # CustomerRef
  customerRef: [StringSearchType]

  # ProofOfDeliveryId
  proofOfDeliveryId: [IntSearch]

  # CourierRef
  courierRef: [StringSearchType]

  # TrackingRef
  trackingRef: [StringSearchType]

  # DeliverySpecialInstructions
  deliverySpecialInstructions: [StringSearchType]

  # StormStatusId
  stormStatusId: [IntSearch]

  # BoxesShipped
  boxesShipped: [IntSearch]

  # RequestedAddressId
  requestedAddressId: [IntSearch]

  # IncoTermId
  incoTermId: [IntSearch]

  # AddressId
  addressId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Address
  address: AddressSearch

  # Application
  application: ApplicationSearch

  # Correlation
  correlation: CorrelationSearch

  # Courier
  courier: CourierSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # CustomerInvoiceHeader
  customerInvoiceHeader: CustomerInvoiceHeaderSearch

  # DeliveryMethod
  deliveryMethod: DeliveryMethodSearch

  # DispatchNoteTransaction
  dispatchNoteTransaction: DispatchNoteTransactionSearch

  # DispatchedBy
  dispatchedBy: UserProfileSearch

  # DispatchedForNavigation
  dispatchedForNavigation: ContactSearch

  # IncoTerm
  incoTerm: IncoTermSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ProofOfDelivery
  proofOfDelivery: ProofOfDeliverySearch

  # RequestedAddress
  requestedAddress: AddressSearch

  # RequestedCourier
  requestedCourier: CourierSearch

  # RequestedDeliveryMethod
  requestedDeliveryMethod: DeliveryMethodSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in DispatchNoteHeaderFeatureMappings
  dispatchNoteHeaderFeatureMappings: DispatchNoteHeaderFeatureMappingSearch

  # Searches for matches in DispatchNoteItems
  dispatchNoteItems: DispatchNoteItemSearch

  # Searches for matches in ProofOfDeliveries
  proofOfDeliveries: ProofOfDeliverySearch
}

# Courier SearchContext
input CourierSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # Name
  name: [StringSearchType]

  # Description
  description: [StringSearchType]

  # UrlReferrer
  urlReferrer: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in CourierDeliveryMethods
  courierDeliveryMethods: CourierDeliveryMethodSearch

  # Searches for matches in DispatchNoteHeaderCouriers
  dispatchNoteHeaderCouriers: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteHeaderRequestedCouriers
  dispatchNoteHeaderRequestedCouriers: DispatchNoteHeaderSearch
}

# StormStatus SearchContext
input StormStatusSearch {
  # Id
  id: [IntSearch]

  # Status
  status: [StringSearchType]

  # Description
  description: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in AssetRollHeaders
  assetRollHeaders: AssetRollHeaderSearch

  # Searches for matches in AssetRollItems
  assetRollItems: AssetRollItemSearch

  # Searches for matches in BuildRequestHeaders
  buildRequestHeaders: BuildRequestHeaderSearch

  # Searches for matches in Categories
  categories: CategorySearch

  # Searches for matches in Contacts
  contacts: ContactSearch

  # Searches for matches in Couriers
  couriers: CourierSearch

  # Searches for matches in CustomerCreditNoteHeaders
  customerCreditNoteHeaders: CustomerCreditNoteHeaderSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaders
  customerPurchaseOrderRequestHeaders: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerReturnHeaderRequestTypes
  customerReturnHeaderRequestTypes: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnHeaderStormStatuses
  customerReturnHeaderStormStatuses: CustomerReturnHeaderSearch

  # Searches for matches in CustomerReturnItems
  customerReturnItems: CustomerReturnItemSearch

  # Searches for matches in CustomerReturnRequestHeaders
  customerReturnRequestHeaders: CustomerReturnRequestHeaderSearch

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in Incidentals
  incidentals: IncidentalSearch

  # Searches for matches in NonOrderedGoodsHeaders
  nonOrderedGoodsHeaders: NonOrderedGoodsHeaderSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch

  # Searches for matches in SalesOrderRequestHeaders
  salesOrderRequestHeaders: SalesOrderRequestHeaderSearch

  # Searches for matches in StockMovementRequestHeaders
  stockMovementRequestHeaders: StockMovementRequestHeaderSearch

  # Searches for matches in StockTakeHeaders
  stockTakeHeaders: StockTakeHeaderSearch

  # Searches for matches in StormStatusMappings
  stormStatusMappings: StormStatusMappingSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# AssetRollItem SearchContext
input AssetRollItemSearch {
  # Id
  id: [IntSearch]

  # AssetRollHeader
  assetRollHeader: [IntSearch]

  # AssetTag
  assetTag: [StringSearchType]

  # BuildRequestUnitId
  buildRequestUnitId: [IntSearch]

  # SalesOrderItemUnitId
  salesOrderItemUnitId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Application
  application: ApplicationSearch

  # AssetRollHeaderNavigation
  assetRollHeaderNavigation: AssetRollHeaderSearch

  # BuildRequestUnit
  buildRequestUnit: BuildRequestItemUnitSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # SalesOrderItemUnit
  salesOrderItemUnit: SalesOrderItemUnitSearch

  # StormStatus
  stormStatus: StormStatusSearch
}

# BuildRequestItemUnit SearchContext
input BuildRequestItemUnitSearch {
  # Id
  id: [IntSearch]

  # BuildRequestItemId
  buildRequestItemId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # SalesOrderItemId
  salesOrderItemId: [IntSearch]

  # SalesOrderItemUnitId
  salesOrderItemUnitId: [IntSearch]

  # SerialNo
  serialNo: [StringSearchType]

  # AssetTag
  assetTag: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # BuildRequestItem
  buildRequestItem: BuildRequestItemSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderItem
  salesOrderItem: SalesOrderItemSearch

  # SalesOrderItemUnit
  salesOrderItemUnit: SalesOrderItemUnitSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in AssetRollItems
  assetRollItems: AssetRollItemSearch
}

# BuildRequestItem SearchContext
input BuildRequestItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # BuildRequestHeaderId
  buildRequestHeaderId: [IntSearch]

  # IsAssetTagRequired
  isAssetTagRequired: [BooleanSearch]

  # SalesOrderItemId
  salesOrderItemId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # Qty
  qty: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # BuildRequestHeader
  buildRequestHeader: BuildRequestHeaderSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderItem
  salesOrderItem: SalesOrderItemSearch

  # Stock
  stock: StockSearch

  # Searches for matches in BuildRequestItemUnits
  buildRequestItemUnits: BuildRequestItemUnitSearch
}

# SalesOrderItem SearchContext
input SalesOrderItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # SortOrder
  sortOrder: [IntSearch]

  # CustomerRef
  customerRef: [StringSearchType]

  # QtyOrdered
  qtyOrdered: [IntSearch]

  # QtyAllocated
  qtyAllocated: [IntSearch]

  # QtyInvoiced
  qtyInvoiced: [IntSearch]

  # QtyOutstanding
  qtyOutstanding: [IntSearch]

  # QtyDispatched
  qtyDispatched: [IntSearch]

  # QtyQueued
  qtyQueued: [IntSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # TotalUnitProfit
  totalUnitProfit: [FloatSearch]

  # TotalUnitMargin
  totalUnitMargin: [FloatSearch]

  # TotalUnitMarkup
  totalUnitMarkup: [FloatSearch]

  # TotalUnitInvoiced
  totalUnitInvoiced: [FloatSearch]

  # TotalUnitUnInvoiced
  totalUnitUnInvoiced: [FloatSearch]

  # AvgCost
  avgCost: [FloatSearch]

  # AvgPrice
  avgPrice: [FloatSearch]

  # Vatrate
  vatrate: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # IsEditable
  isEditable: [BooleanSearch]

  # SupplierStockAndCostId
  supplierStockAndCostId: [IntSearch]

  # IsCustomerVisible
  isCustomerVisible: [BooleanSearch]

  # LeadTime
  leadTime: [DateTimeSearch]

  # ParentBundleId
  parentBundleId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ParentBundle
  parentBundle: SalesOrderItemSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # Stock
  stock: StockSearch

  # SupplierStockAndCost
  supplierStockAndCost: SupplierStockAndCostSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in AssetRollHeaders
  assetRollHeaders: AssetRollHeaderSearch

  # Searches for matches in BuildRequestItemUnits
  buildRequestItemUnits: BuildRequestItemUnitSearch

  # Searches for matches in BuildRequestItems
  buildRequestItems: BuildRequestItemSearch

  # Searches for matches in Incidentals
  incidentals: IncidentalSearch

  # Searches for matches in InverseParentBundle
  inverseParentBundle: SalesOrderItemSearch

  # Searches for matches in SalesOrderItemUnits
  salesOrderItemUnits: SalesOrderItemUnitSearch
}

# SalesOrderHeader SearchContext
input SalesOrderHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # DateRequired
  dateRequired: [DateTimeSearch]

  # CustomerId
  customerId: [IntSearch]

  # CustomerRef
  customerRef: [StringSearchType]

  # CustomerPaymentTermId
  customerPaymentTermId: [IntSearch]

  # CustomerPo
  customerPo: [StringSearchType]

  # ContactId
  contactId: [IntSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # QuoteHeaderId
  quoteHeaderId: [IntSearch]

  # TotalSaleCost
  totalSaleCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalProfit
  totalProfit: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # TotalMargin
  totalMargin: [FloatSearch]

  # TotalMarkup
  totalMarkup: [FloatSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # DeliveryCharge
  deliveryCharge: [FloatSearch]

  # TotalInvoiced
  totalInvoiced: [FloatSearch]

  # TotalUnInvoiced
  totalUnInvoiced: [FloatSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # TotalCourierCost
  totalCourierCost: [FloatSearch]

  # TotalShippingCost
  totalShippingCost: [FloatSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # TotalNetCost
  totalNetCost: [FloatSearch]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # IsEditable
  isEditable: [BooleanSearch]

  # RequestedAddressId
  requestedAddressId: [IntSearch]

  # IncoTermId
  incoTermId: [IntSearch]

  # Etadate
  etadate: [DateTimeSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Contact
  contact: ContactSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # CustomerPaymentTerm
  customerPaymentTerm: CustomerPaymentTermSearch

  # IncoTerm
  incoTerm: IncoTermSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # QuoteHeader
  quoteHeader: QuoteHeaderSearch

  # RequestedAddress
  requestedAddress: AddressSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in AssetRollHeaders
  assetRollHeaders: AssetRollHeaderSearch

  # Searches for matches in BuildRequestHeaders
  buildRequestHeaders: BuildRequestHeaderSearch

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaders
  customerPurchaseOrderRequestHeaders: CustomerPurchaseOrderRequestHeaderSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch

  # Searches for matches in DispatchNoteTransactions
  dispatchNoteTransactions: DispatchNoteTransactionSearch

  # Searches for matches in Incidentals
  incidentals: IncidentalSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in PurchaseOrderItemUnits
  purchaseOrderItemUnits: PurchaseOrderItemUnitSearch

  # Searches for matches in SalesOrderHeaderFeatureMappings
  salesOrderHeaderFeatureMappings: SalesOrderHeaderFeatureMappingSearch

  # Searches for matches in SalesOrderHeaderResponseEmailMappings
  salesOrderHeaderResponseEmailMappings: SalesOrderHeaderResponseEmailMappingSearch

  # Searches for matches in SalesOrderItems
  salesOrderItems: SalesOrderItemSearch
}

# CustomerPaymentTerm SearchContext
input CustomerPaymentTermSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch
}

# IncoTerm SearchContext
input IncoTermSearch {
  # Id
  id: [IntSearch]

  # Code
  code: [StringSearchType]

  # Description
  description: [StringSearchType]

  # SortOrder
  sortOrder: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch
}

# QuoteHeader SearchContext
input QuoteHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerId
  customerId: [IntSearch]

  # QuoteValidationTermId
  quoteValidationTermId: [IntSearch]

  # ContactId
  contactId: [IntSearch]

  # DateRequired
  dateRequired: [DateTimeSearch]

  # CloseByDate
  closeByDate: [DateTimeSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalProfit
  totalProfit: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # TotalMargin
  totalMargin: [FloatSearch]

  # TotalMarkup
  totalMarkup: [FloatSearch]

  # DeliveryCharge
  deliveryCharge: [FloatSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # PrintComments
  printComments: [StringSearchType]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Contact
  contact: ContactSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # QuoteValidationTerm
  quoteValidationTerm: QuoteValidationTermSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in ProFormaInvoiceHeaders
  proFormaInvoiceHeaders: ProFormaInvoiceHeaderSearch

  # Searches for matches in QuoteHeaderFeatureMappings
  quoteHeaderFeatureMappings: QuoteHeaderFeatureMappingSearch

  # Searches for matches in QuoteItems
  quoteItems: QuoteItemSearch

  # Searches for matches in SalesOrderHeaders
  salesOrderHeaders: SalesOrderHeaderSearch
}

# QuoteValidationTerm SearchContext
input QuoteValidationTermSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in QuoteHeaders
  quoteHeaders: QuoteHeaderSearch
}

# ProFormaInvoiceHeader SearchContext
input ProFormaInvoiceHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerId
  customerId: [IntSearch]

  # QuoteHeaderId
  quoteHeaderId: [IntSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # ContactId
  contactId: [IntSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalProfit
  totalProfit: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # TotalMargin
  totalMargin: [FloatSearch]

  # DeliveryCharge
  deliveryCharge: [FloatSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # PrintComments
  printComments: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Contact
  contact: ContactSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # QuoteHeader
  quoteHeader: QuoteHeaderSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in ProFormaInvoiceHeaderFeatureMappings
  proFormaInvoiceHeaderFeatureMappings: ProFormaInvoiceHeaderFeatureMappingSearch

  # Searches for matches in ProFormaInvoiceItems
  proFormaInvoiceItems: ProFormaInvoiceItemSearch
}

# ProFormaInvoiceHeaderFeatureMapping SearchContext
input ProFormaInvoiceHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # ProFormaInvoiceHeaderId
  proFormaInvoiceHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ProFormaInvoiceHeader
  proFormaInvoiceHeader: ProFormaInvoiceHeaderSearch
}

# Feature SearchContext
input FeatureSearch {
  # Id
  id: [IntSearch]

  # Alias
  alias: [StringSearchType]

  # Description
  description: [StringSearchType]

  # DefaultValue
  defaultValue: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in AddressFeatureMappings
  addressFeatureMappings: AddressFeatureMappingSearch

  # Searches for matches in BuildRequestHeaderFeatureMappings
  buildRequestHeaderFeatureMappings: BuildRequestHeaderFeatureMappingSearch

  # Searches for matches in ContactFeatureMappings
  contactFeatureMappings: ContactFeatureMappingSearch

  # Searches for matches in CustomerFeatureMappings
  customerFeatureMappings: CustomerFeatureMappingSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaderFeatureMappings
  customerPurchaseOrderRequestHeaderFeatureMappings: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch

  # Searches for matches in CustomerReturnHeaderFeatureMappings
  customerReturnHeaderFeatureMappings: CustomerReturnHeaderFeatureMappingSearch

  # Searches for matches in DispatchNoteHeaderFeatureMappings
  dispatchNoteHeaderFeatureMappings: DispatchNoteHeaderFeatureMappingSearch

  # Searches for matches in ProFormaInvoiceHeaderFeatureMappings
  proFormaInvoiceHeaderFeatureMappings: ProFormaInvoiceHeaderFeatureMappingSearch

  # Searches for matches in PurchaseOrderHeaderFeatureMappings
  purchaseOrderHeaderFeatureMappings: PurchaseOrderHeaderFeatureMappingSearch

  # Searches for matches in QuoteHeaderFeatureMappings
  quoteHeaderFeatureMappings: QuoteHeaderFeatureMappingSearch

  # Searches for matches in SalesOrderHeaderFeatureMappings
  salesOrderHeaderFeatureMappings: SalesOrderHeaderFeatureMappingSearch

  # Searches for matches in StockFeatureMappings
  stockFeatureMappings: StockFeatureMappingSearch

  # Searches for matches in SupplierFeatureMappings
  supplierFeatureMappings: SupplierFeatureMappingSearch
}

# BuildRequestHeaderFeatureMapping SearchContext
input BuildRequestHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # BuildRequestHeaderId
  buildRequestHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # BuildRequestHeader
  buildRequestHeader: BuildRequestHeaderSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch
}

# ContactFeatureMapping SearchContext
input ContactFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # ContactId
  contactId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Contact
  contact: ContactSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch
}

# CustomerFeatureMapping SearchContext
input CustomerFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch
}

# CustomerPurchaseOrderRequestHeaderFeatureMapping SearchContext
input CustomerPurchaseOrderRequestHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # CustomerPurchaseOrderRequestHeaderId
  customerPurchaseOrderRequestHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerPurchaseOrderRequestHeader
  customerPurchaseOrderRequestHeader: CustomerPurchaseOrderRequestHeaderSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch
}

# CustomerPurchaseOrderRequestHeader SearchContext
input CustomerPurchaseOrderRequestHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # DateRequired
  dateRequired: [DateTimeSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # AddressId
  addressId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # PurchaseOrderRequestType
  purchaseOrderRequestType: [StringSearchType]

  # PurchaseOrderReference
  purchaseOrderReference: [StringSearchType]

  # CorrelationId
  correlationId: [IntSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Address
  address: AddressSearch

  # Application
  application: ApplicationSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in CustomerPurchaseOrderRequestHeaderFeatureMappings
  customerPurchaseOrderRequestHeaderFeatureMappings: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch

  # Searches for matches in CustomerPurchaseOrderRequestItems
  customerPurchaseOrderRequestItems: CustomerPurchaseOrderRequestItemSearch

  # Searches for matches in SalesOrderRequestItems
  salesOrderRequestItems: SalesOrderRequestItemSearch
}

# CustomerPurchaseOrderRequestItem SearchContext
input CustomerPurchaseOrderRequestItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerPurchaseOrderRequestHeaderId
  customerPurchaseOrderRequestHeaderId: [IntSearch]

  # Description
  description: [StringSearchType]

  # StockId
  stockId: [IntSearch]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # PartNo
  partNo: [StringSearchType]

  # QtyRequested
  qtyRequested: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Vat
  vat: [FloatSearch]

  # Vatrate
  vatrate: [FloatSearch]

  # Type
  type: [StringSearchType]

  # VatcodeId
  vatcodeId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerPurchaseOrderRequestHeader
  customerPurchaseOrderRequestHeader: CustomerPurchaseOrderRequestHeaderSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch
}

# Stock SearchContext
input StockSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # PartNo
  partNo: [StringSearchType]

  # ManufacturerId
  manufacturerId: [IntSearch]

  # CategoryId
  categoryId: [IntSearch]

  # ProductDescription
  productDescription: [StringSearchType]

  # IsEditable
  isEditable: [BooleanSearch]

  # SourceUrl
  sourceUrl: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # AvgUnitCost
  avgUnitCost: [FloatSearch]

  # AvgUnitPrice
  avgUnitPrice: [FloatSearch]

  # LastUnitCost
  lastUnitCost: [FloatSearch]

  # MainImageUrl
  mainImageUrl: [StringSearchType]

  # ThumbImageUrl
  thumbImageUrl: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Category
  category: CategorySearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Manufacturer
  manufacturer: ManufacturerSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in BuildRequestItems
  buildRequestItems: BuildRequestItemSearch

  # Searches for matches in CustomerCreditNoteItems
  customerCreditNoteItems: CustomerCreditNoteItemSearch

  # Searches for matches in CustomerInvoiceItems
  customerInvoiceItems: CustomerInvoiceItemSearch

  # Searches for matches in CustomerPurchaseOrderRequestItems
  customerPurchaseOrderRequestItems: CustomerPurchaseOrderRequestItemSearch

  # Searches for matches in CustomerReturnItems
  customerReturnItems: CustomerReturnItemSearch

  # Searches for matches in CustomerStockLevels
  customerStockLevels: CustomerStockLevelSearch

  # Searches for matches in DispatchNoteItems
  dispatchNoteItems: DispatchNoteItemSearch

  # Searches for matches in GoodsReceivedNoteItems
  goodsReceivedNoteItems: GoodsReceivedNoteItemSearch

  # Searches for matches in NonOrderedGoodsItems
  nonOrderedGoodsItems: NonOrderedGoodsItemSearch

  # Searches for matches in ProFormaInvoiceItems
  proFormaInvoiceItems: ProFormaInvoiceItemSearch

  # Searches for matches in PurchaseOrderItems
  purchaseOrderItems: PurchaseOrderItemSearch

  # Searches for matches in QuoteItems
  quoteItems: QuoteItemSearch

  # Searches for matches in SalesOrderItems
  salesOrderItems: SalesOrderItemSearch

  # Searches for matches in SalesOrderRequestItems
  salesOrderRequestItems: SalesOrderRequestItemSearch

  # Searches for matches in StockFeatureMappings
  stockFeatureMappings: StockFeatureMappingSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch

  # Searches for matches in StockTakeDiscrepancies
  stockTakeDiscrepancies: StockTakeDiscrepancySearch

  # Searches for matches in StockTakeItems
  stockTakeItems: StockTakeItemSearch

  # Searches for matches in StockTallies
  stockTallies: StockTallySearch

  # Searches for matches in StockThresholds
  stockThresholds: StockThresholdSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# Category SearchContext
input CategorySearch {
  # Id
  id: [IntSearch]

  # ParentCategoryId
  parentCategoryId: [IntSearch]

  # Name
  name: [StringSearchType]

  # SortOrder
  sortOrder: [IntSearch]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # IsVirtual
  isVirtual: [BooleanSearch]

  # Unspsc
  unspsc: [StringSearchType]

  # StormStatusId
  stormStatusId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # CreatedBy
  createdBy: UserProfileSearch

  # ParentCategory
  parentCategory: CategorySearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in InverseParentCategory
  inverseParentCategory: CategorySearch

  # Searches for matches in Stocks
  stocks: StockSearch
}

# Manufacturer SearchContext
input ManufacturerSearch {
  # Id
  id: [IntSearch]

  # ParentManufacturerId
  parentManufacturerId: [IntSearch]

  # Name
  name: [StringSearchType]

  # IsVisible
  isVisible: [BooleanSearch]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # ParentManufacturer
  parentManufacturer: ManufacturerSearch

  # Searches for matches in GoodsReceivedNoteItems
  goodsReceivedNoteItems: GoodsReceivedNoteItemSearch

  # Searches for matches in InverseParentManufacturer
  inverseParentManufacturer: ManufacturerSearch

  # Searches for matches in Stocks
  stocks: StockSearch
}

# GoodsReceivedNoteItem SearchContext
input GoodsReceivedNoteItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # GoodsReceivedNoteHeaderId
  goodsReceivedNoteHeaderId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # ManufacturerId
  manufacturerId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # AvgCost
  avgCost: [FloatSearch]

  # IsEditable
  isEditable: [BooleanSearch]

  # QtyRequested
  qtyRequested: [IntSearch]

  # QtyBooked
  qtyBooked: [IntSearch]

  # QtyOutstanding
  qtyOutstanding: [IntSearch]

  # AllowBulkBookIn
  allowBulkBookIn: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # GoodsReceivedNoteHeader
  goodsReceivedNoteHeader: GoodsReceivedNoteHeaderSearch

  # Manufacturer
  manufacturer: ManufacturerSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # Searches for matches in GoodsReceivedNoteItemUnits
  goodsReceivedNoteItemUnits: GoodsReceivedNoteItemUnitSearch
}

# GoodsReceivedNoteItemUnit SearchContext
input GoodsReceivedNoteItemUnitSearch {
  # Id
  id: [IntSearch]

  # GoodsReceivedNoteItemId
  goodsReceivedNoteItemId: [IntSearch]

  # GoodsReceivedNoteItemUnitTransactionId
  goodsReceivedNoteItemUnitTransactionId: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # SerialNo
  serialNo: [StringSearchType]

  # AssetTag
  assetTag: [StringSearchType]

  # StockUnitId
  stockUnitId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # GoodsReceivedNoteItem
  goodsReceivedNoteItem: GoodsReceivedNoteItemSearch

  # GoodsReceivedNoteItemUnitTransaction
  goodsReceivedNoteItemUnitTransaction: GoodsReceivedNoteItemUnitTransactionSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in CustomerCreditNoteItemUnits
  customerCreditNoteItemUnits: CustomerCreditNoteItemUnitSearch

  # Searches for matches in NonOrderedGoodsItemUnits
  nonOrderedGoodsItemUnits: NonOrderedGoodsItemUnitSearch

  # Searches for matches in PurchaseOrderItemUnits
  purchaseOrderItemUnits: PurchaseOrderItemUnitSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch
}

# GoodsReceivedNoteItemUnitTransaction SearchContext
input GoodsReceivedNoteItemUnitTransactionSearch {
  # Id
  id: [IntSearch]

  # PurchaseOrderItemUnitId
  purchaseOrderItemUnitId: [IntSearch]

  # NonOrderedGoodsItemUnitId
  nonOrderedGoodsItemUnitId: [IntSearch]

  # CustomerReturnItemUnitId
  customerReturnItemUnitId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnItemUnit
  customerReturnItemUnit: CustomerReturnItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # NonOrderedGoodsItemUnit
  nonOrderedGoodsItemUnit: NonOrderedGoodsItemUnitSearch

  # PurchaseOrderItemUnit
  purchaseOrderItemUnit: PurchaseOrderItemUnitSearch

  # Searches for matches in GoodsReceivedNoteItemUnits
  goodsReceivedNoteItemUnits: GoodsReceivedNoteItemUnitSearch
}

# CustomerReturnItemUnit SearchContext
input CustomerReturnItemUnitSearch {
  # Id
  id: [IntSearch]

  # CustomerReturnItemId
  customerReturnItemId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # UnitCost
  unitCost: [FloatSearch]

  # UnitPrice
  unitPrice: [FloatSearch]

  # Reference
  reference: [StringSearchType]

  # Credit
  credit: [BooleanSearch]

  # ReplaceItem
  replaceItem: [BooleanSearch]

  # RejectItem
  rejectItem: [BooleanSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnItem
  customerReturnItem: CustomerReturnItemSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in GoodsReceivedNoteItemUnitTransactions
  goodsReceivedNoteItemUnitTransactions: GoodsReceivedNoteItemUnitTransactionSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch
}

# CustomerReturnItem SearchContext
input CustomerReturnItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerReturnHeaderId
  customerReturnHeaderId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # ReturnedQty
  returnedQty: [IntSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnHeader
  customerReturnHeader: CustomerReturnHeaderSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in CustomerReturnItemUnits
  customerReturnItemUnits: CustomerReturnItemUnitSearch
}

# CustomerReturnHeader SearchContext
input CustomerReturnHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerId
  customerId: [IntSearch]

  # CustomerReturnRequestId
  customerReturnRequestId: [IntSearch]

  # ContactId
  contactId: [IntSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # Reason
  reason: [StringSearchType]

  # Action
  action: [StringSearchType]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # CollectionAddressId
  collectionAddressId: [IntSearch]

  # RequestedCollectionAddressId
  requestedCollectionAddressId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # RequestTypeId
  requestTypeId: [IntSearch]

  # AssignedToId
  assignedToId: [IntSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # AssignedTo
  assignedTo: UserProfileSearch

  # Contact
  contact: ContactSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # CustomerReturnRequest
  customerReturnRequest: CustomerReturnRequestHeaderSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # RequestType
  requestType: StormStatusSearch

  # RequestedCollectionAddress
  requestedCollectionAddress: AddressSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in CustomerReturnHeaderFeatureMappings
  customerReturnHeaderFeatureMappings: CustomerReturnHeaderFeatureMappingSearch

  # Searches for matches in CustomerReturnItems
  customerReturnItems: CustomerReturnItemSearch

  # Searches for matches in CustomerReturnRequestItems
  customerReturnRequestItems: CustomerReturnRequestItemSearch

  # Searches for matches in GoodsReceivedNoteTransactions
  goodsReceivedNoteTransactions: GoodsReceivedNoteTransactionSearch
}

# CustomerReturnRequestHeader SearchContext
input CustomerReturnRequestHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerId
  customerId: [IntSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # Reason
  reason: [StringSearchType]

  # StormStatusId
  stormStatusId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in CustomerReturnHeaders
  customerReturnHeaders: CustomerReturnHeaderSearch
}

# CustomerReturnHeaderFeatureMapping SearchContext
input CustomerReturnHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # CustomerReturnHeaderId
  customerReturnHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnHeader
  customerReturnHeader: CustomerReturnHeaderSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch
}

# CustomerReturnRequestItem SearchContext
input CustomerReturnRequestItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerReturnRequestHeaderId
  customerReturnRequestHeaderId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # ReturnRequestQty
  returnRequestQty: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnRequestHeader
  customerReturnRequestHeader: CustomerReturnHeaderSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockUnitSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Searches for matches in CustomerReturnRequestItemUnits
  customerReturnRequestItemUnits: CustomerReturnRequestItemUnitSearch
}

# StockUnit SearchContext
input StockUnitSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # StockTypeId
  stockTypeId: [IntSearch]

  # StockUnitAssetId
  stockUnitAssetId: [IntSearch]

  # StockUnitTransactionId
  stockUnitTransactionId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # StockLocationId
  stockLocationId: [IntSearch]

  # StockUnitStatusId
  stockUnitStatusId: [IntSearch]

  # StockUnitGroupId
  stockUnitGroupId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # UnitCost
  unitCost: [FloatSearch]

  # UnitPrice
  unitPrice: [FloatSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Qty
  qty: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # StockLocation
  stockLocation: StockLocationSearch

  # StockType
  stockType: StockTypeSearch

  # StockUnitAsset
  stockUnitAsset: StockUnitAssetSearch

  # StockUnitGroup
  stockUnitGroup: StockUnitGroupSearch

  # StockUnitStatus
  stockUnitStatus: StockUnitStatusSearch

  # StockUnitTransaction
  stockUnitTransaction: StockUnitTransactionSearch

  # Supplier
  supplier: SupplierSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Searches for matches in BuildRequestItemUnits
  buildRequestItemUnits: BuildRequestItemUnitSearch

  # Searches for matches in CustomerCreditNoteItemUnits
  customerCreditNoteItemUnits: CustomerCreditNoteItemUnitSearch

  # Searches for matches in CustomerInvoiceItemUnits
  customerInvoiceItemUnits: CustomerInvoiceItemUnitSearch

  # Searches for matches in CustomerReturnItemUnits
  customerReturnItemUnits: CustomerReturnItemUnitSearch

  # Searches for matches in CustomerReturnRequestItemUnits
  customerReturnRequestItemUnits: CustomerReturnRequestItemUnitSearch

  # Searches for matches in CustomerReturnRequestItems
  customerReturnRequestItems: CustomerReturnRequestItemSearch

  # Searches for matches in DispatchNoteItemUnits
  dispatchNoteItemUnits: DispatchNoteItemUnitSearch

  # Searches for matches in GoodsReceivedNoteItemUnits
  goodsReceivedNoteItemUnits: GoodsReceivedNoteItemUnitSearch

  # Searches for matches in NonOrderedGoodsItemUnits
  nonOrderedGoodsItemUnits: NonOrderedGoodsItemUnitSearch

  # Searches for matches in PurchaseOrderItemUnits
  purchaseOrderItemUnits: PurchaseOrderItemUnitSearch

  # Searches for matches in SalesOrderItemUnits
  salesOrderItemUnits: SalesOrderItemUnitSearch

  # Searches for matches in StockMovementRequestItems
  stockMovementRequestItems: StockMovementRequestItemSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch

  # Searches for matches in StockTakeDiscrepancies
  stockTakeDiscrepancies: StockTakeDiscrepancySearch

  # Searches for matches in StockTakeItems
  stockTakeItems: StockTakeItemSearch

  # Searches for matches in StockUnitAttributes
  stockUnitAttributes: StockUnitAttributeSearch

  # Searches for matches in Warranties
  warranties: WarrantySearch
}

# StockLocation SearchContext
input StockLocationSearch {
  # Id
  id: [IntSearch]

  # AreaId
  areaId: [IntSearch]

  # LocationName
  locationName: [StringSearchType]

  # ParentStockLocationId
  parentStockLocationId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Area
  area: AreaSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ParentStockLocation
  parentStockLocation: StockLocationSearch

  # Searches for matches in InverseParentStockLocation
  inverseParentStockLocation: StockLocationSearch

  # Searches for matches in StockMovementRequestHeaders
  stockMovementRequestHeaders: StockMovementRequestHeaderSearch

  # Searches for matches in StockMovementRequestItems
  stockMovementRequestItems: StockMovementRequestItemSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch

  # Searches for matches in StockTakeDiscrepancies
  stockTakeDiscrepancies: StockTakeDiscrepancySearch

  # Searches for matches in StockTakeHeaders
  stockTakeHeaders: StockTakeHeaderSearch

  # Searches for matches in StockTakeItemFromStockLocations
  stockTakeItemFromStockLocations: StockTakeItemSearch

  # Searches for matches in StockTakeItemToStockLocations
  stockTakeItemToStockLocations: StockTakeItemSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# StockMovementRequestHeader SearchContext
input StockMovementRequestHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # ToStockLocationId
  toStockLocationId: [IntSearch]

  # RequestedById
  requestedById: [IntSearch]

  # RequestedForId
  requestedForId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationMappingId
  correlationMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # RequestedBy
  requestedBy: UserProfileSearch

  # RequestedFor
  requestedFor: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # ToStockLocation
  toStockLocation: StockLocationSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in StockMovementRequestItems
  stockMovementRequestItems: StockMovementRequestItemSearch
}

# StockMovementRequestItem SearchContext
input StockMovementRequestItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # StockMovementRequestHeaderId
  stockMovementRequestHeaderId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # FromStockLocationId
  fromStockLocationId: [IntSearch]

  # Completed
  completed: [BooleanSearch]

  # CompletedDate
  completedDate: [DateTimeSearch]

  # CompletedById
  completedById: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CompletedBy
  completedBy: UserProfileSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # FromStockLocation
  fromStockLocation: StockLocationSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockMovementRequestHeader
  stockMovementRequestHeader: StockMovementRequestHeaderSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch
}

# StockMovementTransaction SearchContext
input StockMovementTransactionSearch {
  # Id
  id: [IntSearch]

  # SalesOrderItemUnitId
  salesOrderItemUnitId: [IntSearch]

  # PurchaseOrderItemUnitId
  purchaseOrderItemUnitId: [IntSearch]

  # GoodsReceivedNoteItemUnitId
  goodsReceivedNoteItemUnitId: [IntSearch]

  # DispatchNoteItemUnitId
  dispatchNoteItemUnitId: [IntSearch]

  # NonOrderedGoodsItemUnitId
  nonOrderedGoodsItemUnitId: [IntSearch]

  # CustomerReturnItemUnitId
  customerReturnItemUnitId: [IntSearch]

  # StockMovementRequestItemId
  stockMovementRequestItemId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnItemUnit
  customerReturnItemUnit: CustomerReturnItemUnitSearch

  # DispatchNoteItemUnit
  dispatchNoteItemUnit: DispatchNoteItemUnitSearch

  # GoodsReceivedNoteItemUnit
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # NonOrderedGoodsItemUnit
  nonOrderedGoodsItemUnit: NonOrderedGoodsItemSearch

  # PurchaseOrderItemUnit
  purchaseOrderItemUnit: PurchaseOrderItemUnitSearch

  # SalesOrderItemUnit
  salesOrderItemUnit: SalesOrderItemUnitSearch

  # StockMovementRequestItem
  stockMovementRequestItem: StockMovementRequestItemSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch
}

# DispatchNoteItemUnit SearchContext
input DispatchNoteItemUnitSearch {
  # Id
  id: [IntSearch]

  # DispatchNoteItemId
  dispatchNoteItemId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Vat
  vat: [FloatSearch]

  # SerialNo
  serialNo: [StringSearchType]

  # AssetTag
  assetTag: [StringSearchType]

  # IsChecked
  isChecked: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # DispatchNoteItem
  dispatchNoteItem: DispatchNoteItemSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in CustomerInvoiceItemUnits
  customerInvoiceItemUnits: CustomerInvoiceItemUnitSearch

  # Searches for matches in SalesOrderItemUnits
  salesOrderItemUnits: SalesOrderItemUnitSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch
}

# DispatchNoteItem SearchContext
input DispatchNoteItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # DispatchNoteHeaderId
  dispatchNoteHeaderId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # SortOrder
  sortOrder: [IntSearch]

  # QtyOrdered
  qtyOrdered: [IntSearch]

  # QtyRequested
  qtyRequested: [IntSearch]

  # QtyDispatched
  qtyDispatched: [IntSearch]

  # QtyOutstanding
  qtyOutstanding: [IntSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # AllowBulkBookOut
  allowBulkBookOut: [BooleanSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # DispatchNoteHeader
  dispatchNoteHeader: DispatchNoteHeaderSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in DispatchNoteItemUnits
  dispatchNoteItemUnits: DispatchNoteItemUnitSearch
}

# UnitOfMeasurement SearchContext
input UnitOfMeasurementSearch {
  # Id
  id: [IntSearch]

  # Code
  code: [StringSearchType]

  # Description
  description: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Searches for matches in CustomerPurchaseOrderRequestItems
  customerPurchaseOrderRequestItems: CustomerPurchaseOrderRequestItemSearch

  # Searches for matches in CustomerReturnItems
  customerReturnItems: CustomerReturnItemSearch

  # Searches for matches in CustomerReturnRequestItems
  customerReturnRequestItems: CustomerReturnRequestItemSearch

  # Searches for matches in DispatchNoteItems
  dispatchNoteItems: DispatchNoteItemSearch

  # Searches for matches in NonOrderedGoodsItems
  nonOrderedGoodsItems: NonOrderedGoodsItemSearch

  # Searches for matches in ProFormaInvoiceItems
  proFormaInvoiceItems: ProFormaInvoiceItemSearch

  # Searches for matches in PurchaseOrderItems
  purchaseOrderItems: PurchaseOrderItemSearch

  # Searches for matches in QuoteItems
  quoteItems: QuoteItemSearch

  # Searches for matches in SalesOrderItems
  salesOrderItems: SalesOrderItemSearch

  # Searches for matches in SalesOrderRequestItems
  salesOrderRequestItems: SalesOrderRequestItemSearch

  # Searches for matches in StockTakeItems
  stockTakeItems: StockTakeItemSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# NonOrderedGoodsItem SearchContext
input NonOrderedGoodsItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # NonOrderedGoodsHeaderId
  nonOrderedGoodsHeaderId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # QtyOrdered
  qtyOrdered: [IntSearch]

  # QtyReceived
  qtyReceived: [IntSearch]

  # QtyOutstanding
  qtyOutstanding: [IntSearch]

  # QtyCredited
  qtyCredited: [IntSearch]

  # SupplierInvoiceRef
  supplierInvoiceRef: [StringSearchType]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # TotalUnitProfit
  totalUnitProfit: [FloatSearch]

  # TotalUnitMargin
  totalUnitMargin: [FloatSearch]

  # TotalUnitMarkup
  totalUnitMarkup: [FloatSearch]

  # Vatrate
  vatrate: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # AllowBulkBookIn
  allowBulkBookIn: [BooleanSearch]

  # IsEditable
  isEditable: [BooleanSearch]

  # AvgCost
  avgCost: [FloatSearch]

  # AvgPrice
  avgPrice: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # NonOrderedGoodsHeader
  nonOrderedGoodsHeader: NonOrderedGoodsHeaderSearch

  # Stock
  stock: StockSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in NonOrderedGoodsItemUnits
  nonOrderedGoodsItemUnits: NonOrderedGoodsItemUnitSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch
}

# NonOrderedGoodsHeader SearchContext
input NonOrderedGoodsHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # AreaId
  areaId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # OriginId
  originId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Area
  area: AreaSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Origin
  origin: NonOrderedGoodsOriginSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in GoodsReceivedNoteTransactions
  goodsReceivedNoteTransactions: GoodsReceivedNoteTransactionSearch

  # Searches for matches in NonOrderedGoodsItems
  nonOrderedGoodsItems: NonOrderedGoodsItemSearch
}

# NonOrderedGoodsOrigin SearchContext
input NonOrderedGoodsOriginSearch {
  # Id
  id: [IntSearch]

  # PurchaseOrderHeaderId
  purchaseOrderHeaderId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # PurchaseOrderHeader
  purchaseOrderHeader: PurchaseOrderHeaderSearch

  # Searches for matches in NonOrderedGoodsHeaders
  nonOrderedGoodsHeaders: NonOrderedGoodsHeaderSearch
}

# PurchaseOrderHeader SearchContext
input PurchaseOrderHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # DateRequired
  dateRequired: [DateTimeSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # CurrencyId
  currencyId: [IntSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # Approved
  approved: [BooleanSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalProfit
  totalProfit: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # TotalMargin
  totalMargin: [FloatSearch]

  # TotalMarkup
  totalMarkup: [FloatSearch]

  # SameDayDispatch
  sameDayDispatch: [BooleanSearch]

  # DispatchAddressId
  dispatchAddressId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # SupplierDeliveryCharge
  supplierDeliveryCharge: [FloatSearch]

  # StormDeliveryCharge
  stormDeliveryCharge: [FloatSearch]

  # IsDirectDelivery
  isDirectDelivery: [BooleanSearch]

  # IsDisputed
  isDisputed: [BooleanSearch]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # DispatchAddress
  dispatchAddress: AddressSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Supplier
  supplier: SupplierSearch

  # Searches for matches in GoodsReceivedNoteTransactions
  goodsReceivedNoteTransactions: GoodsReceivedNoteTransactionSearch

  # Searches for matches in NonOrderedGoodsOrigins
  nonOrderedGoodsOrigins: NonOrderedGoodsOriginSearch

  # Searches for matches in PurchaseOrderHeaderCarriageChargeMappings
  purchaseOrderHeaderCarriageChargeMappings: PurchaseOrderHeaderCarriageChargeMappingSearch

  # Searches for matches in PurchaseOrderHeaderFeatureMappings
  purchaseOrderHeaderFeatureMappings: PurchaseOrderHeaderFeatureMappingSearch

  # Searches for matches in PurchaseOrderItems
  purchaseOrderItems: PurchaseOrderItemSearch
}

# Supplier SearchContext
input SupplierSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # PrimaryAddressId
  primaryAddressId: [IntSearch]

  # AccountRef
  accountRef: [StringSearchType]

  # Name
  name: [StringSearchType]

  # ParentSupplierId
  parentSupplierId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # PrimaryContactId
  primaryContactId: [IntSearch]

  # SupplierReference
  supplierReference: [StringSearchType]

  # ContactName
  contactName: [StringSearchType]

  # IsBroker
  isBroker: [BooleanSearch]

  # Website
  website: [StringSearchType]

  # StormDeliveryChargeId
  stormDeliveryChargeId: [IntSearch]

  # DefaultCurrencyId
  defaultCurrencyId: [IntSearch]

  # SupplierDeliveryChargeId
  supplierDeliveryChargeId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # PaymentTermId
  paymentTermId: [IntSearch]

  # PaymentMethodId
  paymentMethodId: [IntSearch]

  # PurchaseLedgerControllerId
  purchaseLedgerControllerId: [IntSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # Gdprcompliant
  gdprcompliant: [BooleanSearch]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # DefaultCurrency
  defaultCurrency: CurrencySearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ParentSupplier
  parentSupplier: SupplierSearch

  # PaymentMethod
  paymentMethod: PaymentMethodSearch

  # PaymentTerm
  paymentTerm: PaymentTermSearch

  # PrimaryAddress
  primaryAddress: AddressSearch

  # PrimaryContact
  primaryContact: ContactSearch

  # PurchaseLedgerController
  purchaseLedgerController: UserProfileSearch

  # StormDeliveryCharge
  stormDeliveryCharge: StormDeliveryChargeSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # SupplierDeliveryCharge
  supplierDeliveryCharge: SupplierDeliveryChargeSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch

  # Searches for matches in InverseParentSupplier
  inverseParentSupplier: SupplierSearch

  # Searches for matches in PurchaseOrderHeaders
  purchaseOrderHeaders: PurchaseOrderHeaderSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch

  # Searches for matches in SupplierContactMappings
  supplierContactMappings: SupplierContactMappingSearch

  # Searches for matches in SupplierFeatureMappings
  supplierFeatureMappings: SupplierFeatureMappingSearch

  # Searches for matches in SupplierProviderMappings
  supplierProviderMappings: SupplierProviderMappingSearch

  # Searches for matches in SupplierStockAndCosts
  supplierStockAndCosts: SupplierStockAndCostSearch
}

# PaymentMethod SearchContext
input PaymentMethodSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Description
  description: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# PaymentTerm SearchContext
input PaymentTermSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in CustomerInvoiceHeaders
  customerInvoiceHeaders: CustomerInvoiceHeaderSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# StormDeliveryCharge SearchContext
input StormDeliveryChargeSearch {
  # Id
  id: [IntSearch]

  # MinimumSpend
  minimumSpend: [FloatSearch]

  # ChargeRate
  chargeRate: [FloatSearch]

  # Description
  description: [StringSearchType]

  # IsDefault
  isDefault: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# SupplierDeliveryCharge SearchContext
input SupplierDeliveryChargeSearch {
  # Id
  id: [IntSearch]

  # MinimumSpend
  minimumSpend: [FloatSearch]

  # ChargeRate
  chargeRate: [FloatSearch]

  # Description
  description: [StringSearchType]

  # IsDefault
  isDefault: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# Vatcode SearchContext
input VatcodeSearch {
  # Id
  id: [IntSearch]

  # Code
  code: [StringSearchType]

  # Rate
  rate: [FloatSearch]

  # Description
  description: [StringSearchType]

  # IsCustomerCode
  isCustomerCode: [BooleanSearch]

  # IsSupplierCode
  isSupplierCode: [BooleanSearch]

  # IsActive
  isActive: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Addresses
  addresses: AddressSearch

  # Searches for matches in CustomerCreditNoteItems
  customerCreditNoteItems: CustomerCreditNoteItemSearch

  # Searches for matches in CustomerInvoiceItems
  customerInvoiceItems: CustomerInvoiceItemSearch

  # Searches for matches in CustomerPurchaseOrderRequestItems
  customerPurchaseOrderRequestItems: CustomerPurchaseOrderRequestItemSearch

  # Searches for matches in CustomerReturnItems
  customerReturnItems: CustomerReturnItemSearch

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in DispatchNoteItems
  dispatchNoteItems: DispatchNoteItemSearch

  # Searches for matches in NonOrderedGoodsItems
  nonOrderedGoodsItems: NonOrderedGoodsItemSearch

  # Searches for matches in ProFormaInvoiceItems
  proFormaInvoiceItems: ProFormaInvoiceItemSearch

  # Searches for matches in PurchaseOrderItems
  purchaseOrderItems: PurchaseOrderItemSearch

  # Searches for matches in QuoteItems
  quoteItems: QuoteItemSearch

  # Searches for matches in SalesOrderItems
  salesOrderItems: SalesOrderItemSearch

  # Searches for matches in SalesOrderRequestItems
  salesOrderRequestItems: SalesOrderRequestItemSearch

  # Searches for matches in Suppliers
  suppliers: SupplierSearch
}

# CustomerCreditNoteItem SearchContext
input CustomerCreditNoteItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerCreditNoteHeaderId
  customerCreditNoteHeaderId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # SortOrder
  sortOrder: [IntSearch]

  # QtyOrdered
  qtyOrdered: [IntSearch]

  # QtyCredited
  qtyCredited: [IntSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerCreditNoteHeader
  customerCreditNoteHeader: CustomerCreditNoteHeaderSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in CustomerCreditNoteItemUnits
  customerCreditNoteItemUnits: CustomerCreditNoteItemUnitSearch
}

# CustomerCreditNoteItemUnit SearchContext
input CustomerCreditNoteItemUnitSearch {
  # Id
  id: [IntSearch]

  # CustomerCreditNoteItemId
  customerCreditNoteItemId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # CustomerInvoiceItemUnitId
  customerInvoiceItemUnitId: [IntSearch]

  # GoodsReceivedNoteItemUnitId
  goodsReceivedNoteItemUnitId: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Vat
  vat: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerCreditNoteItem
  customerCreditNoteItem: CustomerCreditNoteItemSearch

  # CustomerInvoiceItemUnit
  customerInvoiceItemUnit: CustomerInvoiceItemUnitSearch

  # GoodsReceivedNoteItemUnit
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockUnit
  stockUnit: StockUnitSearch
}

# CustomerInvoiceItemUnit SearchContext
input CustomerInvoiceItemUnitSearch {
  # Id
  id: [IntSearch]

  # CustomerInvoiceItemId
  customerInvoiceItemId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # SalesOrderItemUnitId
  salesOrderItemUnitId: [IntSearch]

  # DispatchNoteItemUnitId
  dispatchNoteItemUnitId: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Vat
  vat: [FloatSearch]

  # IsChecked
  isChecked: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerInvoiceItem
  customerInvoiceItem: CustomerInvoiceHeaderSearch

  # DispatchNoteItemUnit
  dispatchNoteItemUnit: DispatchNoteItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderItemUnit
  salesOrderItemUnit: SalesOrderItemUnitSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in CustomerCreditNoteItemUnits
  customerCreditNoteItemUnits: CustomerCreditNoteItemUnitSearch
}

# SalesOrderItemUnit SearchContext
input SalesOrderItemUnitSearch {
  # Id
  id: [IntSearch]

  # SalesOrderItemId
  salesOrderItemId: [IntSearch]

  # DispatchNoteItemUnitId
  dispatchNoteItemUnitId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # CustomerRef
  customerRef: [StringSearchType]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Profit
  profit: [FloatSearch]

  # Margin
  margin: [FloatSearch]

  # Markup
  markup: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # DispatchNoteItemUnit
  dispatchNoteItemUnit: DispatchNoteItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderItem
  salesOrderItem: SalesOrderItemSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in AssetRollItems
  assetRollItems: AssetRollItemSearch

  # Searches for matches in BuildRequestItemUnits
  buildRequestItemUnits: BuildRequestItemUnitSearch

  # Searches for matches in CustomerInvoiceItemUnits
  customerInvoiceItemUnits: CustomerInvoiceItemUnitSearch

  # Searches for matches in PurchaseOrderItemUnits
  purchaseOrderItemUnits: PurchaseOrderItemUnitSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch
}

# PurchaseOrderItemUnit SearchContext
input PurchaseOrderItemUnitSearch {
  # Id
  id: [IntSearch]

  # PurchaseOrderItemId
  purchaseOrderItemId: [IntSearch]

  # SalesOrderItemUnitId
  salesOrderItemUnitId: [IntSearch]

  # GoodsReceivedNoteItemUnitId
  goodsReceivedNoteItemUnitId: [IntSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # SupplierInvoiceRef
  supplierInvoiceRef: [StringSearchType]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Profit
  profit: [FloatSearch]

  # Margin
  margin: [FloatSearch]

  # Markup
  markup: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # GoodsReceivedNoteItemUnit
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # PurchaseOrderItem
  purchaseOrderItem: PurchaseOrderItemSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # SalesOrderItemUnit
  salesOrderItemUnit: SalesOrderItemUnitSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in GoodsReceivedNoteItemUnitTransactions
  goodsReceivedNoteItemUnitTransactions: GoodsReceivedNoteItemUnitTransactionSearch

  # Searches for matches in StockMovementTransactions
  stockMovementTransactions: StockMovementTransactionSearch

  # Searches for matches in StockUnitTransactions
  stockUnitTransactions: StockUnitTransactionSearch
}

# PurchaseOrderItem SearchContext
input PurchaseOrderItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # PurchaseOrderHeaderId
  purchaseOrderHeaderId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # QtyOrdered
  qtyOrdered: [IntSearch]

  # QtyReceived
  qtyReceived: [IntSearch]

  # QtyOutstanding
  qtyOutstanding: [IntSearch]

  # QtyInvoiced
  qtyInvoiced: [IntSearch]

  # SupplierInvoiceRef
  supplierInvoiceRef: [StringSearchType]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # TotalUnitProfit
  totalUnitProfit: [FloatSearch]

  # TotalUnitMargin
  totalUnitMargin: [FloatSearch]

  # TotalUnitMarkup
  totalUnitMarkup: [FloatSearch]

  # Vatrate
  vatrate: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # AllowBulkBookIn
  allowBulkBookIn: [BooleanSearch]

  # IsEditable
  isEditable: [BooleanSearch]

  # AvgCost
  avgCost: [FloatSearch]

  # AvgPrice
  avgPrice: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # PurchaseOrderHeader
  purchaseOrderHeader: PurchaseOrderHeaderSearch

  # Stock
  stock: StockSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in PurchaseOrderItemUnits
  purchaseOrderItemUnits: PurchaseOrderItemUnitSearch
}

# StockUnitTransaction SearchContext
input StockUnitTransactionSearch {
  # Id
  id: [IntSearch]

  # SalesOrderItemUnitId
  salesOrderItemUnitId: [IntSearch]

  # PurchaseOrderItemUnitId
  purchaseOrderItemUnitId: [IntSearch]

  # GoodsReceivedNoteItemUnitId
  goodsReceivedNoteItemUnitId: [IntSearch]

  # DispatchNoteItemUnitId
  dispatchNoteItemUnitId: [IntSearch]

  # NonOrderedGoodsItemUnitId
  nonOrderedGoodsItemUnitId: [IntSearch]

  # CustomerReturnItemUnitId
  customerReturnItemUnitId: [IntSearch]

  # StockMovementRequestItemId
  stockMovementRequestItemId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnItemUnit
  customerReturnItemUnit: CustomerReturnItemUnitSearch

  # DispatchNoteItemUnit
  dispatchNoteItemUnit: DispatchNoteItemUnitSearch

  # GoodsReceivedNoteItemUnit
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # NonOrderedGoodsItemUnit
  nonOrderedGoodsItemUnit: NonOrderedGoodsItemSearch

  # PurchaseOrderItemUnit
  purchaseOrderItemUnit: PurchaseOrderItemUnitSearch

  # SalesOrderItemUnit
  salesOrderItemUnit: SalesOrderItemUnitSearch

  # StockMovementRequestItem
  stockMovementRequestItem: StockMovementRequestItemSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# CustomerInvoiceItem SearchContext
input CustomerInvoiceItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CustomerInvoiceHeaderId
  customerInvoiceHeaderId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # SortOrder
  sortOrder: [IntSearch]

  # QtyOrdered
  qtyOrdered: [IntSearch]

  # QtyInvoiced
  qtyInvoiced: [IntSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerInvoiceHeader
  customerInvoiceHeader: CustomerInvoiceHeaderSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # Vatcode
  vatcode: VatcodeSearch
}

# ProFormaInvoiceItem SearchContext
input ProFormaInvoiceItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # ProFormaInvoiceHeaderId
  proFormaInvoiceHeaderId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # Reference
  reference: [StringSearchType]

  # Qty
  qty: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Vat
  vat: [FloatSearch]

  # Profit
  profit: [FloatSearch]

  # Margin
  margin: [FloatSearch]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # TotalUnitProfit
  totalUnitProfit: [FloatSearch]

  # TotalUnitMargin
  totalUnitMargin: [FloatSearch]

  # Vatrate
  vatrate: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # ParentBundleId
  parentBundleId: [IntSearch]

  # IsCustomerVisible
  isCustomerVisible: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ParentBundle
  parentBundle: ProFormaInvoiceItemSearch

  # ProFormaInvoiceHeader
  proFormaInvoiceHeader: ProFormaInvoiceHeaderSearch

  # Stock
  stock: StockSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in InverseParentBundle
  inverseParentBundle: ProFormaInvoiceItemSearch
}

# QuoteItem SearchContext
input QuoteItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # QuoteHeaderId
  quoteHeaderId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # PartNo
  partNo: [StringSearchType]

  # Description
  description: [StringSearchType]

  # Reference
  reference: [StringSearchType]

  # Qty
  qty: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Vat
  vat: [FloatSearch]

  # Profit
  profit: [FloatSearch]

  # Margin
  margin: [FloatSearch]

  # Markup
  markup: [FloatSearch]

  # TotalUnitPrice
  totalUnitPrice: [FloatSearch]

  # TotalUnitCost
  totalUnitCost: [FloatSearch]

  # TotalUnitVat
  totalUnitVat: [FloatSearch]

  # TotalUnitProfit
  totalUnitProfit: [FloatSearch]

  # Vatrate
  vatrate: [FloatSearch]

  # VatcodeId
  vatcodeId: [IntSearch]

  # SupplierStockAndCostId
  supplierStockAndCostId: [IntSearch]

  # LeadTime
  leadTime: [DateTimeSearch]

  # ParentBundleId
  parentBundleId: [IntSearch]

  # IsCustomerVisible
  isCustomerVisible: [BooleanSearch]

  # IsOptionalItem
  isOptionalItem: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ParentBundle
  parentBundle: QuoteItemSearch

  # QuoteHeader
  quoteHeader: QuoteHeaderSearch

  # Stock
  stock: StockSearch

  # SupplierStockAndCost
  supplierStockAndCost: SupplierStockAndCostSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch

  # Searches for matches in InverseParentBundle
  inverseParentBundle: QuoteItemSearch
}

# SupplierStockAndCost SearchContext
input SupplierStockAndCostSearch {
  # Id
  id: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # SupplierPartNo
  supplierPartNo: [StringSearchType]

  # ManufacturerPartNo
  manufacturerPartNo: [StringSearchType]

  # LiveStockSupplierId
  liveStockSupplierId: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # ReviewedDate
  reviewedDate: [DateTimeSearch]

  # Stock
  stock: [IntSearch]

  # Etadate
  etadate: [DateTimeSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Supplier
  supplier: SupplierSearch

  # Searches for matches in QuoteItems
  quoteItems: QuoteItemSearch

  # Searches for matches in SalesOrderItems
  salesOrderItems: SalesOrderItemSearch
}

# SalesOrderRequestItem SearchContext
input SalesOrderRequestItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # SalesOrderRequestHeaderId
  salesOrderRequestHeaderId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # Description
  description: [StringSearchType]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # PartNo
  partNo: [StringSearchType]

  # QtyRequested
  qtyRequested: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Vat
  vat: [FloatSearch]

  # Vatrate
  vatrate: [FloatSearch]

  # Type
  type: [StringSearchType]

  # VatcodeId
  vatcodeId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderRequestHeader
  salesOrderRequestHeader: CustomerPurchaseOrderRequestHeaderSearch

  # Stock
  stock: StockSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch

  # Vatcode
  vatcode: VatcodeSearch
}

# SupplierContactMapping SearchContext
input SupplierContactMappingSearch {
  # Id
  id: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # ContactId
  contactId: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # Contact
  contact: ContactSearch

  # Supplier
  supplier: SupplierSearch
}

# SupplierFeatureMapping SearchContext
input SupplierFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Supplier
  supplier: SupplierSearch
}

# SupplierProviderMapping SearchContext
input SupplierProviderMappingSearch {
  # Id
  id: [IntSearch]

  # SupplierProviderId
  supplierProviderId: [IntSearch]

  # SupplierId
  supplierId: [IntSearch]

  # Name
  name: [StringSearchType]

  # IsAuthorised
  isAuthorised: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Supplier
  supplier: SupplierSearch

  # SupplierProvider
  supplierProvider: SupplierProviderSearch
}

# SupplierProvider SearchContext
input SupplierProviderSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Website
  website: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # SupplierProviderMapping
  supplierProviderMapping: SupplierProviderMappingSearch
}

# GoodsReceivedNoteTransaction SearchContext
input GoodsReceivedNoteTransactionSearch {
  # Id
  id: [IntSearch]

  # PurchaseOrderHeaderId
  purchaseOrderHeaderId: [IntSearch]

  # NonOrderedGoodsHeaderId
  nonOrderedGoodsHeaderId: [IntSearch]

  # CustomerReturnRequestHeaderId
  customerReturnRequestHeaderId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnRequestHeader
  customerReturnRequestHeader: CustomerReturnHeaderSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # NonOrderedGoodsHeader
  nonOrderedGoodsHeader: NonOrderedGoodsHeaderSearch

  # PurchaseOrderHeader
  purchaseOrderHeader: PurchaseOrderHeaderSearch

  # Searches for matches in GoodsReceivedNoteHeaders
  goodsReceivedNoteHeaders: GoodsReceivedNoteHeaderSearch
}

# PurchaseOrderHeaderCarriageChargeMapping SearchContext
input PurchaseOrderHeaderCarriageChargeMappingSearch {
  # Id
  id: [IntSearch]

  # PurchaseOrderHeaderId
  purchaseOrderHeaderId: [IntSearch]

  # CarriageCharge
  carriageCharge: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # PurchaseOrderHeader
  purchaseOrderHeader: PurchaseOrderHeaderSearch
}

# PurchaseOrderHeaderFeatureMapping SearchContext
input PurchaseOrderHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # PurchaseOrderHeaderId
  purchaseOrderHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # PurchaseOrderHeader
  purchaseOrderHeader: PurchaseOrderHeaderSearch
}

# NonOrderedGoodsItemUnit SearchContext
input NonOrderedGoodsItemUnitSearch {
  # Id
  id: [IntSearch]

  # NonOrderedGoodsItemId
  nonOrderedGoodsItemId: [IntSearch]

  # GoodsReceivedNoteItemUnitId
  goodsReceivedNoteItemUnitId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # Cost
  cost: [FloatSearch]

  # Price
  price: [FloatSearch]

  # Profit
  profit: [FloatSearch]

  # Margin
  margin: [FloatSearch]

  # Markup
  markup: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # GoodsReceivedNoteItemUnit
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # NonOrderedGoodsItem
  nonOrderedGoodsItem: NonOrderedGoodsItemSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # Searches for matches in GoodsReceivedNoteItemUnitTransactions
  goodsReceivedNoteItemUnitTransactions: GoodsReceivedNoteItemUnitTransactionSearch
}

# StockTakeItem SearchContext
input StockTakeItemSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # StockTakeHeaderId
  stockTakeHeaderId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # SerialNo
  serialNo: [StringSearchType]

  # AssetTag
  assetTag: [StringSearchType]

  # BookedInById
  bookedInById: [IntSearch]

  # StockUnitStatusId
  stockUnitStatusId: [IntSearch]

  # FromStockLocationId
  fromStockLocationId: [IntSearch]

  # ToStockLocationId
  toStockLocationId: [IntSearch]

  # QtyAvailable
  qtyAvailable: [IntSearch]

  # StockMovementId
  stockMovementId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # UnitOfMeasurementId
  unitOfMeasurementId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # BookedInBy
  bookedInBy: UserProfileSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # FromStockLocation
  fromStockLocation: StockLocationSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # StockMovement
  stockMovement: StockMovementSearch

  # StockTakeHeader
  stockTakeHeader: StockTakeHeaderSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # StockUnitStatus
  stockUnitStatus: StockUnitStatusSearch

  # ToStockLocation
  toStockLocation: StockLocationSearch

  # UnitOfMeasurement
  unitOfMeasurement: UnitOfMeasurementSearch
}

# StockMovement SearchContext
input StockMovementSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # StockMovementDate
  stockMovementDate: [DateTimeSearch]

  # StockMovementRequestItemId
  stockMovementRequestItemId: [IntSearch]

  # StockMovementTransactionId
  stockMovementTransactionId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # UnitCost
  unitCost: [FloatSearch]

  # UnitPrice
  unitPrice: [FloatSearch]

  # Qty
  qty: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # StockMovementTypeId
  stockMovementTypeId: [IntSearch]

  # StockTypeId
  stockTypeId: [IntSearch]

  # ToStockLocationId
  toStockLocationId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # StockMovementRequestItem
  stockMovementRequestItem: StockMovementRequestItemSearch

  # StockMovementTransaction
  stockMovementTransaction: StockMovementTransactionSearch

  # StockMovementType
  stockMovementType: StockMovementTypeSearch

  # StockType
  stockType: StockTypeSearch

  # StockUnit
  stockUnit: StockUnitSearch

  # ToStockLocation
  toStockLocation: StockLocationSearch

  # Searches for matches in StockTakeItems
  stockTakeItems: StockTakeItemSearch
}

# StockMovementType SearchContext
input StockMovementTypeSearch {
  # Id
  id: [IntSearch]

  # MovementType
  movementType: [StringSearchType]

  # MovementCode
  movementCode: [StringSearchType]

  # ParentTypeId
  parentTypeId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # ParentType
  parentType: StockMovementParentTypeSearch

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch
}

# StockMovementParentType SearchContext
input StockMovementParentTypeSearch {
  # Id
  id: [IntSearch]

  # Direction
  direction: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in StockMovementTypes
  stockMovementTypes: StockMovementTypeSearch
}

# StockType SearchContext
input StockTypeSearch {
  # Id
  id: [IntSearch]

  # TypeName
  typeName: [StringSearchType]

  # Description
  description: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # IsStormStock
  isStormStock: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in StockMovements
  stockMovements: StockMovementSearch

  # Searches for matches in StockTallies
  stockTallies: StockTallySearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# StockTally SearchContext
input StockTallySearch {
  # Id
  id: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # StockTypeId
  stockTypeId: [IntSearch]

  # Quantity
  quantity: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # StockType
  stockType: StockTypeSearch
}

# StockTakeHeader SearchContext
input StockTakeHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # CreatedDate
  createdDate: [DateTimeSearch]

  # StockLocationId
  stockLocationId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # CorrelationMappingId
  correlationMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockLocation
  stockLocation: StockLocationSearch

  # StormStatus
  stormStatus: StormStatusSearch

  # Searches for matches in StockTakeDiscrepancies
  stockTakeDiscrepancies: StockTakeDiscrepancySearch

  # Searches for matches in StockTakeItems
  stockTakeItems: StockTakeItemSearch
}

# StockTakeDiscrepancy SearchContext
input StockTakeDiscrepancySearch {
  # Id
  id: [IntSearch]

  # StockTakeHeaderId
  stockTakeHeaderId: [IntSearch]

  # StockLocationId
  stockLocationId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # SerialNo
  serialNo: [StringSearchType]

  # DiscrepancyValue
  discrepancyValue: [IntSearch]

  # StockTakeAdjustmentCodeId
  stockTakeAdjustmentCodeId: [IntSearch]

  # Reason
  reason: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch

  # StockLocation
  stockLocation: StockLocationSearch

  # StockTakeAdjustmentCode
  stockTakeAdjustmentCode: StockTakeAdjustmentCodeSearch

  # StockTakeHeader
  stockTakeHeader: StockTakeHeaderSearch

  # StockUnit
  stockUnit: StockUnitSearch
}

# StockTakeAdjustmentCode SearchContext
input StockTakeAdjustmentCodeSearch {
  # Id
  id: [IntSearch]

  # ShortDescription
  shortDescription: [StringSearchType]

  # ExtendedDescription
  extendedDescription: [StringSearchType]

  # Value
  value: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in StockTakeDiscrepancies
  stockTakeDiscrepancies: StockTakeDiscrepancySearch
}

# StockUnitStatus SearchContext
input StockUnitStatusSearch {
  # Id
  id: [IntSearch]

  # Status
  status: [StringSearchType]

  # Description
  description: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in StockTakeItems
  stockTakeItems: StockTakeItemSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# StockUnitAsset SearchContext
input StockUnitAssetSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # SerialNo
  serialNo: [StringSearchType]

  # AssetTag
  assetTag: [StringSearchType]

  # Register1
  register1: [StringSearchType]

  # Register2
  register2: [StringSearchType]

  # Register3
  register3: [StringSearchType]

  # Register4
  register4: [StringSearchType]

  # Register5
  register5: [StringSearchType]

  # Register6
  register6: [StringSearchType]

  # Register7
  register7: [StringSearchType]

  # Register8
  register8: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# StockUnitGroup SearchContext
input StockUnitGroupSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # QtyAvailable
  qtyAvailable: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in StockUnits
  stockUnits: StockUnitSearch
}

# CustomerReturnRequestItemUnit SearchContext
input CustomerReturnRequestItemUnitSearch {
  # Id
  id: [IntSearch]

  # CustomerReturnRequestItemId
  customerReturnRequestItemId: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # CustomerReturnRequestItem
  customerReturnRequestItem: CustomerReturnRequestItemSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockUnit
  stockUnit: StockUnitSearch
}

# StockUnitAttribute SearchContext
input StockUnitAttributeSearch {
  # Id
  id: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # AttributeTypeId
  attributeTypeId: [IntSearch]

  # AttributeValue
  attributeValue: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # AttributeType
  attributeType: StockUnitAttributeTypeSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockUnit
  stockUnit: StockUnitSearch
}

# StockUnitAttributeType SearchContext
input StockUnitAttributeTypeSearch {
  # Id
  id: [IntSearch]

  # AttributeType
  attributeType: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in StockUnitAttributes
  stockUnitAttributes: StockUnitAttributeSearch
}

# Warranty SearchContext
input WarrantySearch {
  # Id
  id: [IntSearch]

  # StockUnitId
  stockUnitId: [IntSearch]

  # Description
  description: [StringSearchType]

  # StartDate
  startDate: [DateTimeSearch]

  # EndDate
  endDate: [DateTimeSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StockUnit
  stockUnit: StockUnitSearch
}

# CustomerStockLevel SearchContext
input CustomerStockLevelSearch {
  # Id
  id: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # ParentCustomerId
  parentCustomerId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # QtyMin
  qtyMin: [IntSearch]

  # QtyMax
  qtyMax: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Crmguid
  crmguid: [GuidSearchTypeScalarSearch]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch

  # ParentCustomer
  parentCustomer: CustomerSearch

  # Stock
  stock: StockSearch
}

# StockFeatureMapping SearchContext
input StockFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch
}

# StockThreshold SearchContext
input StockThresholdSearch {
  # Id
  id: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # Qty
  qty: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Stock
  stock: StockSearch
}

# DispatchNoteHeaderFeatureMapping SearchContext
input DispatchNoteHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # DispatchNoteHeaderId
  dispatchNoteHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # DispatchNoteHeader
  dispatchNoteHeader: DispatchNoteHeaderSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch
}

# QuoteHeaderFeatureMapping SearchContext
input QuoteHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # QuoteHeaderId
  quoteHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # QuoteHeader
  quoteHeader: QuoteHeaderSearch
}

# SalesOrderHeaderFeatureMapping SearchContext
input SalesOrderHeaderFeatureMappingSearch {
  # Id
  id: [IntSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # FeatureId
  featureId: [IntSearch]

  # Value
  value: [StringSearchType]

  # IsEnabled
  isEnabled: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Feature
  feature: FeatureSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch
}

# DispatchNoteTransaction SearchContext
input DispatchNoteTransactionSearch {
  # Id
  id: [IntSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch
}

# Incidental SearchContext
input IncidentalSearch {
  # Id
  id: [IntSearch]

  # IncidentalDate
  incidentalDate: [DateTimeSearch]

  # Reference
  reference: [StringSearchType]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # SalesOrderItemId
  salesOrderItemId: [IntSearch]

  # SalesPersonId
  salesPersonId: [IntSearch]

  # Description
  description: [StringSearchType]

  # Amount
  amount: [FloatSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Application
  application: ApplicationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch

  # SalesOrderItem
  salesOrderItem: SalesOrderItemSearch

  # SalesPerson
  salesPerson: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch
}

# SalesOrderHeaderResponseEmailMapping SearchContext
input SalesOrderHeaderResponseEmailMappingSearch {
  # Id
  id: [IntSearch]

  # SalesOrderHeaderId
  salesOrderHeaderId: [IntSearch]

  # Email
  email: [StringSearchType]

  # IsDefault
  isDefault: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # SalesOrderHeader
  salesOrderHeader: SalesOrderHeaderSearch
}

# SalesOrderRequestHeader SearchContext
input SalesOrderRequestHeaderSearch {
  # Id
  id: [IntSearch]

  # IdRef
  idRef: [StringSearchType]

  # StormStatusId
  stormStatusId: [IntSearch]

  # Reference
  reference: [StringSearchType]

  # AddressId
  addressId: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # CorrelationId
  correlationId: [IntSearch]

  # SalesOrderRequestType
  salesOrderRequestType: [StringSearchType]

  # CurrencyId
  currencyId: [IntSearch]

  # ExchangeRate
  exchangeRate: [FloatSearch]

  # TotalCost
  totalCost: [FloatSearch]

  # TotalPrice
  totalPrice: [FloatSearch]

  # TotalVat
  totalVat: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # ApplicationId
  applicationId: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Address
  address: AddressSearch

  # Application
  application: ApplicationSearch

  # Correlation
  correlation: CorrelationSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Currency
  currency: CurrencySearch

  # Customer
  customer: CustomerSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # StormStatus
  stormStatus: StormStatusSearch
}

# StormStatusMapping SearchContext
input StormStatusMappingSearch {
  # Id
  id: [IntSearch]

  # TableNameId
  tableNameId: [IntSearch]

  # StormStatusId
  stormStatusId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # IsVisible
  isVisible: [BooleanSearch]

  # IsOpen
  isOpen: [BooleanSearch]

  # IsMutable
  isMutable: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # StormStatus
  stormStatus: StormStatusSearch

  # TableName
  tableName: TableNameSearch
}

# TableName SearchContext
input TableNameSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Memos
  memos: MemoSearch

  # Searches for matches in StormStatusMappings
  stormStatusMappings: StormStatusMappingSearch
}

# Memo SearchContext
input MemoSearch {
  # Id
  id: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # MemoTypeId
  memoTypeId: [IntSearch]

  # ParentId
  parentId: [IntSearch]

  # Notes
  notes: [StringSearchType]

  # AllocatedToId
  allocatedToId: [IntSearch]

  # IsViewed
  isViewed: [BooleanSearch]

  # IsCompleted
  isCompleted: [BooleanSearch]

  # CompletedById
  completedById: [IntSearch]

  # CompletedDate
  completedDate: [DateTimeSearch]

  # TableNameId
  tableNameId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # AllocatedTo
  allocatedTo: UserProfileSearch

  # CompletedBy
  completedBy: UserProfileSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # MemoType
  memoType: MemoTypeSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Parent
  parent: MemoSearch

  # TableName
  tableName: TableNameSearch

  # Searches for matches in InverseParent
  inverseParent: MemoSearch
}

# MemoType SearchContext
input MemoTypeSearch {
  # Id
  id: [IntSearch]

  # Type
  type: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Memos
  memos: MemoSearch
}

# CourierDeliveryMethod SearchContext
input CourierDeliveryMethodSearch {
  # Id
  id: [IntSearch]

  # CourierId
  courierId: [IntSearch]

  # DeliveryMethodId
  deliveryMethodId: [IntSearch]

  # CutOfTime
  cutOfTime: [StringSearchType]

  # IsActive
  isActive: [BooleanSearch]

  # DefaultCourierCost
  defaultCourierCost: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # Courier
  courier: CourierSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # DeliveryMethod
  deliveryMethod: DeliveryMethodSearch
}

# DeliveryMethod SearchContext
input DeliveryMethodSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Description
  description: [StringSearchType]

  # SortOrder
  sortOrder: [IntSearch]

  # DefaultCourierCost
  defaultCourierCost: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Guid
  guid: [GuidSearchTypeScalarSearch]

  # CreatedBy
  createdBy: UserProfileSearch

  # Searches for matches in CourierDeliveryMethods
  courierDeliveryMethods: CourierDeliveryMethodSearch

  # Searches for matches in DispatchNoteHeaderDeliveryMethods
  dispatchNoteHeaderDeliveryMethods: DispatchNoteHeaderSearch

  # Searches for matches in DispatchNoteHeaderRequestedDeliveryMethods
  dispatchNoteHeaderRequestedDeliveryMethods: DispatchNoteHeaderSearch
}

# ProofOfDelivery SearchContext
input ProofOfDeliverySearch {
  # Id
  id: [IntSearch]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # DispatchNoteHeaderId
  dispatchNoteHeaderId: [IntSearch]

  # Url
  url: [StringSearchType]

  # IsCompleted
  isCompleted: [BooleanSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # CreatedBy
  createdBy: UserProfileSearch

  # DispatchNoteHeader
  dispatchNoteHeader: DispatchNoteHeaderSearch

  # MemoMapping
  memoMapping: MemoMappingSearch

  # ModifiedBy
  modifiedBy: UserProfileSearch

  # Searches for matches in DispatchNoteHeaders
  dispatchNoteHeaders: DispatchNoteHeaderSearch
}

# CustomerAddressMapping SearchContext
input CustomerAddressMappingSearch {
  # Id
  id: [IntSearch]

  # AddressId
  addressId: [IntSearch]

  # IsInvoicingAddress
  isInvoicingAddress: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Address
  address: AddressSearch

  # Searches for matches in Customers
  customers: CustomerSearch
}

# Sector SearchContext
input SectorSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Description
  description: [StringSearchType]

  # ParentSectorId
  parentSectorId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # ParentSector
  parentSector: SectorSearch

  # Searches for matches in Customers
  customers: CustomerSearch

  # Searches for matches in InverseParentSector
  inverseParentSector: SectorSearch
}

# CustomerContactMapping SearchContext
input CustomerContactMappingSearch {
  # Id
  id: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # ContactId
  contactId: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # Contact
  contact: ContactSearch

  # Customer
  customer: CustomerSearch
}

# CustomerSageAux SearchContext
input CustomerSageAuxSearch {
  # Id
  id: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # CreditLimit
  creditLimit: [FloatSearch]

  # CreditLimitDate
  creditLimitDate: [DateTimeSearch]

  # Balance
  balance: [FloatSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # CreatedBy
  createdBy: UserProfileSearch

  # Customer
  customer: CustomerSearch
}

# Role SearchContext
input RoleSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Searches for matches in UserProfiles
  userProfiles: UserProfileSearch
}

# AddressProviderMapping SearchContext
input AddressProviderMappingSearch {
  # Id
  id: [IntSearch]

  # AddressId
  addressId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Address
  address: AddressSearch

  # CreatedBy
  createdBy: UserProfileSearch

  # Searches for matches in LoqateAddresses
  loqateAddresses: LoqateAddressSearch
}

# LoqateAddress SearchContext
input LoqateAddressSearch {
  # Id
  id: [IntSearch]

  # AddressProviderMappingId
  addressProviderMappingId: [IntSearch]

  # DateSubmitted
  dateSubmitted: [DateTimeSearch]

  # LoqateId
  loqateId: [StringSearchType]

  # Language
  language: [StringSearchType]

  # Department
  department: [StringSearchType]

  # CompanyName
  companyName: [StringSearchType]

  # SubBuilding
  subBuilding: [StringSearchType]

  # BuildingNumber
  buildingNumber: [StringSearchType]

  # BuildingName
  buildingName: [StringSearchType]

  # SecondaryStreet
  secondaryStreet: [StringSearchType]

  # Street
  street: [StringSearchType]

  # Block
  block: [StringSearchType]

  # Neighbourhood
  neighbourhood: [StringSearchType]

  # District
  district: [StringSearchType]

  # City
  city: [StringSearchType]

  # Line1
  line1: [StringSearchType]

  # Line2
  line2: [StringSearchType]

  # Line3
  line3: [StringSearchType]

  # Line4
  line4: [StringSearchType]

  # Line5
  line5: [StringSearchType]

  # AdminAreaName
  adminAreaName: [StringSearchType]

  # AdminAreaCode
  adminAreaCode: [StringSearchType]

  # Province
  province: [StringSearchType]

  # ProvinceName
  provinceName: [StringSearchType]

  # ProvinceCode
  provinceCode: [StringSearchType]

  # PostalCode
  postalCode: [StringSearchType]

  # CountryName
  countryName: [StringSearchType]

  # CountryIso2
  countryIso2: [StringSearchType]

  # CountryIso3
  countryIso3: [StringSearchType]

  # CountryIsoNumber
  countryIsoNumber: [IntSearch]

  # SortingNumber1
  sortingNumber1: [StringSearchType]

  # SortingNumber2
  sortingNumber2: [StringSearchType]

  # PoboxNumber
  poboxNumber: [StringSearchType]

  # Label
  label: [StringSearchType]

  # Type
  type: [StringSearchType]

  # DataLabel
  dataLabel: [StringSearchType]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # AddressProviderMapping
  addressProviderMapping: AddressProviderMappingSearch

  # CreatedBy
  createdBy: UserProfileSearch
}

# Employment SearchContext
input EmploymentSearch {
  # Id
  id: [IntSearch]

  # UserProfileId
  userProfileId: [IntSearch]

  # StartDate
  startDate: [DateTimeSearch]

  # EndDate
  endDate: [DateTimeSearch]

  # Created
  created: [DateTimeSearch]

  # UserProfile
  userProfile: UserProfileSearch
}

# ParentUserProfileMapping SearchContext
input ParentUserProfileMappingSearch {
  # Id
  id: [IntSearch]

  # ParentUserProfileId
  parentUserProfileId: [IntSearch]

  # ChildUserProfileId
  childUserProfileId: [IntSearch]

  # IsAdmin
  isAdmin: [BooleanSearch]

  # IsVisible
  isVisible: [BooleanSearch]

  # ExpiryDate
  expiryDate: [DateTimeSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # ChildUserProfile
  childUserProfile: UserProfileSearch

  # ParentUserProfile
  parentUserProfile: UserProfileSearch
}

# Team SearchContext
input TeamSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Code
  code: [StringSearchType]

  # TeamTarget
  teamTarget: [FloatSearch]

  # TeamLeaderId
  teamLeaderId: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # TeamLeader
  teamLeader: UserProfileSearch

  # Searches for matches in UserProfileTeamMappings
  userProfileTeamMappings: UserProfileTeamMappingSearch
}

# UserProfileTeamMapping SearchContext
input UserProfileTeamMappingSearch {
  # Id
  id: [IntSearch]

  # UserProfileId
  userProfileId: [IntSearch]

  # TeamId
  teamId: [IntSearch]

  # IsActive
  isActive: [BooleanSearch]

  # OnPlasma
  onPlasma: [BooleanSearch]

  # InTeamStats
  inTeamStats: [BooleanSearch]

  # StartDate
  startDate: [DateTimeSearch]

  # EndDate
  endDate: [DateTimeSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # CreatedBy
  createdBy: UserProfileSearch

  # Team
  team: TeamSearch

  # UserProfile
  userProfile: UserProfileSearch
}

# UserProfileDepartmentMapping SearchContext
input UserProfileDepartmentMappingSearch {
  # Id
  id: [IntSearch]

  # UserProfileId
  userProfileId: [IntSearch]

  # DepartmentId
  departmentId: [IntSearch]

  # IsDefault
  isDefault: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # CreatedBy
  createdBy: UserProfileSearch

  # Department
  department: DepartmentSearch

  # UserProfile
  userProfile: UserProfileSearch
}

# Department SearchContext
input DepartmentSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # ParentDepartmentId
  parentDepartmentId: [IntSearch]

  # IsVisible
  isVisible: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # ParentDepartment
  parentDepartment: DepartmentSearch

  # Searches for matches in InverseParentDepartment
  inverseParentDepartment: DepartmentSearch

  # Searches for matches in UserProfileDepartmentMappings
  userProfileDepartmentMappings: UserProfileDepartmentMappingSearch
}

# UserProfileTarget SearchContext
input UserProfileTargetSearch {
  # Id
  id: [IntSearch]

  # UserProfileId
  userProfileId: [IntSearch]

  # Target
  target: [FloatSearch]

  # IsActive
  isActive: [BooleanSearch]

  # StartDate
  startDate: [DateTimeSearch]

  # EndDate
  endDate: [DateTimeSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]

  # CreatedBy
  createdBy: UserProfileSearch

  # UserProfile
  userProfile: UserProfileSearch
}

# Country SearchContext
input CountrySearch {
  # Id
  id: [IntSearch]

  # Code
  code: [StringSearchType]

  # Name
  name: [StringSearchType]

  # DialingCode
  dialingCode: [StringSearchType]

  # DefaultVatcodeId
  defaultVatcodeId: [IntSearch]

  # SortOrder
  sortOrder: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Addresses
  addresses: AddressSearch
}

# CustomerSicmapping SearchContext
input CustomerSicmappingSearch {
  # Id
  id: [IntSearch]

  # CustomerId
  customerId: [IntSearch]

  # Sicid
  sicid: [IntSearch]

  # IsDefault
  isDefault: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # Customer
  customer: AddressSearch

  # Sic
  sic: AddressSearch
}

type ApplicationQLType {
  addresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressSearchTyp Filter
    filter: AddressSearch
  ): [AddressQLType]

  # ***Excludes IsDeleted***
  addressesCount: Int
  addressFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressFeatureMappingSearchTyp Filter
    filter: AddressFeatureMappingSearch
  ): [AddressFeatureMappingQLType]

  # ***Excludes IsDeleted***
  addressFeatureMappingsCount: Int
  areas(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AreaSearchTyp Filter
    filter: AreaSearch
  ): [AreaQLType]

  # ***Excludes IsDeleted***
  areasCount: Int
  assetRollHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollHeaderSearchTyp Filter
    filter: AssetRollHeaderSearch
  ): [AssetRollHeaderQLType]

  # ***Excludes IsDeleted***
  assetRollHeadersCount: Int
  assetRollItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollItemSearchTyp Filter
    filter: AssetRollItemSearch
  ): [AssetRollItemQLType]

  # ***Excludes IsDeleted***
  assetRollItemsCount: Int
  buildRequestHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderFeatureMappingSearchTyp Filter
    filter: BuildRequestHeaderFeatureMappingSearch
  ): [BuildRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderFeatureMappingsCount: Int
  buildRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeadersCount: Int
  buildRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemSearchTyp Filter
    filter: BuildRequestItemSearch
  ): [BuildRequestItemQLType]

  # ***Excludes IsDeleted***
  buildRequestItemsCount: Int
  buildRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitsCount: Int
  contactFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactFeatureMappingSearchTyp Filter
    filter: ContactFeatureMappingSearch
  ): [ContactFeatureMappingQLType]

  # ***Excludes IsDeleted***
  contactFeatureMappingsCount: Int
  contacts(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactSearchTyp Filter
    filter: ContactSearch
  ): [ContactQLType]

  # ***Excludes IsDeleted***
  contactsCount: Int
  created: DateTime!
  customerCreditNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeadersCount: Int
  customerCreditNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemSearchTyp Filter
    filter: CustomerCreditNoteItemSearch
  ): [CustomerCreditNoteItemQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemsCount: Int
  customerCreditNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemUnitSearchTyp Filter
    filter: CustomerCreditNoteItemUnitSearch
  ): [CustomerCreditNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemUnitsCount: Int
  customerFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerFeatureMappingSearchTyp Filter
    filter: CustomerFeatureMappingSearch
  ): [CustomerFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerFeatureMappingsCount: Int
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemSearchTyp Filter
    filter: CustomerInvoiceItemSearch
  ): [CustomerInvoiceItemQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemsCount: Int
  customerInvoiceItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemUnitSearchTyp Filter
    filter: CustomerInvoiceItemUnitSearch
  ): [CustomerInvoiceItemUnitQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemUnitsCount: Int
  customerPurchaseOrderRequestHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderFeatureMappingSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch
  ): [CustomerPurchaseOrderRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeaderFeatureMappingsCount: Int
  customerPurchaseOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeadersCount: Int
  customerPurchaseOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestItemSearchTyp Filter
    filter: CustomerPurchaseOrderRequestItemSearch
  ): [CustomerPurchaseOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestItemsCount: Int
  customerReturnHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnHeaderFeatureMappingSearchTyp Filter
    filter: CustomerReturnHeaderFeatureMappingSearch
  ): [CustomerReturnHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerReturnHeaderFeatureMappingsCount: Int
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  customerReturnItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemsCount: Int
  customerReturnItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemUnitSearchTyp Filter
    filter: CustomerReturnItemUnitSearch
  ): [CustomerReturnItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnItemUnitsCount: Int
  customerReturnRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeadersCount: Int
  customerReturnRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemSearchTyp Filter
    filter: CustomerReturnRequestItemSearch
  ): [CustomerReturnRequestItemQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemsCount: Int
  customerReturnRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemUnitSearchTyp Filter
    filter: CustomerReturnRequestItemUnitSearch
  ): [CustomerReturnRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemUnitsCount: Int
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  customerStockLevels(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerStockLevelSearchTyp Filter
    filter: CustomerStockLevelSearch
  ): [CustomerStockLevelQLType]

  # ***Excludes IsDeleted***
  customerStockLevelsCount: Int
  dispatchNoteHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderFeatureMappingSearchTyp Filter
    filter: DispatchNoteHeaderFeatureMappingSearch
  ): [DispatchNoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderFeatureMappingsCount: Int
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  dispatchNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemSearchTyp Filter
    filter: DispatchNoteItemSearch
  ): [DispatchNoteItemQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemsCount: Int
  dispatchNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemUnitSearchTyp Filter
    filter: DispatchNoteItemUnitSearch
  ): [DispatchNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemUnitsCount: Int
  dispatchNoteTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteTransactionSearchTyp Filter
    filter: DispatchNoteTransactionSearch
  ): [DispatchNoteTransactionQLType]

  # ***Excludes IsDeleted***
  dispatchNoteTransactionsCount: Int
  features(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # FeatureSearchTyp Filter
    filter: FeatureSearch
  ): [FeatureQLType]

  # ***Excludes IsDeleted***
  featuresCount: Int
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  goodsReceivedNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemSearchTyp Filter
    filter: GoodsReceivedNoteItemSearch
  ): [GoodsReceivedNoteItemQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemsCount: Int
  goodsReceivedNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitSearch
  ): [GoodsReceivedNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitsCount: Int
  goodsReceivedNoteItemUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitTransactionSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitTransactionSearch
  ): [GoodsReceivedNoteItemUnitTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitTransactionsCount: Int
  goodsReceivedNoteTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteTransactionSearchTyp Filter
    filter: GoodsReceivedNoteTransactionSearch
  ): [GoodsReceivedNoteTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteTransactionsCount: Int
  guid: ID!
  id: Int!
  incidentals(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalsCount: Int
  isDeleted: Boolean!
  name: String
  nonOrderedGoodsHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeadersCount: Int
  nonOrderedGoodsItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemSearchTyp Filter
    filter: NonOrderedGoodsItemSearch
  ): [NonOrderedGoodsItemQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemsCount: Int
  nonOrderedGoodsItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemUnitSearchTyp Filter
    filter: NonOrderedGoodsItemUnitSearch
  ): [NonOrderedGoodsItemUnitQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemUnitsCount: Int
  proFormaInvoiceHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderFeatureMappingSearchTyp Filter
    filter: ProFormaInvoiceHeaderFeatureMappingSearch
  ): [ProFormaInvoiceHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderFeatureMappingsCount: Int
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  proFormaInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceItemsCount: Int
  purchaseOrderHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderFeatureMappingSearchTyp Filter
    filter: PurchaseOrderHeaderFeatureMappingSearch
  ): [PurchaseOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderFeatureMappingsCount: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  purchaseOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemSearchTyp Filter
    filter: PurchaseOrderItemSearch
  ): [PurchaseOrderItemQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemsCount: Int
  purchaseOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitsCount: Int
  quoteHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderFeatureMappingSearchTyp Filter
    filter: QuoteHeaderFeatureMappingSearch
  ): [QuoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  quoteHeaderFeatureMappingsCount: Int
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
  quoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemsCount: Int
  salesOrderHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderFeatureMappingSearchTyp Filter
    filter: SalesOrderHeaderFeatureMappingSearch
  ): [SalesOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderFeatureMappingsCount: Int
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salesOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemsCount: Int
  salesOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemUnitSearchTyp Filter
    filter: SalesOrderItemUnitSearch
  ): [SalesOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  salesOrderItemUnitsCount: Int
  salesOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeadersCount: Int
  salesOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestItemSearchTyp Filter
    filter: SalesOrderRequestItemSearch
  ): [SalesOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestItemsCount: Int
  stockFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockFeatureMappingSearchTyp Filter
    filter: StockFeatureMappingSearch
  ): [StockFeatureMappingQLType]

  # ***Excludes IsDeleted***
  stockFeatureMappingsCount: Int
  stockLocations(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockLocationSearchTyp Filter
    filter: StockLocationSearch
  ): [StockLocationQLType]

  # ***Excludes IsDeleted***
  stockLocationsCount: Int
  stockMovementParentTypes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementParentTypeSearchTyp Filter
    filter: StockMovementParentTypeSearch
  ): [StockMovementParentTypeQLType]

  # ***Excludes IsDeleted***
  stockMovementParentTypesCount: Int
  stockMovementRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeadersCount: Int
  stockMovementRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestItemSearchTyp Filter
    filter: StockMovementRequestItemSearch
  ): [StockMovementRequestItemQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestItemsCount: Int
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockMovementTypes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTypeSearchTyp Filter
    filter: StockMovementTypeSearch
  ): [StockMovementTypeQLType]

  # ***Excludes IsDeleted***
  stockMovementTypesCount: Int
  stocks(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockSearchTyp Filter
    filter: StockSearch
  ): [StockQLType]

  # ***Excludes IsDeleted***
  stocksCount: Int
  stockTakeAdjustmentCodes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeAdjustmentCodeSearchTyp Filter
    filter: StockTakeAdjustmentCodeSearch
  ): [StockTakeAdjustmentCodeQLType]

  # ***Excludes IsDeleted***
  stockTakeAdjustmentCodesCount: Int
  stockTakeDiscrepancies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepanciesCount: Int
  stockTakeHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeHeaderSearchTyp Filter
    filter: StockTakeHeaderSearch
  ): [StockTakeHeaderQLType]

  # ***Excludes IsDeleted***
  stockTakeHeadersCount: Int
  stockTakeItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemsCount: Int
  stockTallies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTallySearchTyp Filter
    filter: StockTallySearch
  ): [StockTallyQLType]

  # ***Excludes IsDeleted***
  stockTalliesCount: Int
  stockThresholds(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockThresholdSearchTyp Filter
    filter: StockThresholdSearch
  ): [StockThresholdQLType]

  # ***Excludes IsDeleted***
  stockThresholdsCount: Int
  stockUnitAssets(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAssetSearchTyp Filter
    filter: StockUnitAssetSearch
  ): [StockUnitAssetQLType]

  # ***Excludes IsDeleted***
  stockUnitAssetsCount: Int
  stockUnitAttributes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAttributeSearchTyp Filter
    filter: StockUnitAttributeSearch
  ): [StockUnitAttributeQLType]

  # ***Excludes IsDeleted***
  stockUnitAttributesCount: Int
  stockUnitGroups(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitGroupSearchTyp Filter
    filter: StockUnitGroupSearch
  ): [StockUnitGroupQLType]

  # ***Excludes IsDeleted***
  stockUnitGroupsCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  supplierFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierFeatureMappingSearchTyp Filter
    filter: SupplierFeatureMappingSearch
  ): [SupplierFeatureMappingQLType]

  # ***Excludes IsDeleted***
  supplierFeatureMappingsCount: Int
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
  supplierStockAndCosts(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierStockAndCostSearchTyp Filter
    filter: SupplierStockAndCostSearch
  ): [SupplierStockAndCostQLType]

  # ***Excludes IsDeleted***
  supplierStockAndCostsCount: Int
  userProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # UserProfileSearchTyp Filter
    filter: UserProfileSearch
  ): [UserProfileQLType]

  # ***Excludes IsDeleted***
  userProfilesCount: Int
  warranties(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # WarrantySearchTyp Filter
    filter: WarrantySearch
  ): [WarrantyQLType]

  # ***Excludes IsDeleted***
  warrantiesCount: Int
}

type AddressFeatureMappingQLType {
  address: AddressQLType
  addressId: Int!
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type UserProfileQLType {
  addressCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressSearchTyp Filter
    filter: AddressSearch
  ): [AddressQLType]

  # ***Excludes IsDeleted***
  addressCreatedBiesCount: Int
  addressFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressFeatureMappingSearchTyp Filter
    filter: AddressFeatureMappingSearch
  ): [AddressFeatureMappingQLType]

  # ***Excludes IsDeleted***
  addressFeatureMappingCreatedBiesCount: Int
  addressFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressFeatureMappingSearchTyp Filter
    filter: AddressFeatureMappingSearch
  ): [AddressFeatureMappingQLType]

  # ***Excludes IsDeleted***
  addressFeatureMappingModifiedBiesCount: Int
  addressModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressSearchTyp Filter
    filter: AddressSearch
  ): [AddressQLType]

  # ***Excludes IsDeleted***
  addressModifiedBiesCount: Int
  addressProviderMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressProviderMappingSearchTyp Filter
    filter: AddressProviderMappingSearch
  ): [AddressProviderMappingQLType]

  # ***Excludes IsDeleted***
  addressProviderMappingsCount: Int
  application: ApplicationQLType
  applicationId: Int!
  area: AreaQLType
  areaId: Int!
  areas(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AreaSearchTyp Filter
    filter: AreaSearch
  ): [AreaQLType]

  # ***Excludes IsDeleted***
  areasCount: Int
  assetRollHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollHeaderSearchTyp Filter
    filter: AssetRollHeaderSearch
  ): [AssetRollHeaderQLType]

  # ***Excludes IsDeleted***
  assetRollHeadersCount: Int
  assetRollItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollItemSearchTyp Filter
    filter: AssetRollItemSearch
  ): [AssetRollItemQLType]

  # ***Excludes IsDeleted***
  assetRollItemsCount: Int
  avatarUrl: String
  buildRequestHeaderAssignedTos(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderAssignedTosCount: Int
  buildRequestHeaderCompletedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderCompletedBiesCount: Int
  buildRequestHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderCreatedBiesCount: Int
  buildRequestHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderFeatureMappingSearchTyp Filter
    filter: BuildRequestHeaderFeatureMappingSearch
  ): [BuildRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderFeatureMappingCreatedBiesCount: Int
  buildRequestHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderFeatureMappingSearchTyp Filter
    filter: BuildRequestHeaderFeatureMappingSearch
  ): [BuildRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderFeatureMappingModifiedBiesCount: Int
  buildRequestHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderModifiedBiesCount: Int
  buildRequestHeaderRequestedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderRequestedBiesCount: Int
  buildRequestItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemSearchTyp Filter
    filter: BuildRequestItemSearch
  ): [BuildRequestItemQLType]

  # ***Excludes IsDeleted***
  buildRequestItemCreatedBiesCount: Int
  buildRequestItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemSearchTyp Filter
    filter: BuildRequestItemSearch
  ): [BuildRequestItemQLType]

  # ***Excludes IsDeleted***
  buildRequestItemModifiedBiesCount: Int
  buildRequestItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitCreatedBiesCount: Int
  buildRequestItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitModifiedBiesCount: Int
  categories(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CategorySearchTyp Filter
    filter: CategorySearch
  ): [CategoryQLType]

  # ***Excludes IsDeleted***
  categoriesCount: Int
  contactCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactSearchTyp Filter
    filter: ContactSearch
  ): [ContactQLType]

  # ***Excludes IsDeleted***
  contactCreatedBiesCount: Int
  contactFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactFeatureMappingSearchTyp Filter
    filter: ContactFeatureMappingSearch
  ): [ContactFeatureMappingQLType]

  # ***Excludes IsDeleted***
  contactFeatureMappingCreatedBiesCount: Int
  contactFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactFeatureMappingSearchTyp Filter
    filter: ContactFeatureMappingSearch
  ): [ContactFeatureMappingQLType]

  # ***Excludes IsDeleted***
  contactFeatureMappingModifiedBiesCount: Int
  contactModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactSearchTyp Filter
    filter: ContactSearch
  ): [ContactQLType]

  # ***Excludes IsDeleted***
  contactModifiedBiesCount: Int
  correlationCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CorrelationSearchTyp Filter
    filter: CorrelationSearch
  ): [CorrelationQLType]

  # ***Excludes IsDeleted***
  correlationCreatedBiesCount: Int
  correlationModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CorrelationSearchTyp Filter
    filter: CorrelationSearch
  ): [CorrelationQLType]

  # ***Excludes IsDeleted***
  correlationModifiedBiesCount: Int
  courierCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CourierSearchTyp Filter
    filter: CourierSearch
  ): [CourierQLType]

  # ***Excludes IsDeleted***
  courierCreatedBiesCount: Int
  courierDeliveryMethods(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CourierDeliveryMethodSearchTyp Filter
    filter: CourierDeliveryMethodSearch
  ): [CourierDeliveryMethodQLType]

  # ***Excludes IsDeleted***
  courierDeliveryMethodsCount: Int
  courierModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CourierSearchTyp Filter
    filter: CourierSearch
  ): [CourierQLType]

  # ***Excludes IsDeleted***
  courierModifiedBiesCount: Int
  created: DateTime!
  createdBy: String
  customerCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customerCreatedBiesCount: Int
  customerCreditControllers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customerCreditControllersCount: Int
  customerCreditNoteHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeaderCreatedBiesCount: Int
  customerCreditNoteHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeaderModifiedBiesCount: Int
  customerCreditNoteHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeaderSalesPeopleCount: Int
  customerCreditNoteItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemSearchTyp Filter
    filter: CustomerCreditNoteItemSearch
  ): [CustomerCreditNoteItemQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemCreatedBiesCount: Int
  customerCreditNoteItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemSearchTyp Filter
    filter: CustomerCreditNoteItemSearch
  ): [CustomerCreditNoteItemQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemModifiedBiesCount: Int
  customerCreditNoteItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemUnitSearchTyp Filter
    filter: CustomerCreditNoteItemUnitSearch
  ): [CustomerCreditNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemUnitCreatedBiesCount: Int
  customerCreditNoteItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemUnitSearchTyp Filter
    filter: CustomerCreditNoteItemUnitSearch
  ): [CustomerCreditNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemUnitModifiedBiesCount: Int
  customerFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerFeatureMappingSearchTyp Filter
    filter: CustomerFeatureMappingSearch
  ): [CustomerFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerFeatureMappingCreatedBiesCount: Int
  customerFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerFeatureMappingSearchTyp Filter
    filter: CustomerFeatureMappingSearch
  ): [CustomerFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerFeatureMappingModifiedBiesCount: Int
  customerInvoiceHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeaderCreatedBiesCount: Int
  customerInvoiceHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeaderModifiedBiesCount: Int
  customerInvoiceHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeaderSalesPeopleCount: Int
  customerInvoiceItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemSearchTyp Filter
    filter: CustomerInvoiceItemSearch
  ): [CustomerInvoiceItemQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemCreatedBiesCount: Int
  customerInvoiceItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemSearchTyp Filter
    filter: CustomerInvoiceItemSearch
  ): [CustomerInvoiceItemQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemModifiedBiesCount: Int
  customerInvoiceItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemUnitSearchTyp Filter
    filter: CustomerInvoiceItemUnitSearch
  ): [CustomerInvoiceItemUnitQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemUnitCreatedBiesCount: Int
  customerInvoiceItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemUnitSearchTyp Filter
    filter: CustomerInvoiceItemUnitSearch
  ): [CustomerInvoiceItemUnitQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemUnitModifiedBiesCount: Int
  customerModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customerModifiedBiesCount: Int
  customerPurchaseOrderRequestHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeaderCreatedBiesCount: Int
  customerPurchaseOrderRequestHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderFeatureMappingSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch
  ): [CustomerPurchaseOrderRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeaderFeatureMappingCreatedBiesCount: Int
  customerPurchaseOrderRequestHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderFeatureMappingSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch
  ): [CustomerPurchaseOrderRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeaderFeatureMappingModifiedBiesCount: Int
  customerPurchaseOrderRequestHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeaderModifiedBiesCount: Int
  customerPurchaseOrderRequestItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestItemSearchTyp Filter
    filter: CustomerPurchaseOrderRequestItemSearch
  ): [CustomerPurchaseOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestItemCreatedBiesCount: Int
  customerPurchaseOrderRequestItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestItemSearchTyp Filter
    filter: CustomerPurchaseOrderRequestItemSearch
  ): [CustomerPurchaseOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestItemModifiedBiesCount: Int
  customerReturnHeaderAssignedTos(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeaderAssignedTosCount: Int
  customerReturnHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeaderCreatedBiesCount: Int
  customerReturnHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnHeaderFeatureMappingSearchTyp Filter
    filter: CustomerReturnHeaderFeatureMappingSearch
  ): [CustomerReturnHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerReturnHeaderFeatureMappingCreatedBiesCount: Int
  customerReturnHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnHeaderFeatureMappingSearchTyp Filter
    filter: CustomerReturnHeaderFeatureMappingSearch
  ): [CustomerReturnHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerReturnHeaderFeatureMappingModifiedBiesCount: Int
  customerReturnHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeaderModifiedBiesCount: Int
  customerReturnHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeaderSalesPeopleCount: Int
  customerReturnItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemCreatedBiesCount: Int
  customerReturnItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemModifiedBiesCount: Int
  customerReturnItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemUnitSearchTyp Filter
    filter: CustomerReturnItemUnitSearch
  ): [CustomerReturnItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnItemUnitCreatedBiesCount: Int
  customerReturnItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemUnitSearchTyp Filter
    filter: CustomerReturnItemUnitSearch
  ): [CustomerReturnItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnItemUnitModifiedBiesCount: Int
  customerReturnRequestHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeaderCreatedBiesCount: Int
  customerReturnRequestHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeaderModifiedBiesCount: Int
  customerReturnRequestHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeaderSalesPeopleCount: Int
  customerReturnRequestItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemSearchTyp Filter
    filter: CustomerReturnRequestItemSearch
  ): [CustomerReturnRequestItemQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemCreatedBiesCount: Int
  customerReturnRequestItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemSearchTyp Filter
    filter: CustomerReturnRequestItemSearch
  ): [CustomerReturnRequestItemQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemModifiedBiesCount: Int
  customerReturnRequestItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemUnitSearchTyp Filter
    filter: CustomerReturnRequestItemUnitSearch
  ): [CustomerReturnRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemUnitCreatedBiesCount: Int
  customerReturnRequestItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemUnitSearchTyp Filter
    filter: CustomerReturnRequestItemUnitSearch
  ): [CustomerReturnRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemUnitModifiedBiesCount: Int
  customerSageAuxes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSageAuxSearchTyp Filter
    filter: CustomerSageAuxSearch
  ): [CustomerSageAuxQLType]

  # ***Excludes IsDeleted***
  customerSageAuxesCount: Int
  customerSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customerSalesPeopleCount: Int
  customerStockLevels(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerStockLevelSearchTyp Filter
    filter: CustomerStockLevelSearch
  ): [CustomerStockLevelQLType]

  # ***Excludes IsDeleted***
  customerStockLevelsCount: Int
  deliveryMethods(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DeliveryMethodSearchTyp Filter
    filter: DeliveryMethodSearch
  ): [DeliveryMethodQLType]

  # ***Excludes IsDeleted***
  deliveryMethodsCount: Int
  dispatchNoteHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderCreatedBiesCount: Int
  dispatchNoteHeaderDispatchedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderDispatchedBiesCount: Int
  dispatchNoteHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderFeatureMappingSearchTyp Filter
    filter: DispatchNoteHeaderFeatureMappingSearch
  ): [DispatchNoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderFeatureMappingCreatedBiesCount: Int
  dispatchNoteHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderFeatureMappingSearchTyp Filter
    filter: DispatchNoteHeaderFeatureMappingSearch
  ): [DispatchNoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderFeatureMappingModifiedBiesCount: Int
  dispatchNoteHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderModifiedBiesCount: Int
  dispatchNoteHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderSalesPeopleCount: Int
  dispatchNoteItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemSearchTyp Filter
    filter: DispatchNoteItemSearch
  ): [DispatchNoteItemQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemCreatedBiesCount: Int
  dispatchNoteItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemSearchTyp Filter
    filter: DispatchNoteItemSearch
  ): [DispatchNoteItemQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemModifiedBiesCount: Int
  dispatchNoteItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemUnitSearchTyp Filter
    filter: DispatchNoteItemUnitSearch
  ): [DispatchNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemUnitCreatedBiesCount: Int
  dispatchNoteItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemUnitSearchTyp Filter
    filter: DispatchNoteItemUnitSearch
  ): [DispatchNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemUnitModifiedBiesCount: Int
  dispatchNoteTransactionCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteTransactionSearchTyp Filter
    filter: DispatchNoteTransactionSearch
  ): [DispatchNoteTransactionQLType]

  # ***Excludes IsDeleted***
  dispatchNoteTransactionCreatedBiesCount: Int
  dispatchNoteTransactionModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteTransactionSearchTyp Filter
    filter: DispatchNoteTransactionSearch
  ): [DispatchNoteTransactionQLType]

  # ***Excludes IsDeleted***
  dispatchNoteTransactionModifiedBiesCount: Int
  email: String
  employments(
    sortOrder: [SortOrderType]
    top: Int

    # EmploymentSearchTyp Filter
    filter: EmploymentSearch
  ): [EmploymentQLType]

  #
  employmentsCount: Int
  extension: String
  featureCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # FeatureSearchTyp Filter
    filter: FeatureSearch
  ): [FeatureQLType]

  # ***Excludes IsDeleted***
  featureCreatedBiesCount: Int
  featureModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # FeatureSearchTyp Filter
    filter: FeatureSearch
  ): [FeatureQLType]

  # ***Excludes IsDeleted***
  featureModifiedBiesCount: Int
  fullName: String
  goodsReceivedNoteHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeaderCreatedBiesCount: Int
  goodsReceivedNoteHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeaderModifiedBiesCount: Int
  goodsReceivedNoteHeaderReceivedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeaderReceivedBiesCount: Int
  goodsReceivedNoteItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemSearchTyp Filter
    filter: GoodsReceivedNoteItemSearch
  ): [GoodsReceivedNoteItemQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemCreatedBiesCount: Int
  goodsReceivedNoteItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemSearchTyp Filter
    filter: GoodsReceivedNoteItemSearch
  ): [GoodsReceivedNoteItemQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemModifiedBiesCount: Int
  goodsReceivedNoteItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitSearch
  ): [GoodsReceivedNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitCreatedBiesCount: Int
  goodsReceivedNoteItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitSearch
  ): [GoodsReceivedNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitModifiedBiesCount: Int
  goodsReceivedNoteItemUnitTransactionCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitTransactionSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitTransactionSearch
  ): [GoodsReceivedNoteItemUnitTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitTransactionCreatedBiesCount: Int
  goodsReceivedNoteItemUnitTransactionModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitTransactionSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitTransactionSearch
  ): [GoodsReceivedNoteItemUnitTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitTransactionModifiedBiesCount: Int
  goodsReceivedNoteTransactionCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteTransactionSearchTyp Filter
    filter: GoodsReceivedNoteTransactionSearch
  ): [GoodsReceivedNoteTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteTransactionCreatedBiesCount: Int
  goodsReceivedNoteTransactionModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteTransactionSearchTyp Filter
    filter: GoodsReceivedNoteTransactionSearch
  ): [GoodsReceivedNoteTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteTransactionModifiedBiesCount: Int
  guid: ID!
  id: Int!
  incidentalCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalCreatedBiesCount: Int
  incidentalModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalModifiedBiesCount: Int
  incidentalSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalSalesPeopleCount: Int
  isDeleted: Boolean!
  jobTitle: String
  loginId: String
  loqateAddresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # LoqateAddressSearchTyp Filter
    filter: LoqateAddressSearch
  ): [LoqateAddressQLType]

  # ***Excludes IsDeleted***
  loqateAddressesCount: Int
  memoAllocatedTos(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  memoAllocatedTosCount: Int
  memoCompletedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  memoCompletedBiesCount: Int
  memoCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  memoCreatedBiesCount: Int
  memoModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  memoModifiedBiesCount: Int
  mobile: String
  nonOrderedGoodsHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeaderCreatedBiesCount: Int
  nonOrderedGoodsHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeaderModifiedBiesCount: Int
  nonOrderedGoodsItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemSearchTyp Filter
    filter: NonOrderedGoodsItemSearch
  ): [NonOrderedGoodsItemQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemCreatedBiesCount: Int
  nonOrderedGoodsItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemSearchTyp Filter
    filter: NonOrderedGoodsItemSearch
  ): [NonOrderedGoodsItemQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemModifiedBiesCount: Int
  nonOrderedGoodsItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemUnitSearchTyp Filter
    filter: NonOrderedGoodsItemUnitSearch
  ): [NonOrderedGoodsItemUnitQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemUnitCreatedBiesCount: Int
  nonOrderedGoodsItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemUnitSearchTyp Filter
    filter: NonOrderedGoodsItemUnitSearch
  ): [NonOrderedGoodsItemUnitQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemUnitModifiedBiesCount: Int
  nonOrderedGoodsOriginCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsOriginSearchTyp Filter
    filter: NonOrderedGoodsOriginSearch
  ): [NonOrderedGoodsOriginQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsOriginCreatedBiesCount: Int
  nonOrderedGoodsOriginModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsOriginSearchTyp Filter
    filter: NonOrderedGoodsOriginSearch
  ): [NonOrderedGoodsOriginQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsOriginModifiedBiesCount: Int
  parentUserProfileMappingChildUserProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ParentUserProfileMappingSearchTyp Filter
    filter: ParentUserProfileMappingSearch
  ): [ParentUserProfileMappingQLType]

  # ***Excludes IsDeleted***
  parentUserProfileMappingChildUserProfilesCount: Int
  parentUserProfileMappingParentUserProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ParentUserProfileMappingSearchTyp Filter
    filter: ParentUserProfileMappingSearch
  ): [ParentUserProfileMappingQLType]

  # ***Excludes IsDeleted***
  parentUserProfileMappingParentUserProfilesCount: Int
  phoneNumber: String
  proFormaInvoiceHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderCreatedBiesCount: Int
  proFormaInvoiceHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderFeatureMappingSearchTyp Filter
    filter: ProFormaInvoiceHeaderFeatureMappingSearch
  ): [ProFormaInvoiceHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderFeatureMappingCreatedBiesCount: Int
  proFormaInvoiceHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderFeatureMappingSearchTyp Filter
    filter: ProFormaInvoiceHeaderFeatureMappingSearch
  ): [ProFormaInvoiceHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderFeatureMappingModifiedBiesCount: Int
  proFormaInvoiceHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderModifiedBiesCount: Int
  proFormaInvoiceHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderSalesPeopleCount: Int
  proFormaInvoiceItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceItemCreatedBiesCount: Int
  proFormaInvoiceItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceItemModifiedBiesCount: Int
  proofOfDeliveryCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProofOfDeliverySearchTyp Filter
    filter: ProofOfDeliverySearch
  ): [ProofOfDeliveryQLType]

  # ***Excludes IsDeleted***
  proofOfDeliveryCreatedBiesCount: Int
  proofOfDeliveryModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProofOfDeliverySearchTyp Filter
    filter: ProofOfDeliverySearch
  ): [ProofOfDeliveryQLType]

  # ***Excludes IsDeleted***
  proofOfDeliveryModifiedBiesCount: Int
  purchaseOrderHeaderCarriageChargeMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderCarriageChargeMappingSearchTyp Filter
    filter: PurchaseOrderHeaderCarriageChargeMappingSearch
  ): [PurchaseOrderHeaderCarriageChargeMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderCarriageChargeMappingCreatedBiesCount: Int
  purchaseOrderHeaderCarriageChargeMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderCarriageChargeMappingSearchTyp Filter
    filter: PurchaseOrderHeaderCarriageChargeMappingSearch
  ): [PurchaseOrderHeaderCarriageChargeMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderCarriageChargeMappingModifiedBiesCount: Int
  purchaseOrderHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderCreatedBiesCount: Int
  purchaseOrderHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderFeatureMappingSearchTyp Filter
    filter: PurchaseOrderHeaderFeatureMappingSearch
  ): [PurchaseOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderFeatureMappingCreatedBiesCount: Int
  purchaseOrderHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderFeatureMappingSearchTyp Filter
    filter: PurchaseOrderHeaderFeatureMappingSearch
  ): [PurchaseOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderFeatureMappingModifiedBiesCount: Int
  purchaseOrderHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderModifiedBiesCount: Int
  purchaseOrderHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderSalesPeopleCount: Int
  purchaseOrderItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemSearchTyp Filter
    filter: PurchaseOrderItemSearch
  ): [PurchaseOrderItemQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemCreatedBiesCount: Int
  purchaseOrderItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemSearchTyp Filter
    filter: PurchaseOrderItemSearch
  ): [PurchaseOrderItemQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemModifiedBiesCount: Int
  purchaseOrderItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitCreatedBiesCount: Int
  purchaseOrderItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitModifiedBiesCount: Int
  quoteHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeaderCreatedBiesCount: Int
  quoteHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderFeatureMappingSearchTyp Filter
    filter: QuoteHeaderFeatureMappingSearch
  ): [QuoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  quoteHeaderFeatureMappingCreatedBiesCount: Int
  quoteHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderFeatureMappingSearchTyp Filter
    filter: QuoteHeaderFeatureMappingSearch
  ): [QuoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  quoteHeaderFeatureMappingModifiedBiesCount: Int
  quoteHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeaderModifiedBiesCount: Int
  quoteHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeaderSalesPeopleCount: Int
  quoteItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemCreatedBiesCount: Int
  quoteItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemModifiedBiesCount: Int
  role: RoleQLType
  roleId: Int!
  salesOrderHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderCreatedBiesCount: Int
  salesOrderHeaderFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderFeatureMappingSearchTyp Filter
    filter: SalesOrderHeaderFeatureMappingSearch
  ): [SalesOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderFeatureMappingCreatedBiesCount: Int
  salesOrderHeaderFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderFeatureMappingSearchTyp Filter
    filter: SalesOrderHeaderFeatureMappingSearch
  ): [SalesOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderFeatureMappingModifiedBiesCount: Int
  salesOrderHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderModifiedBiesCount: Int
  salesOrderHeaderSalesPeople(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderSalesPeopleCount: Int
  salesOrderItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemCreatedBiesCount: Int
  salesOrderItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemModifiedBiesCount: Int
  salesOrderItemUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemUnitSearchTyp Filter
    filter: SalesOrderItemUnitSearch
  ): [SalesOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  salesOrderItemUnitCreatedBiesCount: Int
  salesOrderItemUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemUnitSearchTyp Filter
    filter: SalesOrderItemUnitSearch
  ): [SalesOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  salesOrderItemUnitModifiedBiesCount: Int
  salesOrderRequestHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeaderCreatedBiesCount: Int
  salesOrderRequestHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeaderModifiedBiesCount: Int
  salesOrderRequestItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestItemSearchTyp Filter
    filter: SalesOrderRequestItemSearch
  ): [SalesOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestItemCreatedBiesCount: Int
  salesOrderRequestItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestItemSearchTyp Filter
    filter: SalesOrderRequestItemSearch
  ): [SalesOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestItemModifiedBiesCount: Int
  stockCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockSearchTyp Filter
    filter: StockSearch
  ): [StockQLType]

  # ***Excludes IsDeleted***
  stockCreatedBiesCount: Int
  stockFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockFeatureMappingSearchTyp Filter
    filter: StockFeatureMappingSearch
  ): [StockFeatureMappingQLType]

  # ***Excludes IsDeleted***
  stockFeatureMappingCreatedBiesCount: Int
  stockFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockFeatureMappingSearchTyp Filter
    filter: StockFeatureMappingSearch
  ): [StockFeatureMappingQLType]

  # ***Excludes IsDeleted***
  stockFeatureMappingModifiedBiesCount: Int
  stockLocationCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockLocationSearchTyp Filter
    filter: StockLocationSearch
  ): [StockLocationQLType]

  # ***Excludes IsDeleted***
  stockLocationCreatedBiesCount: Int
  stockLocationModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockLocationSearchTyp Filter
    filter: StockLocationSearch
  ): [StockLocationQLType]

  # ***Excludes IsDeleted***
  stockLocationModifiedBiesCount: Int
  stockModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockSearchTyp Filter
    filter: StockSearch
  ): [StockQLType]

  # ***Excludes IsDeleted***
  stockModifiedBiesCount: Int
  stockMovementCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementCreatedBiesCount: Int
  stockMovementModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementModifiedBiesCount: Int
  stockMovementParentTypeCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementParentTypeSearchTyp Filter
    filter: StockMovementParentTypeSearch
  ): [StockMovementParentTypeQLType]

  # ***Excludes IsDeleted***
  stockMovementParentTypeCreatedBiesCount: Int
  stockMovementParentTypeModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementParentTypeSearchTyp Filter
    filter: StockMovementParentTypeSearch
  ): [StockMovementParentTypeQLType]

  # ***Excludes IsDeleted***
  stockMovementParentTypeModifiedBiesCount: Int
  stockMovementRequestHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeaderCreatedBiesCount: Int
  stockMovementRequestHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeaderModifiedBiesCount: Int
  stockMovementRequestHeaderRequestedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeaderRequestedBiesCount: Int
  stockMovementRequestHeaderRequestedFors(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeaderRequestedForsCount: Int
  stockMovementRequestItemCompletedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestItemSearchTyp Filter
    filter: StockMovementRequestItemSearch
  ): [StockMovementRequestItemQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestItemCompletedBiesCount: Int
  stockMovementRequestItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestItemSearchTyp Filter
    filter: StockMovementRequestItemSearch
  ): [StockMovementRequestItemQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestItemCreatedBiesCount: Int
  stockMovementRequestItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestItemSearchTyp Filter
    filter: StockMovementRequestItemSearch
  ): [StockMovementRequestItemQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestItemModifiedBiesCount: Int
  stockMovementTransactionCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionCreatedBiesCount: Int
  stockMovementTransactionModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionModifiedBiesCount: Int
  stockMovementTypeCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTypeSearchTyp Filter
    filter: StockMovementTypeSearch
  ): [StockMovementTypeQLType]

  # ***Excludes IsDeleted***
  stockMovementTypeCreatedBiesCount: Int
  stockMovementTypeModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTypeSearchTyp Filter
    filter: StockMovementTypeSearch
  ): [StockMovementTypeQLType]

  # ***Excludes IsDeleted***
  stockMovementTypeModifiedBiesCount: Int
  stockTakeAdjustmentCodeCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeAdjustmentCodeSearchTyp Filter
    filter: StockTakeAdjustmentCodeSearch
  ): [StockTakeAdjustmentCodeQLType]

  # ***Excludes IsDeleted***
  stockTakeAdjustmentCodeCreatedBiesCount: Int
  stockTakeAdjustmentCodeModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeAdjustmentCodeSearchTyp Filter
    filter: StockTakeAdjustmentCodeSearch
  ): [StockTakeAdjustmentCodeQLType]

  # ***Excludes IsDeleted***
  stockTakeAdjustmentCodeModifiedBiesCount: Int
  stockTakeDiscrepancyCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepancyCreatedBiesCount: Int
  stockTakeDiscrepancyModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepancyModifiedBiesCount: Int
  stockTakeHeaderCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeHeaderSearchTyp Filter
    filter: StockTakeHeaderSearch
  ): [StockTakeHeaderQLType]

  # ***Excludes IsDeleted***
  stockTakeHeaderCreatedBiesCount: Int
  stockTakeHeaderModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeHeaderSearchTyp Filter
    filter: StockTakeHeaderSearch
  ): [StockTakeHeaderQLType]

  # ***Excludes IsDeleted***
  stockTakeHeaderModifiedBiesCount: Int
  stockTakeItemBookedInBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemBookedInBiesCount: Int
  stockTakeItemCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemCreatedBiesCount: Int
  stockTakeItemModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemModifiedBiesCount: Int
  stockTallyCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTallySearchTyp Filter
    filter: StockTallySearch
  ): [StockTallyQLType]

  # ***Excludes IsDeleted***
  stockTallyCreatedBiesCount: Int
  stockTallyModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTallySearchTyp Filter
    filter: StockTallySearch
  ): [StockTallyQLType]

  # ***Excludes IsDeleted***
  stockTallyModifiedBiesCount: Int
  stockThresholdCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockThresholdSearchTyp Filter
    filter: StockThresholdSearch
  ): [StockThresholdQLType]

  # ***Excludes IsDeleted***
  stockThresholdCreatedBiesCount: Int
  stockThresholdModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockThresholdSearchTyp Filter
    filter: StockThresholdSearch
  ): [StockThresholdQLType]

  # ***Excludes IsDeleted***
  stockThresholdModifiedBiesCount: Int
  stockUnitAssetCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAssetSearchTyp Filter
    filter: StockUnitAssetSearch
  ): [StockUnitAssetQLType]

  # ***Excludes IsDeleted***
  stockUnitAssetCreatedBiesCount: Int
  stockUnitAssetModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAssetSearchTyp Filter
    filter: StockUnitAssetSearch
  ): [StockUnitAssetQLType]

  # ***Excludes IsDeleted***
  stockUnitAssetModifiedBiesCount: Int
  stockUnitAttributeCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAttributeSearchTyp Filter
    filter: StockUnitAttributeSearch
  ): [StockUnitAttributeQLType]

  # ***Excludes IsDeleted***
  stockUnitAttributeCreatedBiesCount: Int
  stockUnitAttributeModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAttributeSearchTyp Filter
    filter: StockUnitAttributeSearch
  ): [StockUnitAttributeQLType]

  # ***Excludes IsDeleted***
  stockUnitAttributeModifiedBiesCount: Int
  stockUnitCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitCreatedBiesCount: Int
  stockUnitGroupCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitGroupSearchTyp Filter
    filter: StockUnitGroupSearch
  ): [StockUnitGroupQLType]

  # ***Excludes IsDeleted***
  stockUnitGroupCreatedBiesCount: Int
  stockUnitGroupModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitGroupSearchTyp Filter
    filter: StockUnitGroupSearch
  ): [StockUnitGroupQLType]

  # ***Excludes IsDeleted***
  stockUnitGroupModifiedBiesCount: Int
  stockUnitModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitModifiedBiesCount: Int
  stockUnitTransactionCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionCreatedBiesCount: Int
  stockUnitTransactionModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionModifiedBiesCount: Int
  supplierCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  supplierCreatedBiesCount: Int
  supplierFeatureMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierFeatureMappingSearchTyp Filter
    filter: SupplierFeatureMappingSearch
  ): [SupplierFeatureMappingQLType]

  # ***Excludes IsDeleted***
  supplierFeatureMappingCreatedBiesCount: Int
  supplierFeatureMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierFeatureMappingSearchTyp Filter
    filter: SupplierFeatureMappingSearch
  ): [SupplierFeatureMappingQLType]

  # ***Excludes IsDeleted***
  supplierFeatureMappingModifiedBiesCount: Int
  supplierModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  supplierModifiedBiesCount: Int
  supplierProviderMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierProviderMappingSearchTyp Filter
    filter: SupplierProviderMappingSearch
  ): [SupplierProviderMappingQLType]

  # ***Excludes IsDeleted***
  supplierProviderMappingCreatedBiesCount: Int
  supplierProviderMappingModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierProviderMappingSearchTyp Filter
    filter: SupplierProviderMappingSearch
  ): [SupplierProviderMappingQLType]

  # ***Excludes IsDeleted***
  supplierProviderMappingModifiedBiesCount: Int
  supplierPurchaseLedgerControllers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  supplierPurchaseLedgerControllersCount: Int
  supplierStockAndCostCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierStockAndCostSearchTyp Filter
    filter: SupplierStockAndCostSearch
  ): [SupplierStockAndCostQLType]

  # ***Excludes IsDeleted***
  supplierStockAndCostCreatedBiesCount: Int
  supplierStockAndCostModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierStockAndCostSearchTyp Filter
    filter: SupplierStockAndCostSearch
  ): [SupplierStockAndCostQLType]

  # ***Excludes IsDeleted***
  supplierStockAndCostModifiedBiesCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  teams(
    sortOrder: [SortOrderType]
    top: Int

    # TeamSearchTyp Filter
    filter: TeamSearch
  ): [TeamQLType]

  #
  teamsCount: Int
  userProfileDepartmentMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileDepartmentMappingSearchTyp Filter
    filter: UserProfileDepartmentMappingSearch
  ): [UserProfileDepartmentMappingQLType]

  #
  userProfileDepartmentMappingCreatedBiesCount: Int
  userProfileDepartmentMappingUserProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileDepartmentMappingSearchTyp Filter
    filter: UserProfileDepartmentMappingSearch
  ): [UserProfileDepartmentMappingQLType]

  #
  userProfileDepartmentMappingUserProfilesCount: Int
  userProfileTargetCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileTargetSearchTyp Filter
    filter: UserProfileTargetSearch
  ): [UserProfileTargetQLType]

  #
  userProfileTargetCreatedBiesCount: Int
  userProfileTargetUserProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileTargetSearchTyp Filter
    filter: UserProfileTargetSearch
  ): [UserProfileTargetQLType]

  #
  userProfileTargetUserProfilesCount: Int
  userProfileTeamMappingCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileTeamMappingSearchTyp Filter
    filter: UserProfileTeamMappingSearch
  ): [UserProfileTeamMappingQLType]

  #
  userProfileTeamMappingCreatedBiesCount: Int
  userProfileTeamMappingUserProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileTeamMappingSearchTyp Filter
    filter: UserProfileTeamMappingSearch
  ): [UserProfileTeamMappingQLType]

  #
  userProfileTeamMappingUserProfilesCount: Int
  warrantyCreatedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # WarrantySearchTyp Filter
    filter: WarrantySearch
  ): [WarrantyQLType]

  # ***Excludes IsDeleted***
  warrantyCreatedBiesCount: Int
  warrantyModifiedBies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # WarrantySearchTyp Filter
    filter: WarrantySearch
  ): [WarrantyQLType]

  # ***Excludes IsDeleted***
  warrantyModifiedBiesCount: Int
}

type AreaQLType {
  application: ApplicationQLType
  applicationId: Int!
  areaName: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  guid: ID!
  id: Int!
  inverseParentArea(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AreaSearchTyp Filter
    filter: AreaSearch
  ): [AreaQLType]

  # ***Excludes IsDeleted***
  inverseParentAreaCount: Int
  isDeleted: Boolean!
  nonOrderedGoodsHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeadersCount: Int
  parentArea: AreaQLType
  parentAreaId: Int
  stockLocations(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockLocationSearchTyp Filter
    filter: StockLocationSearch
  ): [StockLocationQLType]

  # ***Excludes IsDeleted***
  stockLocationsCount: Int
  userProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # UserProfileSearchTyp Filter
    filter: UserProfileSearch
  ): [UserProfileQLType]

  # ***Excludes IsDeleted***
  userProfilesCount: Int
}

type GoodsReceivedNoteHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  area: AreaQLType
  areaId: Int
  completedDate: DateTime
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customer: CustomerQLType
  customerId: Int
  dateReceived: DateTime!
  goodsReceivedNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemSearchTyp Filter
    filter: GoodsReceivedNoteItemSearch
  ): [GoodsReceivedNoteItemQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemsCount: Int
  goodsReceivedNoteTransaction: GoodsReceivedNoteTransactionQLType
  goodsReceivedNoteTransactionId: Long
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  originRef: String
  receivedBy: UserProfileQLType
  receivedById: Int
  stockMovementRequestHeader: StockMovementRequestHeaderQLType
  stockMovementRequestHeaderId: Long
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  supplier: SupplierQLType
  supplierId: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type CorrelationQLType {
  buildRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeadersCount: Int
  correlationCode: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerCreditNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeadersCount: Int
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerPurchaseOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeadersCount: Int
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  customerReturnRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeadersCount: Int
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeadersCount: Int
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salesOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeadersCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type BuildRequestHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  assignedTo: UserProfileQLType
  assignedToId: Int
  buildRequestHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderFeatureMappingSearchTyp Filter
    filter: BuildRequestHeaderFeatureMappingSearch
  ): [BuildRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderFeatureMappingsCount: Int
  buildRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemSearchTyp Filter
    filter: BuildRequestItemSearch
  ): [BuildRequestItemQLType]

  # ***Excludes IsDeleted***
  buildRequestItemsCount: Int
  completedBy: UserProfileQLType
  completedById: Int
  completedDate: DateTime!
  configurationDetails: String
  contact: ContactQLType
  contactId: Int
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customer: CustomerQLType
  customerId: Int
  customerPo: String
  customerRef: String
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  requestedBy: UserProfileQLType
  requestedById: Int!
  requiredDate: DateTime!
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  startDate: DateTime
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type ContactQLType {
  address: AddressQLType
  addressId: Int
  application: ApplicationQLType
  applicationId: Int!
  buildRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeadersCount: Int
  contactFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactFeatureMappingSearchTyp Filter
    filter: ContactFeatureMappingSearch
  ): [ContactFeatureMappingQLType]

  # ***Excludes IsDeleted***
  contactFeatureMappingsCount: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerContactMappings(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerContactMappingSearchTyp Filter
    filter: CustomerContactMappingSearch
  ): [CustomerContactMappingQLType]

  #
  customerContactMappingsCount: Int
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  email: String
  extension: String
  guid: ID!
  id: Int!
  idRef: String
  isDeleted: Boolean!
  jobTitle: String
  mailshots: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  mobileNumber: String
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  name: String
  phoneNumber: String
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salutation: String
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  supplierContactMappings(
    sortOrder: [SortOrderType]
    top: Int

    # SupplierContactMappingSearchTyp Filter
    filter: SupplierContactMappingSearch
  ): [SupplierContactMappingQLType]

  #
  supplierContactMappingsCount: Int
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  title: String
}

type MemoMappingQLType {
  addresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressSearchTyp Filter
    filter: AddressSearch
  ): [AddressQLType]

  # ***Excludes IsDeleted***
  addressesCount: Int
  assetRollHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollHeaderSearchTyp Filter
    filter: AssetRollHeaderSearch
  ): [AssetRollHeaderQLType]

  # ***Excludes IsDeleted***
  assetRollHeadersCount: Int
  assetRollItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollItemSearchTyp Filter
    filter: AssetRollItemSearch
  ): [AssetRollItemQLType]

  # ***Excludes IsDeleted***
  assetRollItemsCount: Int
  buildRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeadersCount: Int
  buildRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitsCount: Int
  contacts(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactSearchTyp Filter
    filter: ContactSearch
  ): [ContactQLType]

  # ***Excludes IsDeleted***
  contactsCount: Int
  couriers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CourierSearchTyp Filter
    filter: CourierSearch
  ): [CourierQLType]

  # ***Excludes IsDeleted***
  couriersCount: Int
  created: DateTime!
  customerCreditNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeadersCount: Int
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  customerReturnItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemUnitSearchTyp Filter
    filter: CustomerReturnItemUnitSearch
  ): [CustomerReturnItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnItemUnitsCount: Int
  customerReturnRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeadersCount: Int
  customerReturnRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemUnitSearchTyp Filter
    filter: CustomerReturnRequestItemUnitSearch
  ): [CustomerReturnRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemUnitsCount: Int
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  id: Long!
  incidentals(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalsCount: Int
  memos(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  memosCount: Int
  nonOrderedGoodsHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeadersCount: Int
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  proofOfDeliveries(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProofOfDeliverySearchTyp Filter
    filter: ProofOfDeliverySearch
  ): [ProofOfDeliveryQLType]

  # ***Excludes IsDeleted***
  proofOfDeliveriesCount: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  stockMovementRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeadersCount: Int
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  stocks(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockSearchTyp Filter
    filter: StockSearch
  ): [StockQLType]

  # ***Excludes IsDeleted***
  stocksCount: Int
  stockTakeHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeHeaderSearchTyp Filter
    filter: StockTakeHeaderSearch
  ): [StockTakeHeaderQLType]

  # ***Excludes IsDeleted***
  stockTakeHeadersCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
  supplierStockAndCosts(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierStockAndCostSearchTyp Filter
    filter: SupplierStockAndCostSearch
  ): [SupplierStockAndCostQLType]

  # ***Excludes IsDeleted***
  supplierStockAndCostsCount: Int
}

type AssetRollHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetRollItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollItemSearchTyp Filter
    filter: AssetRollItemSearch
  ): [AssetRollItemQLType]

  # ***Excludes IsDeleted***
  assetRollItemsCount: Int
  assetTagPrefix: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customer: CustomerQLType
  customerId: Int!
  endNumber: Int
  guid: ID!
  id: Int!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedById: Int
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  salesOrderItem: SalesOrderItemQLType
  salesOrderItemId: Long
  startNumber: Int
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type CustomerQLType {
  accountSetupDate: DateTime
  application: ApplicationQLType
  applicationId: Int!
  assetRollHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollHeaderSearchTyp Filter
    filter: AssetRollHeaderSearch
  ): [AssetRollHeaderQLType]

  # ***Excludes IsDeleted***
  assetRollHeadersCount: Int
  buildRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeadersCount: Int
  companyNumber: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  creditController: UserProfileQLType
  creditControllerId: Int
  currency: CurrencyQLType
  currencyId: Int
  customerAddressMapping: CustomerAddressMappingQLType
  customerAddressMappingId: Long
  customerContactMappings(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerContactMappingSearchTyp Filter
    filter: CustomerContactMappingSearch
  ): [CustomerContactMappingQLType]

  #
  customerContactMappingsCount: Int
  customerCreditNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeadersCount: Int
  customerFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerFeatureMappingSearchTyp Filter
    filter: CustomerFeatureMappingSearch
  ): [CustomerFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerFeatureMappingsCount: Int
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerName: String
  customerPaymentTerm: CustomerPaymentTermQLType
  customerPaymentTermId: Int!
  customerPurchaseOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeadersCount: Int
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  customerReturnRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeadersCount: Int
  customerSageAuxes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSageAuxSearchTyp Filter
    filter: CustomerSageAuxSearch
  ): [CustomerSageAuxQLType]

  # ***Excludes IsDeleted***
  customerSageAuxesCount: Int
  customerStockLevelCustomers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerStockLevelSearchTyp Filter
    filter: CustomerStockLevelSearch
  ): [CustomerStockLevelQLType]

  # ***Excludes IsDeleted***
  customerStockLevelCustomersCount: Int
  customerStockLevelParentCustomers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerStockLevelSearchTyp Filter
    filter: CustomerStockLevelSearch
  ): [CustomerStockLevelQLType]

  # ***Excludes IsDeleted***
  customerStockLevelParentCustomersCount: Int
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  guid: ID!
  id: Int!
  idRef: String
  inverseParentCustomer(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  inverseParentCustomerCount: Int
  isCustomerVisible: Boolean
  isDeleted: Boolean!
  isPublic: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  parentCustomer: CustomerQLType
  parentCustomerId: Int
  primaryContact: ContactQLType
  primaryContactId: Int
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
  quoteValidationTerm: QuoteValidationTermQLType
  quoteValidationTermId: Int!
  sageAccount: String
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salesOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeadersCount: Int
  salesPerson: UserProfileQLType
  salesPersonId: Int
  sector: SectorQLType
  sectorId: Int!
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  urn: String
  vatcode: VatcodeQLType
  vatcodeId: Int
}

type CurrencyQLType {
  created: DateTime!
  currencyCode: String
  customerCreditNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeadersCount: Int
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerPurchaseOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeadersCount: Int
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  defaultLocale: LocaleQLType
  defaultLocaleId: Int
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  exchangeRate: Decimal!
  id: Int!
  isDeleted: Boolean!
  name: String
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salesOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeadersCount: Int
  sortOrder: Int
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
}

scalar Decimal

type LocaleQLType {
  created: DateTime!
  currencies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CurrencySearchTyp Filter
    filter: CurrencySearch
  ): [CurrencyQLType]

  # ***Excludes IsDeleted***
  currenciesCount: Int
  id: Int!
  isDeleted: Boolean!
  name: String
  value: String
}

type CustomerCreditNoteHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerCreditNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemSearchTyp Filter
    filter: CustomerCreditNoteItemSearch
  ): [CustomerCreditNoteItemQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemsCount: Int
  customerId: Int!
  customerInvoiceHeader: CustomerInvoiceHeaderQLType
  customerInvoiceHeaderId: Long
  customerPo: String
  customerRef: String
  datePaid: DateTime
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  grossTotal: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  incoTerm: String
  isCommissionExcluded: Boolean!
  isDeleted: Boolean!
  isPaid: Boolean!
  isSubmitted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nettTotal: Decimal!
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalVat: Decimal!
}

type CustomerInvoiceHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerCreditNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeadersCount: Int
  customerId: Int!
  customerInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemSearchTyp Filter
    filter: CustomerInvoiceItemSearch
  ): [CustomerInvoiceItemQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemsCount: Int
  customerInvoiceItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemUnitSearchTyp Filter
    filter: CustomerInvoiceItemUnitSearch
  ): [CustomerInvoiceItemUnitQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemUnitsCount: Int
  customerPo: String
  dateDispatched: DateTime
  dateInvoiced: DateTime!
  datePaid: DateTime
  deliveryCharge: Decimal!
  dispatchNoteHeader: DispatchNoteHeaderQLType
  dispatchNoteHeaderId: Long!
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  exchangeRate: Decimal!
  grossTotal: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nettTotal: Decimal!
  paymentTerm: PaymentTermQLType
  paymentTermId: Int!
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long!
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalVat: Decimal!
}

type DispatchNoteHeaderQLType {
  address: AddressQLType
  addressId: Int
  application: ApplicationQLType
  applicationId: Int!
  boxesShipped: Int
  correlation: CorrelationQLType
  correlationId: Long
  courier: CourierQLType
  courierCost: Decimal!
  courierId: Int
  courierRef: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int!
  customerInvoiceHeader: CustomerInvoiceHeaderQLType
  customerInvoiceHeaderId: Long
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerPo: String
  customerRef: String
  dateDispatched: DateTime
  dateRequired: DateTime!
  deliveryMethod: DeliveryMethodQLType
  deliveryMethodId: Int
  deliverySpecialInstructions: String
  dispatchedBy: UserProfileQLType
  dispatchedById: Int
  dispatchedFor: Int
  dispatchedForNavigation: ContactQLType
  dispatchNoteHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderFeatureMappingSearchTyp Filter
    filter: DispatchNoteHeaderFeatureMappingSearch
  ): [DispatchNoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderFeatureMappingsCount: Int
  dispatchNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemSearchTyp Filter
    filter: DispatchNoteItemSearch
  ): [DispatchNoteItemQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemsCount: Int
  dispatchNoteTransaction: DispatchNoteTransactionQLType
  dispatchNoteTransactionId: Long
  exchangeRate: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  incoTerm: IncoTermQLType
  incoTermId: Int
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  proofOfDeliveries(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProofOfDeliverySearchTyp Filter
    filter: ProofOfDeliverySearch
  ): [ProofOfDeliveryQLType]

  # ***Excludes IsDeleted***
  proofOfDeliveriesCount: Int
  proofOfDelivery: ProofOfDeliveryQLType
  proofOfDeliveryId: Int
  requestedAddress: AddressQLType
  requestedAddressId: Int
  requestedCourier: CourierQLType
  requestedCourierId: Int!
  requestedDeliveryMethod: DeliveryMethodQLType
  requestedDeliveryMethodId: Int!
  requestedDispatchDate: DateTime
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
  trackingRef: String
}

type CourierQLType {
  applicationId: Int!
  courierDeliveryMethods(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CourierDeliveryMethodSearchTyp Filter
    filter: CourierDeliveryMethodSearch
  ): [CourierDeliveryMethodQLType]

  # ***Excludes IsDeleted***
  courierDeliveryMethodsCount: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  dispatchNoteHeaderCouriers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderCouriersCount: Int
  dispatchNoteHeaderRequestedCouriers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderRequestedCouriersCount: Int
  guid: ID!
  id: Int!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  name: String
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  urlReferrer: String
}

type StormStatusQLType {
  assetRollHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollHeaderSearchTyp Filter
    filter: AssetRollHeaderSearch
  ): [AssetRollHeaderQLType]

  # ***Excludes IsDeleted***
  assetRollHeadersCount: Int
  assetRollItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollItemSearchTyp Filter
    filter: AssetRollItemSearch
  ): [AssetRollItemQLType]

  # ***Excludes IsDeleted***
  assetRollItemsCount: Int
  buildRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeadersCount: Int
  categories(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CategorySearchTyp Filter
    filter: CategorySearch
  ): [CategoryQLType]

  # ***Excludes IsDeleted***
  categoriesCount: Int
  contacts(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactSearchTyp Filter
    filter: ContactSearch
  ): [ContactQLType]

  # ***Excludes IsDeleted***
  contactsCount: Int
  couriers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CourierSearchTyp Filter
    filter: CourierSearch
  ): [CourierQLType]

  # ***Excludes IsDeleted***
  couriersCount: Int
  created: DateTime!
  customerCreditNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteHeaderSearchTyp Filter
    filter: CustomerCreditNoteHeaderSearch
  ): [CustomerCreditNoteHeaderQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteHeadersCount: Int
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerPurchaseOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeadersCount: Int
  customerReturnHeaderRequestTypes(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeaderRequestTypesCount: Int
  customerReturnHeaderStormStatuses(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeaderStormStatusesCount: Int
  customerReturnItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemsCount: Int
  customerReturnRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestHeaderSearchTyp Filter
    filter: CustomerReturnRequestHeaderSearch
  ): [CustomerReturnRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestHeadersCount: Int
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  description: String
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  id: Int!
  incidentals(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalsCount: Int
  isDeleted: Boolean!
  nonOrderedGoodsHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeadersCount: Int
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salesOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestHeaderSearchTyp Filter
    filter: SalesOrderRequestHeaderSearch
  ): [SalesOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestHeadersCount: Int
  status: String
  stockMovementRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeadersCount: Int
  stockTakeHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeHeaderSearchTyp Filter
    filter: StockTakeHeaderSearch
  ): [StockTakeHeaderQLType]

  # ***Excludes IsDeleted***
  stockTakeHeadersCount: Int
  stormStatusMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StormStatusMappingSearchTyp Filter
    filter: StormStatusMappingSearch
  ): [StormStatusMappingQLType]

  # ***Excludes IsDeleted***
  stormStatusMappingsCount: Int
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
}

type AssetRollItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetRollHeader: Int!
  assetRollHeaderNavigation: AssetRollHeaderQLType
  assetTag: String
  buildRequestUnit: BuildRequestItemUnitQLType
  buildRequestUnitId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  id: Int!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedById: Int
  salesOrderItemUnit: SalesOrderItemUnitQLType
  salesOrderItemUnitId: Long
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type BuildRequestItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetRollItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollItemSearchTyp Filter
    filter: AssetRollItemSearch
  ): [AssetRollItemQLType]

  # ***Excludes IsDeleted***
  assetRollItemsCount: Int
  assetTag: String
  buildRequestItem: BuildRequestItemQLType
  buildRequestItemId: Long!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  salesOrderItem: SalesOrderItemQLType
  salesOrderItemId: Long
  salesOrderItemUnit: SalesOrderItemUnitQLType
  salesOrderItemUnitId: Long
  serialNo: String
  stockUnit: StockUnitQLType
  stockUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type BuildRequestItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  buildRequestHeader: BuildRequestHeaderQLType
  buildRequestHeaderId: Long!
  buildRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitsCount: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  guid: ID!
  id: Long!
  idRef: String
  isAssetTagRequired: Boolean!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  qty: Int!
  salesOrderItem: SalesOrderItemQLType
  salesOrderItemId: Long
  stock: StockQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type SalesOrderItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetRollHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollHeaderSearchTyp Filter
    filter: AssetRollHeaderSearch
  ): [AssetRollHeaderQLType]

  # ***Excludes IsDeleted***
  assetRollHeadersCount: Int
  avgCost: Decimal!
  avgPrice: Decimal!
  buildRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemSearchTyp Filter
    filter: BuildRequestItemSearch
  ): [BuildRequestItemQLType]

  # ***Excludes IsDeleted***
  buildRequestItemsCount: Int
  buildRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitsCount: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerRef: String
  description: String
  guid: ID!
  id: Long!
  idRef: String
  incidentals(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalsCount: Int
  inverseParentBundle(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  inverseParentBundleCount: Int
  isCustomerVisible: Boolean
  isDeleted: Boolean!
  isEditable: Boolean
  leadTime: DateTime
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  parentBundle: SalesOrderItemQLType
  parentBundleId: Long
  partNo: String
  qtyAllocated: Int!
  qtyDispatched: Int!
  qtyInvoiced: Int!
  qtyOrdered: Int!
  qtyOutstanding: Int
  qtyQueued: Int!
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long!
  salesOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemUnitSearchTyp Filter
    filter: SalesOrderItemUnitSearch
  ): [SalesOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  salesOrderItemUnitsCount: Int
  sortOrder: Int!
  stock: StockQLType
  stockId: Long
  supplierStockAndCost: SupplierStockAndCostQLType
  supplierStockAndCostId: Int
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
  totalUnitInvoiced: Decimal!
  totalUnitMargin: Decimal
  totalUnitMarkup: Decimal
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal
  totalUnitUnInvoiced: Decimal!
  totalUnitVat: Decimal!
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vatcode: VatcodeQLType
  vatcodeId: Int
  vatrate: Decimal!
}

type SalesOrderHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetRollHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollHeaderSearchTyp Filter
    filter: AssetRollHeaderSearch
  ): [AssetRollHeaderQLType]

  # ***Excludes IsDeleted***
  assetRollHeadersCount: Int
  buildRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderSearchTyp Filter
    filter: BuildRequestHeaderSearch
  ): [BuildRequestHeaderQLType]

  # ***Excludes IsDeleted***
  buildRequestHeadersCount: Int
  contact: ContactQLType
  contactId: Int
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int!
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  customerPaymentTerm: CustomerPaymentTermQLType
  customerPaymentTermId: Int!
  customerPo: String
  customerPurchaseOrderRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderSearch
  ): [CustomerPurchaseOrderRequestHeaderQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeadersCount: Int
  customerRef: String
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  dateRequired: DateTime
  deliveryCharge: Decimal!
  dispatchNoteTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteTransactionSearchTyp Filter
    filter: DispatchNoteTransactionSearch
  ): [DispatchNoteTransactionQLType]

  # ***Excludes IsDeleted***
  dispatchNoteTransactionsCount: Int
  etadate: DateTime
  exchangeRate: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  incidentals(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # IncidentalSearchTyp Filter
    filter: IncidentalSearch
  ): [IncidentalQLType]

  # ***Excludes IsDeleted***
  incidentalsCount: Int
  incoTerm: IncoTermQLType
  incoTermId: Int
  isAuthorised: Boolean!
  isDeleted: Boolean!
  isEditable: Boolean
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  purchaseOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitsCount: Int
  quoteHeader: QuoteHeaderQLType
  quoteHeaderId: Long
  reference: String
  requestedAddress: AddressQLType
  requestedAddressId: Int
  salesOrderHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderFeatureMappingSearchTyp Filter
    filter: SalesOrderHeaderFeatureMappingSearch
  ): [SalesOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderFeatureMappingsCount: Int
  salesOrderHeaderResponseEmailMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderResponseEmailMappingSearchTyp Filter
    filter: SalesOrderHeaderResponseEmailMappingSearch
  ): [SalesOrderHeaderResponseEmailMappingQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderResponseEmailMappingsCount: Int
  salesOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemsCount: Int
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal
  totalCourierCost: Decimal!
  totalInvoiced: Decimal!
  totalMargin: Decimal
  totalMarkup: Decimal
  totalNetCost: Decimal
  totalPrice: Decimal!
  totalProfit: Decimal
  totalSaleCost: Decimal!
  totalShippingCost: Decimal!
  totalUnInvoiced: Decimal!
  totalVat: Decimal!
}

type CustomerPaymentTermQLType {
  created: DateTime!
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  id: Int!
  isDeleted: Boolean!
  name: String
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
}

type IncoTermQLType {
  code: String
  created: DateTime!
  description: String
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  id: Int!
  isDeleted: Boolean!
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  sortOrder: Int
}

type QuoteHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  closeByDate: DateTime
  contact: ContactQLType
  contactId: Int
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int!
  dateRequired: DateTime
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  isAuthorised: Boolean!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  printComments: String
  proFormaInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderSearchTyp Filter
    filter: ProFormaInvoiceHeaderSearch
  ): [ProFormaInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeadersCount: Int
  quoteHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderFeatureMappingSearchTyp Filter
    filter: QuoteHeaderFeatureMappingSearch
  ): [QuoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  quoteHeaderFeatureMappingsCount: Int
  quoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemsCount: Int
  quoteValidationTerm: QuoteValidationTermQLType
  quoteValidationTermId: Int!
  reference: String
  salesOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderSearchTyp Filter
    filter: SalesOrderHeaderSearch
  ): [SalesOrderHeaderQLType]

  # ***Excludes IsDeleted***
  salesOrderHeadersCount: Int
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalMargin: Decimal
  totalMarkup: Decimal
  totalPrice: Decimal!
  totalProfit: Decimal
  totalVat: Decimal!
}

type QuoteValidationTermQLType {
  created: DateTime!
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  id: Int!
  isDeleted: Boolean!
  name: String
  quoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderSearchTyp Filter
    filter: QuoteHeaderSearch
  ): [QuoteHeaderQLType]

  # ***Excludes IsDeleted***
  quoteHeadersCount: Int
}

type ProFormaInvoiceHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  contact: ContactQLType
  contactId: Int
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int!
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  printComments: String
  proFormaInvoiceHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderFeatureMappingSearchTyp Filter
    filter: ProFormaInvoiceHeaderFeatureMappingSearch
  ): [ProFormaInvoiceHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderFeatureMappingsCount: Int
  proFormaInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceItemsCount: Int
  quoteHeader: QuoteHeaderQLType
  quoteHeaderId: Long
  reference: String
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalMargin: Decimal
  totalPrice: Decimal!
  totalProfit: Decimal
  totalVat: Decimal!
}

type ProFormaInvoiceHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  proFormaInvoiceHeader: ProFormaInvoiceHeaderQLType
  proFormaInvoiceHeaderId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type FeatureQLType {
  addressFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressFeatureMappingSearchTyp Filter
    filter: AddressFeatureMappingSearch
  ): [AddressFeatureMappingQLType]

  # ***Excludes IsDeleted***
  addressFeatureMappingsCount: Int
  alias: String
  application: ApplicationQLType
  applicationId: Int!
  buildRequestHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestHeaderFeatureMappingSearchTyp Filter
    filter: BuildRequestHeaderFeatureMappingSearch
  ): [BuildRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  buildRequestHeaderFeatureMappingsCount: Int
  contactFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ContactFeatureMappingSearchTyp Filter
    filter: ContactFeatureMappingSearch
  ): [ContactFeatureMappingQLType]

  # ***Excludes IsDeleted***
  contactFeatureMappingsCount: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerFeatureMappingSearchTyp Filter
    filter: CustomerFeatureMappingSearch
  ): [CustomerFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerFeatureMappingsCount: Int
  customerPurchaseOrderRequestHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderFeatureMappingSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch
  ): [CustomerPurchaseOrderRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeaderFeatureMappingsCount: Int
  customerReturnHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnHeaderFeatureMappingSearchTyp Filter
    filter: CustomerReturnHeaderFeatureMappingSearch
  ): [CustomerReturnHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerReturnHeaderFeatureMappingsCount: Int
  defaultValue: String
  description: String
  dispatchNoteHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderFeatureMappingSearchTyp Filter
    filter: DispatchNoteHeaderFeatureMappingSearch
  ): [DispatchNoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderFeatureMappingsCount: Int
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  proFormaInvoiceHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceHeaderFeatureMappingSearchTyp Filter
    filter: ProFormaInvoiceHeaderFeatureMappingSearch
  ): [ProFormaInvoiceHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceHeaderFeatureMappingsCount: Int
  purchaseOrderHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderFeatureMappingSearchTyp Filter
    filter: PurchaseOrderHeaderFeatureMappingSearch
  ): [PurchaseOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderFeatureMappingsCount: Int
  quoteHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteHeaderFeatureMappingSearchTyp Filter
    filter: QuoteHeaderFeatureMappingSearch
  ): [QuoteHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  quoteHeaderFeatureMappingsCount: Int
  salesOrderHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderHeaderFeatureMappingSearchTyp Filter
    filter: SalesOrderHeaderFeatureMappingSearch
  ): [SalesOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  salesOrderHeaderFeatureMappingsCount: Int
  stockFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockFeatureMappingSearchTyp Filter
    filter: StockFeatureMappingSearch
  ): [StockFeatureMappingQLType]

  # ***Excludes IsDeleted***
  stockFeatureMappingsCount: Int
  supplierFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierFeatureMappingSearchTyp Filter
    filter: SupplierFeatureMappingSearch
  ): [SupplierFeatureMappingQLType]

  # ***Excludes IsDeleted***
  supplierFeatureMappingsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type BuildRequestHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  buildRequestHeader: BuildRequestHeaderQLType
  buildRequestHeaderId: Long!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type ContactFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  contact: ContactQLType
  contactId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type CustomerFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customer: CustomerQLType
  customerId: Int!
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type CustomerPurchaseOrderRequestHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerPurchaseOrderRequestHeader: CustomerPurchaseOrderRequestHeaderQLType
  customerPurchaseOrderRequestHeaderId: Long!
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type CustomerPurchaseOrderRequestHeaderQLType {
  address: AddressQLType
  addressId: Int
  application: ApplicationQLType
  applicationId: Int!
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int
  customerPurchaseOrderRequestHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestHeaderFeatureMappingSearchTyp Filter
    filter: CustomerPurchaseOrderRequestHeaderFeatureMappingSearch
  ): [CustomerPurchaseOrderRequestHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestHeaderFeatureMappingsCount: Int
  customerPurchaseOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestItemSearchTyp Filter
    filter: CustomerPurchaseOrderRequestItemSearch
  ): [CustomerPurchaseOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestItemsCount: Int
  dateRequired: DateTime
  exchangeRate: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  purchaseOrderReference: String
  purchaseOrderRequestType: String
  reference: String
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  salesOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestItemSearchTyp Filter
    filter: SalesOrderRequestItemSearch
  ): [SalesOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestItemsCount: Int
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type CustomerPurchaseOrderRequestItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerPurchaseOrderRequestHeader: CustomerPurchaseOrderRequestHeaderQLType
  customerPurchaseOrderRequestHeaderId: Long
  description: String
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  manufacturerName: String
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  price: Decimal!
  qtyRequested: Int!
  stock: StockQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  type: String
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vat: Decimal
  vatcode: VatcodeQLType
  vatcodeId: Int
  vatrate: Decimal!
}

type StockQLType {
  application: ApplicationQLType
  applicationId: Int!
  avgUnitCost: Decimal!
  avgUnitPrice: Decimal!
  buildRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemSearchTyp Filter
    filter: BuildRequestItemSearch
  ): [BuildRequestItemQLType]

  # ***Excludes IsDeleted***
  buildRequestItemsCount: Int
  category: CategoryQLType
  categoryId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerCreditNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemSearchTyp Filter
    filter: CustomerCreditNoteItemSearch
  ): [CustomerCreditNoteItemQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemsCount: Int
  customerInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemSearchTyp Filter
    filter: CustomerInvoiceItemSearch
  ): [CustomerInvoiceItemQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemsCount: Int
  customerPurchaseOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestItemSearchTyp Filter
    filter: CustomerPurchaseOrderRequestItemSearch
  ): [CustomerPurchaseOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestItemsCount: Int
  customerReturnItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemsCount: Int
  customerStockLevels(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerStockLevelSearchTyp Filter
    filter: CustomerStockLevelSearch
  ): [CustomerStockLevelQLType]

  # ***Excludes IsDeleted***
  customerStockLevelsCount: Int
  dispatchNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemSearchTyp Filter
    filter: DispatchNoteItemSearch
  ): [DispatchNoteItemQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemsCount: Int
  goodsReceivedNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemSearchTyp Filter
    filter: GoodsReceivedNoteItemSearch
  ): [GoodsReceivedNoteItemQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  isEditable: Boolean
  lastUnitCost: Decimal!
  mainImageUrl: String
  manufacturer: ManufacturerQLType
  manufacturerId: Int!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemSearchTyp Filter
    filter: NonOrderedGoodsItemSearch
  ): [NonOrderedGoodsItemQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemsCount: Int
  partNo: String
  productDescription: String
  proFormaInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceItemsCount: Int
  purchaseOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemSearchTyp Filter
    filter: PurchaseOrderItemSearch
  ): [PurchaseOrderItemQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemsCount: Int
  quoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemsCount: Int
  salesOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemsCount: Int
  salesOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestItemSearchTyp Filter
    filter: SalesOrderRequestItemSearch
  ): [SalesOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestItemsCount: Int
  sourceUrl: String
  stockFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockFeatureMappingSearchTyp Filter
    filter: StockFeatureMappingSearch
  ): [StockFeatureMappingQLType]

  # ***Excludes IsDeleted***
  stockFeatureMappingsCount: Int
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  stockTakeDiscrepancies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepanciesCount: Int
  stockTakeItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemsCount: Int
  stockTallies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTallySearchTyp Filter
    filter: StockTallySearch
  ): [StockTallyQLType]

  # ***Excludes IsDeleted***
  stockTalliesCount: Int
  stockThresholds(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockThresholdSearchTyp Filter
    filter: StockThresholdSearch
  ): [StockThresholdQLType]

  # ***Excludes IsDeleted***
  stockThresholdsCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  thumbImageUrl: String
}

type CategoryQLType {
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  id: Int!
  inverseParentCategory(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CategorySearchTyp Filter
    filter: CategorySearch
  ): [CategoryQLType]

  # ***Excludes IsDeleted***
  inverseParentCategoryCount: Int
  isAuthorised: Boolean!
  isDeleted: Boolean!
  isVirtual: Boolean!
  name: String
  parentCategory: CategoryQLType
  parentCategoryId: Int
  sortOrder: Int
  stocks(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockSearchTyp Filter
    filter: StockSearch
  ): [StockQLType]

  # ***Excludes IsDeleted***
  stocksCount: Int
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  unspsc: String
}

type ManufacturerQLType {
  created: DateTime!
  goodsReceivedNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemSearchTyp Filter
    filter: GoodsReceivedNoteItemSearch
  ): [GoodsReceivedNoteItemQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemsCount: Int
  id: Int!
  inverseParentManufacturer(
    sortOrder: [SortOrderType]
    top: Int

    # ManufacturerSearchTyp Filter
    filter: ManufacturerSearch
  ): [ManufacturerQLType]

  #
  inverseParentManufacturerCount: Int
  isAuthorised: Boolean!
  isVisible: Boolean
  name: String
  parentManufacturer: ManufacturerQLType
  parentManufacturerId: Int
  stocks(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockSearchTyp Filter
    filter: StockSearch
  ): [StockQLType]

  # ***Excludes IsDeleted***
  stocksCount: Int
}

type GoodsReceivedNoteItemQLType {
  allowBulkBookIn: Boolean!
  application: ApplicationQLType
  applicationId: Int!
  avgCost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  goodsReceivedNoteHeader: GoodsReceivedNoteHeaderQLType
  goodsReceivedNoteHeaderId: Long!
  goodsReceivedNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitSearch
  ): [GoodsReceivedNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  isEditable: Boolean
  manufacturer: ManufacturerQLType
  manufacturerId: Int
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  qtyBooked: Int!
  qtyOutstanding: Int
  qtyRequested: Int!
  stock: StockQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
}

type GoodsReceivedNoteItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetTag: String
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerCreditNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemUnitSearchTyp Filter
    filter: CustomerCreditNoteItemUnitSearch
  ): [CustomerCreditNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemUnitsCount: Int
  goodsReceivedNoteItem: GoodsReceivedNoteItemQLType
  goodsReceivedNoteItemId: Long!
  goodsReceivedNoteItemUnitTransaction: GoodsReceivedNoteItemUnitTransactionQLType
  goodsReceivedNoteItemUnitTransactionId: Long!
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemUnitSearchTyp Filter
    filter: NonOrderedGoodsItemUnitSearch
  ): [NonOrderedGoodsItemUnitQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemUnitsCount: Int
  price: Decimal!
  purchaseOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitsCount: Int
  serialNo: String
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type GoodsReceivedNoteItemUnitTransactionQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnItemUnit: CustomerReturnItemUnitQLType
  customerReturnItemUnitId: Long
  goodsReceivedNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitSearch
  ): [GoodsReceivedNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitsCount: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItemUnit: NonOrderedGoodsItemUnitQLType
  nonOrderedGoodsItemUnitId: Long
  purchaseOrderItemUnit: PurchaseOrderItemUnitQLType
  purchaseOrderItemUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type CustomerReturnItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  credit: Boolean!
  customerReturnItem: CustomerReturnItemQLType
  customerReturnItemId: Long!
  goodsReceivedNoteItemUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitTransactionSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitTransactionSearch
  ): [GoodsReceivedNoteItemUnitTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitTransactionsCount: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  reference: String
  rejectItem: Boolean!
  replaceItem: Boolean!
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  unitCost: Decimal!
  unitPrice: Decimal!
}

type CustomerReturnItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnHeader: CustomerReturnHeaderQLType
  customerReturnHeaderId: Long!
  customerReturnItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemUnitSearchTyp Filter
    filter: CustomerReturnItemUnitSearch
  ): [CustomerReturnItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnItemUnitsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  returnedQty: Int
  sortOrder: Int!
  stock: StockQLType
  stockId: Long
  stormStatus: StormStatusQLType
  stormStatusId: Int
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vatcode: VatcodeQLType
  vatcodeId: Int
}

type CustomerReturnHeaderQLType {
  action: String
  application: ApplicationQLType
  applicationId: Int!
  assignedTo: UserProfileQLType
  assignedToId: Int
  collectionAddressId: Int
  contact: ContactQLType
  contactId: Int
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int!
  customerReturnHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnHeaderFeatureMappingSearchTyp Filter
    filter: CustomerReturnHeaderFeatureMappingSearch
  ): [CustomerReturnHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  customerReturnHeaderFeatureMappingsCount: Int
  customerReturnItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemsCount: Int
  customerReturnRequest: CustomerReturnRequestHeaderQLType
  customerReturnRequestId: Int
  customerReturnRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemSearchTyp Filter
    filter: CustomerReturnRequestItemSearch
  ): [CustomerReturnRequestItemQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemsCount: Int
  exchangeRate: Decimal!
  goodsReceivedNoteTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteTransactionSearchTyp Filter
    filter: GoodsReceivedNoteTransactionSearch
  ): [GoodsReceivedNoteTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteTransactionsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  reason: String
  reference: String
  requestedCollectionAddress: AddressQLType
  requestedCollectionAddressId: Int
  requestType: StormStatusQLType
  requestTypeId: Int
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal
  totalPrice: Decimal
  totalVat: Decimal
}

type CustomerReturnRequestHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customer: CustomerQLType
  customerId: Int!
  customerReturnHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # CustomerReturnHeaderSearchTyp Filter
    filter: CustomerReturnHeaderSearch
  ): [CustomerReturnHeaderQLType]

  #
  customerReturnHeadersCount: Int
  guid: ID!
  id: Int!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  reason: String
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type CustomerReturnHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnHeader: CustomerReturnHeaderQLType
  customerReturnHeaderId: Long!
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type CustomerReturnRequestItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnRequestHeader: CustomerReturnHeaderQLType
  customerReturnRequestHeaderId: Long
  customerReturnRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemUnitSearchTyp Filter
    filter: CustomerReturnRequestItemUnitSearch
  ): [CustomerReturnRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemUnitsCount: Int
  guid: ID!
  id: Int!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  returnRequestQty: Int!
  sortOrder: Int
  stock: StockUnitQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
}

type StockUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  buildRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitsCount: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customer: CustomerQLType
  customerCreditNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemUnitSearchTyp Filter
    filter: CustomerCreditNoteItemUnitSearch
  ): [CustomerCreditNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemUnitsCount: Int
  customerId: Int
  customerInvoiceItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemUnitSearchTyp Filter
    filter: CustomerInvoiceItemUnitSearch
  ): [CustomerInvoiceItemUnitQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemUnitsCount: Int
  customerReturnItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemUnitSearchTyp Filter
    filter: CustomerReturnItemUnitSearch
  ): [CustomerReturnItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnItemUnitsCount: Int
  customerReturnRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemSearchTyp Filter
    filter: CustomerReturnRequestItemSearch
  ): [CustomerReturnRequestItemQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemsCount: Int
  customerReturnRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemUnitSearchTyp Filter
    filter: CustomerReturnRequestItemUnitSearch
  ): [CustomerReturnRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemUnitsCount: Int
  dispatchNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemUnitSearchTyp Filter
    filter: DispatchNoteItemUnitSearch
  ): [DispatchNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemUnitsCount: Int
  goodsReceivedNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitSearch
  ): [GoodsReceivedNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemUnitSearchTyp Filter
    filter: NonOrderedGoodsItemUnitSearch
  ): [NonOrderedGoodsItemUnitQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemUnitsCount: Int
  purchaseOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitsCount: Int
  qty: Int!
  salesOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemUnitSearchTyp Filter
    filter: SalesOrderItemUnitSearch
  ): [SalesOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  salesOrderItemUnitsCount: Int
  stock: StockQLType
  stockId: Long!
  stockLocation: StockLocationQLType
  stockLocationId: Int
  stockMovementRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestItemSearchTyp Filter
    filter: StockMovementRequestItemSearch
  ): [StockMovementRequestItemQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestItemsCount: Int
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  stockTakeDiscrepancies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepanciesCount: Int
  stockTakeItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemsCount: Int
  stockType: StockTypeQLType
  stockTypeId: Int!
  stockUnitAsset: StockUnitAssetQLType
  stockUnitAssetId: Long
  stockUnitAttributes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAttributeSearchTyp Filter
    filter: StockUnitAttributeSearch
  ): [StockUnitAttributeQLType]

  # ***Excludes IsDeleted***
  stockUnitAttributesCount: Int
  stockUnitGroup: StockUnitGroupQLType
  stockUnitGroupId: Long!
  stockUnitStatus: StockUnitStatusQLType
  stockUnitStatusId: Int
  stockUnitTransaction: StockUnitTransactionQLType
  stockUnitTransactionId: Long!
  supplier: SupplierQLType
  supplierId: Int
  systemModified: DateTime!
  systemModifiedBy: String
  unitCost: Decimal!
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  unitPrice: Decimal!
  warranties(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # WarrantySearchTyp Filter
    filter: WarrantySearch
  ): [WarrantyQLType]

  # ***Excludes IsDeleted***
  warrantiesCount: Int
}

type StockLocationQLType {
  application: ApplicationQLType
  applicationId: Int!
  area: AreaQLType
  areaId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Int!
  inverseParentStockLocation(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockLocationSearchTyp Filter
    filter: StockLocationSearch
  ): [StockLocationQLType]

  # ***Excludes IsDeleted***
  inverseParentStockLocationCount: Int
  isDeleted: Boolean!
  locationName: String
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  parentStockLocation: StockLocationQLType
  parentStockLocationId: Int
  stockMovementRequestHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestHeaderSearchTyp Filter
    filter: StockMovementRequestHeaderSearch
  ): [StockMovementRequestHeaderQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestHeadersCount: Int
  stockMovementRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestItemSearchTyp Filter
    filter: StockMovementRequestItemSearch
  ): [StockMovementRequestItemQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestItemsCount: Int
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  stockTakeDiscrepancies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepanciesCount: Int
  stockTakeHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeHeaderSearchTyp Filter
    filter: StockTakeHeaderSearch
  ): [StockTakeHeaderQLType]

  # ***Excludes IsDeleted***
  stockTakeHeadersCount: Int
  stockTakeItemFromStockLocations(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemFromStockLocationsCount: Int
  stockTakeItemToStockLocations(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemToStockLocationsCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockMovementRequestHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  correlationMappingId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  requestedBy: UserProfileQLType
  requestedById: Int
  requestedFor: UserProfileQLType
  requestedForId: Int
  stockMovementRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementRequestItemSearchTyp Filter
    filter: StockMovementRequestItemSearch
  ): [StockMovementRequestItemQLType]

  # ***Excludes IsDeleted***
  stockMovementRequestItemsCount: Int
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  toStockLocation: StockLocationQLType
  toStockLocationId: Int!
}

type StockMovementRequestItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  completed: Boolean!
  completedBy: UserProfileQLType
  completedById: Int
  completedDate: DateTime
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  fromStockLocation: StockLocationQLType
  fromStockLocationId: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  stockMovementRequestHeader: StockMovementRequestHeaderQLType
  stockMovementRequestHeaderId: Long!
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long!
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockMovementTransactionQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnItemUnit: CustomerReturnItemUnitQLType
  customerReturnItemUnitId: Long
  dispatchNoteItemUnit: DispatchNoteItemUnitQLType
  dispatchNoteItemUnitId: Long
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitQLType
  goodsReceivedNoteItemUnitId: Long
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItemUnit: NonOrderedGoodsItemQLType
  nonOrderedGoodsItemUnitId: Long
  purchaseOrderItemUnit: PurchaseOrderItemUnitQLType
  purchaseOrderItemUnitId: Long
  salesOrderItemUnit: SalesOrderItemUnitQLType
  salesOrderItemUnitId: Long
  stockMovementRequestItem: StockMovementRequestItemQLType
  stockMovementRequestItemId: Long
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type DispatchNoteItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetTag: String
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerInvoiceItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemUnitSearchTyp Filter
    filter: CustomerInvoiceItemUnitSearch
  ): [CustomerInvoiceItemUnitQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemUnitsCount: Int
  dispatchNoteItem: DispatchNoteItemQLType
  dispatchNoteItemId: Long!
  guid: ID!
  id: Long!
  isChecked: Boolean!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  price: Decimal!
  salesOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemUnitSearchTyp Filter
    filter: SalesOrderItemUnitSearch
  ): [SalesOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  salesOrderItemUnitsCount: Int
  serialNo: String
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  vat: Decimal!
}

type DispatchNoteItemQLType {
  allowBulkBookOut: Boolean!
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  dispatchNoteHeader: DispatchNoteHeaderQLType
  dispatchNoteHeaderId: Long!
  dispatchNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemUnitSearchTyp Filter
    filter: DispatchNoteItemUnitSearch
  ): [DispatchNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemUnitsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  qtyDispatched: Int
  qtyOrdered: Int!
  qtyOutstanding: Int
  qtyRequested: Int!
  sortOrder: Int!
  stock: StockQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vatcode: VatcodeQLType
  vatcodeId: Int
}

type UnitOfMeasurementQLType {
  code: String
  created: DateTime!
  customerPurchaseOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestItemSearchTyp Filter
    filter: CustomerPurchaseOrderRequestItemSearch
  ): [CustomerPurchaseOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestItemsCount: Int
  customerReturnItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemsCount: Int
  customerReturnRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnRequestItemSearchTyp Filter
    filter: CustomerReturnRequestItemSearch
  ): [CustomerReturnRequestItemQLType]

  # ***Excludes IsDeleted***
  customerReturnRequestItemsCount: Int
  description: String
  dispatchNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemSearchTyp Filter
    filter: DispatchNoteItemSearch
  ): [DispatchNoteItemQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemsCount: Int
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  nonOrderedGoodsItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemSearchTyp Filter
    filter: NonOrderedGoodsItemSearch
  ): [NonOrderedGoodsItemQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemsCount: Int
  proFormaInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceItemsCount: Int
  purchaseOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemSearchTyp Filter
    filter: PurchaseOrderItemSearch
  ): [PurchaseOrderItemQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemsCount: Int
  quoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemsCount: Int
  salesOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemsCount: Int
  salesOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestItemSearchTyp Filter
    filter: SalesOrderRequestItemSearch
  ): [SalesOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestItemsCount: Int
  stockTakeItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemsCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
}

type NonOrderedGoodsItemQLType {
  allowBulkBookIn: Boolean!
  application: ApplicationQLType
  applicationId: Int!
  avgCost: Decimal!
  avgPrice: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  isEditable: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsHeader: NonOrderedGoodsHeaderQLType
  nonOrderedGoodsHeaderId: Long!
  nonOrderedGoodsItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemUnitSearchTyp Filter
    filter: NonOrderedGoodsItemUnitSearch
  ): [NonOrderedGoodsItemUnitQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemUnitsCount: Int
  partNo: String
  qtyCredited: Int!
  qtyOrdered: Int!
  qtyOutstanding: Int
  qtyReceived: Int!
  sortOrder: Int!
  stock: StockQLType
  stockId: Long
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  supplierInvoiceRef: String
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal
  totalUnitMarkup: Decimal
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal
  totalUnitVat: Decimal!
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vatcode: VatcodeQLType
  vatcodeId: Int
  vatrate: Decimal!
}

type NonOrderedGoodsHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  area: AreaQLType
  areaId: Int
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerId: Int!
  goodsReceivedNoteTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteTransactionSearchTyp Filter
    filter: GoodsReceivedNoteTransactionSearch
  ): [GoodsReceivedNoteTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteTransactionsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemSearchTyp Filter
    filter: NonOrderedGoodsItemSearch
  ): [NonOrderedGoodsItemQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemsCount: Int
  origin: NonOrderedGoodsOriginQLType
  originId: Long
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  supplierId: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type NonOrderedGoodsOriginQLType {
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsHeaderSearchTyp Filter
    filter: NonOrderedGoodsHeaderSearch
  ): [NonOrderedGoodsHeaderQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsHeadersCount: Int
  purchaseOrderHeader: PurchaseOrderHeaderQLType
  purchaseOrderHeaderId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type PurchaseOrderHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  approved: Boolean
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int
  dateRequired: DateTime
  dispatchAddress: AddressQLType
  dispatchAddressId: Int
  exchangeRate: Decimal!
  goodsReceivedNoteTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteTransactionSearchTyp Filter
    filter: GoodsReceivedNoteTransactionSearch
  ): [GoodsReceivedNoteTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteTransactionsCount: Int
  guid: ID!
  id: Long!
  idRef: String
  isAuthorised: Boolean!
  isDeleted: Boolean!
  isDirectDelivery: Boolean!
  isDisputed: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsOrigins(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsOriginSearchTyp Filter
    filter: NonOrderedGoodsOriginSearch
  ): [NonOrderedGoodsOriginQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsOriginsCount: Int
  purchaseOrderHeaderCarriageChargeMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderCarriageChargeMappingSearchTyp Filter
    filter: PurchaseOrderHeaderCarriageChargeMappingSearch
  ): [PurchaseOrderHeaderCarriageChargeMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderCarriageChargeMappingsCount: Int
  purchaseOrderHeaderFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderFeatureMappingSearchTyp Filter
    filter: PurchaseOrderHeaderFeatureMappingSearch
  ): [PurchaseOrderHeaderFeatureMappingQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeaderFeatureMappingsCount: Int
  purchaseOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemSearchTyp Filter
    filter: PurchaseOrderItemSearch
  ): [PurchaseOrderItemQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemsCount: Int
  reference: String
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  salesPerson: UserProfileQLType
  salesPersonId: Int
  sameDayDispatch: Boolean
  stormDeliveryCharge: Decimal!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  supplier: SupplierQLType
  supplierDeliveryCharge: Decimal!
  supplierId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalMargin: Decimal
  totalMarkup: Decimal
  totalPrice: Decimal!
  totalProfit: Decimal
  totalVat: Decimal!
}

type SupplierQLType {
  accountRef: String
  application: ApplicationQLType
  applicationId: Int!
  contactName: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  defaultCurrency: CurrencyQLType
  defaultCurrencyId: Int!
  gdprcompliant: Boolean
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  guid: ID!
  id: Int!
  idRef: String
  inverseParentSupplier(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  inverseParentSupplierCount: Int
  isAuthorised: Boolean!
  isBroker: Boolean!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  name: String
  parentSupplier: SupplierQLType
  parentSupplierId: Int
  paymentMethod: PaymentMethodQLType
  paymentMethodId: Int
  paymentTerm: PaymentTermQLType
  paymentTermId: Int
  primaryAddress: AddressQLType
  primaryAddressId: Int
  primaryContact: ContactQLType
  primaryContactId: Int
  purchaseLedgerController: UserProfileQLType
  purchaseLedgerControllerId: Int
  purchaseOrderHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderHeaderSearchTyp Filter
    filter: PurchaseOrderHeaderSearch
  ): [PurchaseOrderHeaderQLType]

  # ***Excludes IsDeleted***
  purchaseOrderHeadersCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  stormDeliveryCharge: StormDeliveryChargeQLType
  stormDeliveryChargeId: Int
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  supplierContactMappings(
    sortOrder: [SortOrderType]
    top: Int

    # SupplierContactMappingSearchTyp Filter
    filter: SupplierContactMappingSearch
  ): [SupplierContactMappingQLType]

  #
  supplierContactMappingsCount: Int
  supplierDeliveryCharge: SupplierDeliveryChargeQLType
  supplierDeliveryChargeId: Int
  supplierFeatureMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierFeatureMappingSearchTyp Filter
    filter: SupplierFeatureMappingSearch
  ): [SupplierFeatureMappingQLType]

  # ***Excludes IsDeleted***
  supplierFeatureMappingsCount: Int
  supplierProviderMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierProviderMappingSearchTyp Filter
    filter: SupplierProviderMappingSearch
  ): [SupplierProviderMappingQLType]

  # ***Excludes IsDeleted***
  supplierProviderMappingsCount: Int
  supplierReference: String
  supplierStockAndCosts(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierStockAndCostSearchTyp Filter
    filter: SupplierStockAndCostSearch
  ): [SupplierStockAndCostQLType]

  # ***Excludes IsDeleted***
  supplierStockAndCostsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  vatcode: VatcodeQLType
  vatcodeId: Int
  website: String
}

type PaymentMethodQLType {
  created: DateTime!
  description: String
  id: Int!
  isDeleted: Boolean!
  name: String
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
}

type PaymentTermQLType {
  created: DateTime!
  customerInvoiceHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceHeaderSearchTyp Filter
    filter: CustomerInvoiceHeaderSearch
  ): [CustomerInvoiceHeaderQLType]

  # ***Excludes IsDeleted***
  customerInvoiceHeadersCount: Int
  id: Int!
  isDeleted: Boolean!
  name: String
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
}

type StormDeliveryChargeQLType {
  chargeRate: Decimal!
  created: DateTime!
  description: String
  id: Int!
  isDefault: Boolean!
  isDeleted: Boolean!
  minimumSpend: Decimal!
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
}

type SupplierDeliveryChargeQLType {
  chargeRate: Decimal!
  created: DateTime!
  description: String
  id: Int!
  isDefault: Boolean!
  isDeleted: Boolean!
  minimumSpend: Decimal!
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
}

type VatcodeQLType {
  addresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressSearchTyp Filter
    filter: AddressSearch
  ): [AddressQLType]

  # ***Excludes IsDeleted***
  addressesCount: Int
  code: String
  created: DateTime!
  customerCreditNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemSearchTyp Filter
    filter: CustomerCreditNoteItemSearch
  ): [CustomerCreditNoteItemQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemsCount: Int
  customerInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemSearchTyp Filter
    filter: CustomerInvoiceItemSearch
  ): [CustomerInvoiceItemQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemsCount: Int
  customerPurchaseOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerPurchaseOrderRequestItemSearchTyp Filter
    filter: CustomerPurchaseOrderRequestItemSearch
  ): [CustomerPurchaseOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  customerPurchaseOrderRequestItemsCount: Int
  customerReturnItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerReturnItemSearchTyp Filter
    filter: CustomerReturnItemSearch
  ): [CustomerReturnItemQLType]

  # ***Excludes IsDeleted***
  customerReturnItemsCount: Int
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  description: String
  dispatchNoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteItemSearchTyp Filter
    filter: DispatchNoteItemSearch
  ): [DispatchNoteItemQLType]

  # ***Excludes IsDeleted***
  dispatchNoteItemsCount: Int
  id: Int!
  isActive: Boolean
  isCustomerCode: Boolean
  isSupplierCode: Boolean
  nonOrderedGoodsItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # NonOrderedGoodsItemSearchTyp Filter
    filter: NonOrderedGoodsItemSearch
  ): [NonOrderedGoodsItemQLType]

  # ***Excludes IsDeleted***
  nonOrderedGoodsItemsCount: Int
  proFormaInvoiceItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  proFormaInvoiceItemsCount: Int
  purchaseOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemSearchTyp Filter
    filter: PurchaseOrderItemSearch
  ): [PurchaseOrderItemQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemsCount: Int
  quoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemsCount: Int
  rate: Decimal!
  salesOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemsCount: Int
  salesOrderRequestItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderRequestItemSearchTyp Filter
    filter: SalesOrderRequestItemSearch
  ): [SalesOrderRequestItemQLType]

  # ***Excludes IsDeleted***
  salesOrderRequestItemsCount: Int
  suppliers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SupplierSearchTyp Filter
    filter: SupplierSearch
  ): [SupplierQLType]

  # ***Excludes IsDeleted***
  suppliersCount: Int
}

type CustomerCreditNoteItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerCreditNoteHeader: CustomerCreditNoteHeaderQLType
  customerCreditNoteHeaderId: Long!
  customerCreditNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemUnitSearchTyp Filter
    filter: CustomerCreditNoteItemUnitSearch
  ): [CustomerCreditNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemUnitsCount: Int
  description: String
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  qtyCredited: Int!
  qtyOrdered: Int!
  sortOrder: Int!
  stock: StockQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
  vatcode: VatcodeQLType
  vatcodeId: Int
}

type CustomerCreditNoteItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerCreditNoteItem: CustomerCreditNoteItemQLType
  customerCreditNoteItemId: Long!
  customerInvoiceItemUnit: CustomerInvoiceItemUnitQLType
  customerInvoiceItemUnitId: Long!
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitQLType
  goodsReceivedNoteItemUnitId: Long
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  price: Decimal!
  stockUnit: StockUnitQLType
  stockUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  vat: Decimal!
}

type CustomerInvoiceItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerCreditNoteItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerCreditNoteItemUnitSearchTyp Filter
    filter: CustomerCreditNoteItemUnitSearch
  ): [CustomerCreditNoteItemUnitQLType]

  # ***Excludes IsDeleted***
  customerCreditNoteItemUnitsCount: Int
  customerInvoiceItem: CustomerInvoiceHeaderQLType
  customerInvoiceItemId: Long!
  dispatchNoteItemUnit: DispatchNoteItemUnitQLType
  dispatchNoteItemUnitId: Long!
  guid: ID!
  id: Long!
  isChecked: Boolean!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  price: Decimal!
  salesOrderItemUnit: SalesOrderItemUnitQLType
  salesOrderItemUnitId: Long!
  stockUnit: StockUnitQLType
  stockUnitId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
  vat: Decimal!
}

type SalesOrderItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetRollItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AssetRollItemSearchTyp Filter
    filter: AssetRollItemSearch
  ): [AssetRollItemQLType]

  # ***Excludes IsDeleted***
  assetRollItemsCount: Int
  buildRequestItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # BuildRequestItemUnitSearchTyp Filter
    filter: BuildRequestItemUnitSearch
  ): [BuildRequestItemUnitQLType]

  # ***Excludes IsDeleted***
  buildRequestItemUnitsCount: Int
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerInvoiceItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerInvoiceItemUnitSearchTyp Filter
    filter: CustomerInvoiceItemUnitSearch
  ): [CustomerInvoiceItemUnitQLType]

  # ***Excludes IsDeleted***
  customerInvoiceItemUnitsCount: Int
  customerRef: String
  dispatchNoteItemUnit: DispatchNoteItemUnitQLType
  dispatchNoteItemUnitId: Long
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  margin: Decimal
  markup: Decimal
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  price: Decimal!
  profit: Decimal
  purchaseOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitsCount: Int
  salesOrderItem: SalesOrderItemQLType
  salesOrderItemId: Long!
  sortOrder: Int
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type PurchaseOrderItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitQLType
  goodsReceivedNoteItemUnitId: Long
  goodsReceivedNoteItemUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitTransactionSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitTransactionSearch
  ): [GoodsReceivedNoteItemUnitTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitTransactionsCount: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  margin: Decimal
  markup: Decimal
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  price: Decimal!
  profit: Decimal
  purchaseOrderItem: PurchaseOrderItemQLType
  purchaseOrderItemId: Long!
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  salesOrderItemUnit: SalesOrderItemUnitQLType
  salesOrderItemUnitId: Long
  stockMovementTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTransactionSearchTyp Filter
    filter: StockMovementTransactionSearch
  ): [StockMovementTransactionQLType]

  # ***Excludes IsDeleted***
  stockMovementTransactionsCount: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long
  stockUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitTransactionSearchTyp Filter
    filter: StockUnitTransactionSearch
  ): [StockUnitTransactionQLType]

  # ***Excludes IsDeleted***
  stockUnitTransactionsCount: Int
  supplierInvoiceRef: String
  systemModified: DateTime!
  systemModifiedBy: String
}

type PurchaseOrderItemQLType {
  allowBulkBookIn: Boolean!
  application: ApplicationQLType
  applicationId: Int!
  avgCost: Decimal!
  avgPrice: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  isEditable: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  purchaseOrderHeader: PurchaseOrderHeaderQLType
  purchaseOrderHeaderId: Long!
  purchaseOrderItemUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # PurchaseOrderItemUnitSearchTyp Filter
    filter: PurchaseOrderItemUnitSearch
  ): [PurchaseOrderItemUnitQLType]

  # ***Excludes IsDeleted***
  purchaseOrderItemUnitsCount: Int
  qtyInvoiced: Int!
  qtyOrdered: Int!
  qtyOutstanding: Int
  qtyReceived: Int!
  sortOrder: Int!
  stock: StockQLType
  stockId: Long
  supplierInvoiceRef: String
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal
  totalUnitMarkup: Decimal
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal
  totalUnitVat: Decimal!
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vatcode: VatcodeQLType
  vatcodeId: Int
  vatrate: Decimal!
}

type StockUnitTransactionQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnItemUnit: CustomerReturnItemUnitQLType
  customerReturnItemUnitId: Long
  dispatchNoteItemUnit: DispatchNoteItemUnitQLType
  dispatchNoteItemUnitId: Long
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitQLType
  goodsReceivedNoteItemUnitId: Long
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItemUnit: NonOrderedGoodsItemQLType
  nonOrderedGoodsItemUnitId: Long
  purchaseOrderItemUnit: PurchaseOrderItemUnitQLType
  purchaseOrderItemUnitId: Long
  salesOrderItemUnit: SalesOrderItemUnitQLType
  salesOrderItemUnitId: Long
  stockMovementRequestItem: StockMovementRequestItemQLType
  stockMovementRequestItemId: Long
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type CustomerInvoiceItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerInvoiceHeader: CustomerInvoiceHeaderQLType
  customerInvoiceHeaderId: Long!
  description: String
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  qtyInvoiced: Int!
  qtyOrdered: Int!
  sortOrder: Int!
  stock: StockQLType
  stockId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
  vatcode: VatcodeQLType
  vatcodeId: Int
}

type ProFormaInvoiceItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  guid: ID!
  id: Long!
  idRef: String
  inverseParentBundle(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # ProFormaInvoiceItemSearchTyp Filter
    filter: ProFormaInvoiceItemSearch
  ): [ProFormaInvoiceItemQLType]

  # ***Excludes IsDeleted***
  inverseParentBundleCount: Int
  isCustomerVisible: Boolean
  isDeleted: Boolean!
  margin: Decimal
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  parentBundle: ProFormaInvoiceItemQLType
  parentBundleId: Long
  partNo: String
  price: Decimal!
  profit: Decimal
  proFormaInvoiceHeader: ProFormaInvoiceHeaderQLType
  proFormaInvoiceHeaderId: Long!
  qty: Int!
  reference: String
  stock: StockQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal
  totalUnitMargin: Decimal
  totalUnitPrice: Decimal
  totalUnitProfit: Decimal
  totalUnitVat: Decimal
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vat: Decimal
  vatcode: VatcodeQLType
  vatcodeId: Int
  vatrate: Decimal!
}

type QuoteItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  guid: ID!
  id: Long!
  idRef: String
  inverseParentBundle(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  inverseParentBundleCount: Int
  isCustomerVisible: Boolean
  isDeleted: Boolean!
  isOptionalItem: Boolean!
  leadTime: DateTime
  margin: Decimal
  markup: Decimal
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  parentBundle: QuoteItemQLType
  parentBundleId: Long
  partNo: String
  price: Decimal!
  profit: Decimal
  qty: Int!
  quoteHeader: QuoteHeaderQLType
  quoteHeaderId: Long!
  reference: String
  sortOrder: Int!
  stock: StockQLType
  stockId: Long
  supplierStockAndCost: SupplierStockAndCostQLType
  supplierStockAndCostId: Int
  systemModified: DateTime!
  systemModifiedBy: String
  totalUnitCost: Decimal
  totalUnitPrice: Decimal
  totalUnitProfit: Decimal
  totalUnitVat: Decimal
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vat: Decimal
  vatcode: VatcodeQLType
  vatcodeId: Int
  vatrate: Decimal!
}

type SupplierStockAndCostQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  etadate: DateTime
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  liveStockSupplierId: Int
  manufacturerPartNo: String
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  quoteItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # QuoteItemSearchTyp Filter
    filter: QuoteItemSearch
  ): [QuoteItemQLType]

  # ***Excludes IsDeleted***
  quoteItemsCount: Int
  reviewedDate: DateTime
  salesOrderItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SalesOrderItemSearchTyp Filter
    filter: SalesOrderItemSearch
  ): [SalesOrderItemQLType]

  # ***Excludes IsDeleted***
  salesOrderItemsCount: Int
  stock: Int
  supplier: SupplierQLType
  supplierId: Int!
  supplierPartNo: String
  systemModified: DateTime!
  systemModifiedBy: String
}

type SalesOrderRequestItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  manufacturerName: String
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  partNo: String
  price: Decimal!
  qtyRequested: Int!
  salesOrderRequestHeader: CustomerPurchaseOrderRequestHeaderQLType
  salesOrderRequestHeaderId: Long
  stock: StockQLType
  stockId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  type: String
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
  vat: Decimal
  vatcode: VatcodeQLType
  vatcodeId: Int
  vatrate: Decimal!
}

type SupplierContactMappingQLType {
  contact: ContactQLType
  contactId: Int!
  created: DateTime!
  id: Long!
  supplier: SupplierQLType
  supplierId: Int!
}

type SupplierFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  supplier: SupplierQLType
  supplierId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type SupplierProviderMappingQLType {
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  id: Int!
  isAuthorised: Boolean!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  name: String
  supplier: SupplierQLType
  supplierId: Int!
  supplierProvider: SupplierProviderQLType
  supplierProviderId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type SupplierProviderQLType {
  created: DateTime!
  id: Int!
  isDeleted: Boolean!
  name: String
  supplierProviderMapping: SupplierProviderMappingQLType
  website: String
}

type GoodsReceivedNoteTransactionQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnRequestHeader: CustomerReturnHeaderQLType
  customerReturnRequestHeaderId: Long
  goodsReceivedNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteHeaderSearchTyp Filter
    filter: GoodsReceivedNoteHeaderSearch
  ): [GoodsReceivedNoteHeaderQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteHeadersCount: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsHeader: NonOrderedGoodsHeaderQLType
  nonOrderedGoodsHeaderId: Long
  purchaseOrderHeader: PurchaseOrderHeaderQLType
  purchaseOrderHeaderId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type PurchaseOrderHeaderCarriageChargeMappingQLType {
  carriageCharge: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  purchaseOrderHeader: PurchaseOrderHeaderQLType
  purchaseOrderHeaderId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
}

type PurchaseOrderHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  purchaseOrderHeader: PurchaseOrderHeaderQLType
  purchaseOrderHeaderId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type NonOrderedGoodsItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  cost: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  goodsReceivedNoteItemUnit: GoodsReceivedNoteItemUnitQLType
  goodsReceivedNoteItemUnitId: Long
  goodsReceivedNoteItemUnitTransactions(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # GoodsReceivedNoteItemUnitTransactionSearchTyp Filter
    filter: GoodsReceivedNoteItemUnitTransactionSearch
  ): [GoodsReceivedNoteItemUnitTransactionQLType]

  # ***Excludes IsDeleted***
  goodsReceivedNoteItemUnitTransactionsCount: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  margin: Decimal
  markup: Decimal
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  nonOrderedGoodsItem: NonOrderedGoodsItemQLType
  nonOrderedGoodsItemId: Long!
  price: Decimal!
  profit: Decimal
  stockUnit: StockUnitQLType
  stockUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockTakeItemQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetTag: String
  bookedInBy: UserProfileQLType
  bookedInById: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  fromStockLocation: StockLocationQLType
  fromStockLocationId: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  qtyAvailable: Int!
  serialNo: String
  stock: StockQLType
  stockId: Long
  stockMovement: StockMovementQLType
  stockMovementId: Long
  stockTakeHeader: StockTakeHeaderQLType
  stockTakeHeaderId: Long!
  stockUnit: StockUnitQLType
  stockUnitId: Long
  stockUnitStatus: StockUnitStatusQLType
  stockUnitStatusId: Int
  systemModified: DateTime!
  systemModifiedBy: String
  toStockLocation: StockLocationQLType
  toStockLocationId: Int
  unitOfMeasurement: UnitOfMeasurementQLType
  unitOfMeasurementId: Int!
}

type StockMovementQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  qty: Int
  stock: StockQLType
  stockId: Long!
  stockMovementDate: DateTime!
  stockMovementRequestItem: StockMovementRequestItemQLType
  stockMovementRequestItemId: Long
  stockMovementTransaction: StockMovementTransactionQLType
  stockMovementTransactionId: Long
  stockMovementType: StockMovementTypeQLType
  stockMovementTypeId: Int!
  stockTakeItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemsCount: Int
  stockType: StockTypeQLType
  stockTypeId: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  toStockLocation: StockLocationQLType
  toStockLocationId: Int
  unitCost: Decimal
  unitPrice: Decimal
}

type StockMovementTypeQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  movementCode: String
  movementType: String
  parentType: StockMovementParentTypeQLType
  parentTypeId: Int!
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockMovementParentTypeQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  direction: String
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  stockMovementTypes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementTypeSearchTyp Filter
    filter: StockMovementTypeSearch
  ): [StockMovementTypeQLType]

  # ***Excludes IsDeleted***
  stockMovementTypesCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockTypeQLType {
  created: DateTime!
  description: String
  id: Int!
  isDeleted: Boolean!
  isStormStock: Boolean!
  stockMovements(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockMovementSearchTyp Filter
    filter: StockMovementSearch
  ): [StockMovementQLType]

  # ***Excludes IsDeleted***
  stockMovementsCount: Int
  stockTallies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTallySearchTyp Filter
    filter: StockTallySearch
  ): [StockTallyQLType]

  # ***Excludes IsDeleted***
  stockTalliesCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  typeName: String
}

type StockTallyQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  quantity: Int!
  stock: StockQLType
  stockId: Long!
  stockType: StockTypeQLType
  stockTypeId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockTakeHeaderQLType {
  application: ApplicationQLType
  applicationId: Int!
  correlationMappingId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  createdDate: DateTime!
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  stockLocation: StockLocationQLType
  stockLocationId: Int!
  stockTakeDiscrepancies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepanciesCount: Int
  stockTakeItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemsCount: Int
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockTakeDiscrepancyQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  discrepancyValue: Int!
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  reason: String
  serialNo: String
  stock: StockQLType
  stockId: Long
  stockLocation: StockLocationQLType
  stockLocationId: Int!
  stockTakeAdjustmentCode: StockTakeAdjustmentCodeQLType
  stockTakeAdjustmentCodeId: Int
  stockTakeHeader: StockTakeHeaderQLType
  stockTakeHeaderId: Long!
  stockUnit: StockUnitQLType
  stockUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockTakeAdjustmentCodeQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  extendedDescription: String
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  shortDescription: String
  stockTakeDiscrepancies(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeDiscrepancySearchTyp Filter
    filter: StockTakeDiscrepancySearch
  ): [StockTakeDiscrepancyQLType]

  # ***Excludes IsDeleted***
  stockTakeDiscrepanciesCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: Int
}

type StockUnitStatusQLType {
  created: DateTime!
  description: String
  id: Int!
  isDeleted: Boolean!
  status: String
  stockTakeItems(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockTakeItemSearchTyp Filter
    filter: StockTakeItemSearch
  ): [StockTakeItemQLType]

  # ***Excludes IsDeleted***
  stockTakeItemsCount: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
}

type StockUnitAssetQLType {
  application: ApplicationQLType
  applicationId: Int!
  assetTag: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  register1: String
  register2: String
  register3: String
  register4: String
  register5: String
  register6: String
  register7: String
  register8: String
  serialNo: String
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockUnitGroupQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  qtyAvailable: Int
  stockUnits(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitSearchTyp Filter
    filter: StockUnitSearch
  ): [StockUnitQLType]

  # ***Excludes IsDeleted***
  stockUnitsCount: Int
  systemModified: DateTime!
  systemModifiedBy: String
}

type CustomerReturnRequestItemUnitQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  customerReturnRequestItem: CustomerReturnRequestItemQLType
  customerReturnRequestItemId: Int!
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockUnitAttributeQLType {
  application: ApplicationQLType
  applicationId: Int!
  attributeType: StockUnitAttributeTypeQLType
  attributeTypeId: Int!
  attributeValue: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  stockUnit: StockUnitQLType
  stockUnitId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
}

type StockUnitAttributeTypeQLType {
  attributeType: String
  created: DateTime!
  id: Int!
  isDeleted: Boolean!
  stockUnitAttributes(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StockUnitAttributeSearchTyp Filter
    filter: StockUnitAttributeSearch
  ): [StockUnitAttributeQLType]

  # ***Excludes IsDeleted***
  stockUnitAttributesCount: Int
}

type WarrantyQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  endDate: DateTime
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  startDate: DateTime
  stockUnit: StockUnitQLType
  stockUnitId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type CustomerStockLevelQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  crmguid: ID
  customer: CustomerQLType
  customerId: Int!
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  parentCustomer: CustomerQLType
  parentCustomerId: Int!
  qtyMax: Int!
  qtyMin: Int!
  sortOrder: Int
  stock: StockQLType
  stockId: Long!
}

type StockFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  stock: StockQLType
  stockId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type StockThresholdQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  qty: Int!
  stock: StockQLType
  stockId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
}

type DispatchNoteHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  dispatchNoteHeader: DispatchNoteHeaderQLType
  dispatchNoteHeaderId: Long!
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type QuoteHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  quoteHeader: QuoteHeaderQLType
  quoteHeaderId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type SalesOrderHeaderFeatureMappingQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  feature: FeatureQLType
  featureId: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  isEnabled: Boolean
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long!
  systemModified: DateTime!
  systemModifiedBy: String
  value: String
}

type DispatchNoteTransactionQLType {
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  guid: ID!
  id: Long!
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  systemModified: DateTime!
  systemModifiedBy: String
}

type IncidentalQLType {
  amount: Decimal!
  application: ApplicationQLType
  applicationId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  description: String
  guid: ID!
  id: Int!
  incidentalDate: DateTime!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  reference: String
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long
  salesOrderItem: SalesOrderItemQLType
  salesOrderItemId: Long
  salesPerson: UserProfileQLType
  salesPersonId: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
}

type SalesOrderHeaderResponseEmailMappingQLType {
  created: DateTime!
  email: String
  id: Long!
  isDefault: Boolean!
  isDeleted: Boolean!
  salesOrderHeader: SalesOrderHeaderQLType
  salesOrderHeaderId: Long!
}

type SalesOrderRequestHeaderQLType {
  address: AddressQLType
  addressId: Int
  application: ApplicationQLType
  applicationId: Int!
  correlation: CorrelationQLType
  correlationId: Long
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  currency: CurrencyQLType
  currencyId: Int!
  customer: CustomerQLType
  customerId: Int
  exchangeRate: Decimal!
  guid: ID!
  id: Long!
  idRef: String
  isDeleted: Boolean!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  reference: String
  salesOrderRequestType: String
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type StormStatusMappingQLType {
  created: DateTime!
  id: Int!
  isDeleted: Boolean!
  isMutable: Boolean
  isOpen: Boolean!
  isVisible: Boolean
  sortOrder: Int!
  stormStatus: StormStatusQLType
  stormStatusId: Int!
  tableName: TableNameQLType
  tableNameId: Int!
}

type TableNameQLType {
  created: DateTime!
  id: Int!
  isDeleted: Boolean!
  memos(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  memosCount: Int
  name: String
  stormStatusMappings(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # StormStatusMappingSearchTyp Filter
    filter: StormStatusMappingSearch
  ): [StormStatusMappingQLType]

  # ***Excludes IsDeleted***
  stormStatusMappingsCount: Int
}

type MemoQLType {
  allocatedTo: UserProfileQLType
  allocatedToId: Int
  completedBy: UserProfileQLType
  completedById: Int
  completedDate: DateTime
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  guid: ID!
  id: Long!
  inverseParent(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  inverseParentCount: Int
  isCompleted: Boolean!
  isDeleted: Boolean!
  isViewed: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  memoType: MemoTypeQLType
  memoTypeId: Int!
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  notes: String
  parent: MemoQLType
  parentId: Long
  systemModified: DateTime!
  systemModifiedBy: String
  tableName: TableNameQLType
  tableNameId: Int!
}

type MemoTypeQLType {
  created: DateTime!
  id: Int!
  memos(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # MemoSearchTyp Filter
    filter: MemoSearch
  ): [MemoQLType]

  # ***Excludes IsDeleted***
  memosCount: Int
  type: String
}

type CourierDeliveryMethodQLType {
  courier: CourierQLType
  courierId: Int!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  cutOfTime: String
  defaultCourierCost: Decimal!
  deliveryMethod: DeliveryMethodQLType
  deliveryMethodId: Int!
  guid: ID!
  id: Int!
  isActive: Boolean
  isDeleted: Boolean!
}

type DeliveryMethodQLType {
  courierDeliveryMethods(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CourierDeliveryMethodSearchTyp Filter
    filter: CourierDeliveryMethodSearch
  ): [CourierDeliveryMethodQLType]

  # ***Excludes IsDeleted***
  courierDeliveryMethodsCount: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  defaultCourierCost: Decimal!
  description: String
  dispatchNoteHeaderDeliveryMethods(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderDeliveryMethodsCount: Int
  dispatchNoteHeaderRequestedDeliveryMethods(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeaderRequestedDeliveryMethodsCount: Int
  guid: ID!
  id: Int!
  isDeleted: Boolean!
  name: String
  sortOrder: Int!
}

type ProofOfDeliveryQLType {
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  dispatchNoteHeader: DispatchNoteHeaderQLType
  dispatchNoteHeaderId: Long
  dispatchNoteHeaders(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # DispatchNoteHeaderSearchTyp Filter
    filter: DispatchNoteHeaderSearch
  ): [DispatchNoteHeaderQLType]

  # ***Excludes IsDeleted***
  dispatchNoteHeadersCount: Int
  id: Int!
  isCompleted: Boolean!
  isDeleted: Boolean!
  memoMapping: MemoMappingQLType
  memoMappingId: Long
  modified: DateTime!
  modifiedBy: UserProfileQLType
  modifiedById: Int
  systemModified: DateTime!
  systemModifiedBy: String
  url: String
}

type CustomerAddressMappingQLType {
  address: AddressQLType
  addressId: Int!
  created: DateTime!
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  id: Long!
  isInvoicingAddress: Boolean!
}

type SectorQLType {
  created: DateTime!
  customers(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # CustomerSearchTyp Filter
    filter: CustomerSearch
  ): [CustomerQLType]

  # ***Excludes IsDeleted***
  customersCount: Int
  description: String
  id: Int!
  inverseParentSector(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # SectorSearchTyp Filter
    filter: SectorSearch
  ): [SectorQLType]

  # ***Excludes IsDeleted***
  inverseParentSectorCount: Int
  isDeleted: Boolean!
  name: String
  parentSector: SectorQLType
  parentSectorId: Int
}

type CustomerContactMappingQLType {
  contact: ContactQLType
  contactId: Int!
  created: DateTime!
  customer: CustomerQLType
  customerId: Int!
  id: Long!
}

type CustomerSageAuxQLType {
  balance: Decimal!
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  creditLimit: Decimal!
  creditLimitDate: DateTime!
  customer: CustomerQLType
  customerId: Int!
  id: Int!
  isDeleted: Boolean!
}

type RoleQLType {
  created: DateTime!
  id: Int!
  isDeleted: Boolean!
  name: String
  userProfiles(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # UserProfileSearchTyp Filter
    filter: UserProfileSearch
  ): [UserProfileQLType]

  # ***Excludes IsDeleted***
  userProfilesCount: Int
}

type AddressProviderMappingQLType {
  address: AddressQLType
  addressId: Int
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  id: Int!
  isDeleted: Boolean!
  loqateAddresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # LoqateAddressSearchTyp Filter
    filter: LoqateAddressSearch
  ): [LoqateAddressQLType]

  # ***Excludes IsDeleted***
  loqateAddressesCount: Int
}

type LoqateAddressQLType {
  addressProviderMapping: AddressProviderMappingQLType
  addressProviderMappingId: Int
  adminAreaCode: String
  adminAreaName: String
  block: String
  buildingName: String
  buildingNumber: String
  city: String
  companyName: String
  countryIso2: String
  countryIso3: String
  countryIsoNumber: Int
  countryName: String
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  dataLabel: String
  dateSubmitted: DateTime!
  department: String
  district: String
  id: Int!
  isDeleted: Boolean!
  label: String
  language: String
  line1: String
  line2: String
  line3: String
  line4: String
  line5: String
  loqateId: String
  neighbourhood: String
  poboxNumber: String
  postalCode: String
  province: String
  provinceCode: String
  provinceName: String
  secondaryStreet: String
  sortingNumber1: String
  sortingNumber2: String
  street: String
  subBuilding: String
  type: String
}

type EmploymentQLType {
  created: DateTime!
  endDate: DateTime
  id: Int!
  startDate: DateTime
  userProfile: UserProfileQLType
  userProfileId: Int!
}

type ParentUserProfileMappingQLType {
  childUserProfile: UserProfileQLType
  childUserProfileId: Int!
  created: DateTime!
  expiryDate: DateTime
  id: Int!
  isAdmin: Boolean!
  isDeleted: Boolean!
  isVisible: Boolean!
  parentUserProfile: UserProfileQLType
  parentUserProfileId: Int!
}

type TeamQLType {
  code: String
  created: DateTime!
  id: Int!
  name: String
  teamLeader: UserProfileQLType
  teamLeaderId: Int!
  teamTarget: Decimal!
  userProfileTeamMappings(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileTeamMappingSearchTyp Filter
    filter: UserProfileTeamMappingSearch
  ): [UserProfileTeamMappingQLType]

  #
  userProfileTeamMappingsCount: Int
}

type UserProfileTeamMappingQLType {
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  endDate: DateTime
  id: Int!
  inTeamStats: Boolean
  isActive: Boolean
  onPlasma: Boolean
  startDate: DateTime!
  systemModified: DateTime!
  systemModifiedBy: String
  team: TeamQLType
  teamId: Int!
  userProfile: UserProfileQLType
  userProfileId: Int!
}

type UserProfileDepartmentMappingQLType {
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  department: DepartmentQLType
  departmentId: Int!
  id: Int!
  isDefault: Boolean!
  systemModified: DateTime!
  systemModifiedBy: String
  userProfile: UserProfileQLType
  userProfileId: Int!
}

type DepartmentQLType {
  created: DateTime!
  id: Int!
  inverseParentDepartment(
    sortOrder: [SortOrderType]
    top: Int

    # DepartmentSearchTyp Filter
    filter: DepartmentSearch
  ): [DepartmentQLType]

  #
  inverseParentDepartmentCount: Int
  isVisible: Boolean
  name: String
  parentDepartment: DepartmentQLType
  parentDepartmentId: Int
  userProfileDepartmentMappings(
    sortOrder: [SortOrderType]
    top: Int

    # UserProfileDepartmentMappingSearchTyp Filter
    filter: UserProfileDepartmentMappingSearch
  ): [UserProfileDepartmentMappingQLType]

  #
  userProfileDepartmentMappingsCount: Int
}

type UserProfileTargetQLType {
  created: DateTime!
  createdBy: UserProfileQLType
  createdById: Int
  endDate: DateTime
  id: Int!
  isActive: Boolean
  startDate: DateTime!
  systemModified: DateTime!
  systemModifiedBy: String
  target: Decimal!
  userProfile: UserProfileQLType
  userProfileId: Int!
}

type CountryQLType {
  addresses(
    sortOrder: [SortOrderType]
    top: Int

    # Soft Delete Filter - defaults to false
    isDeleted: Boolean = false

    # AddressSearchTyp Filter
    filter: AddressSearch
  ): [AddressQLType]

  # ***Excludes IsDeleted***
  addressesCount: Int
  code: String
  created: DateTime!
  defaultVatcodeId: Int
  dialingCode: String
  id: Int!
  name: String
  sortOrder: Int
}

type CustomerSicmappingQLType {
  created: DateTime!
  customer: AddressQLType
  customerId: Int!
  id: Int!
  isDefault: Boolean!
  sic: AddressQLType
  sicid: Int!
}

type PagedListResultOfAddressFeatureMapping {
  currentPage: Int!
  items: [AddressFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfAddressProviderMapping {
  currentPage: Int!
  items: [AddressProviderMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfAddressType {
  currentPage: Int!
  items: [AddressTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfApplication {
  currentPage: Int!
  items: [ApplicationQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfArea {
  currentPage: Int!
  items: [AreaQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfAssetRollHeader {
  currentPage: Int!
  items: [AssetRollHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type AssetRollHeaderQLSumType {
  endNumber: Int!
  startNumber: Int!
}

type AssetRollHeaderQLAvgType {
  endNumber: Float!
  startNumber: Float!
}

type PagedListResultOfAssetRollItem {
  currentPage: Int!
  items: [AssetRollItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfBuildRequestHeader {
  currentPage: Int!
  items: [BuildRequestHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfBuildRequestHeaderFeatureMapping {
  currentPage: Int!
  items: [BuildRequestHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfBuildRequestItem {
  currentPage: Int!
  items: [BuildRequestItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type BuildRequestItemQLSumType {
  qty: Int!
}

type BuildRequestItemQLAvgType {
  qty: Float!
}

type PagedListResultOfBuildRequestItemUnit {
  currentPage: Int!
  items: [BuildRequestItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCategory {
  currentPage: Int!
  items: [CategoryQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CategoryQLSumType {
  sortOrder: Int!
}

type CategoryQLAvgType {
  sortOrder: Float!
}

type PagedListResultOfContact {
  currentPage: Int!
  items: [ContactQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfContactFeatureMapping {
  currentPage: Int!
  items: [ContactFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCorrelation {
  currentPage: Int!
  items: [CorrelationQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCountry {
  currentPage: Int!
  items: [CountryQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CountryQLSumType {
  sortOrder: Int!
}

type CountryQLAvgType {
  sortOrder: Float!
}

type PagedListResultOfCourier {
  currentPage: Int!
  items: [CourierQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCourierDeliveryMethod {
  currentPage: Int!
  items: [CourierDeliveryMethodQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CourierDeliveryMethodQLSumType {
  defaultCourierCost: Decimal!
}

type CourierDeliveryMethodQLAvgType {
  defaultCourierCost: Decimal!
}

type PagedListResultOfCurrency {
  currentPage: Int!
  items: [CurrencyQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CurrencyQLSumType {
  exchangeRate: Decimal!
  sortOrder: Int!
}

type CurrencyQLAvgType {
  exchangeRate: Decimal!
  sortOrder: Float!
}

type PagedListResultOfCustomer {
  currentPage: Int!
  items: [CustomerQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerAddressMapping {
  currentPage: Int!
  items: [CustomerAddressMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerContactMapping {
  currentPage: Int!
  items: [CustomerContactMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerCreditNoteHeader {
  currentPage: Int!
  items: [CustomerCreditNoteHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerCreditNoteHeaderQLSumType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  grossTotal: Decimal!
  nettTotal: Decimal!
  totalCost: Decimal!
  totalVat: Decimal!
}

type CustomerCreditNoteHeaderQLAvgType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  grossTotal: Decimal!
  nettTotal: Decimal!
  totalCost: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfCustomerCreditNoteItem {
  currentPage: Int!
  items: [CustomerCreditNoteItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerCreditNoteItemQLSumType {
  qtyCredited: Int!
  qtyOrdered: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type CustomerCreditNoteItemQLAvgType {
  qtyCredited: Float!
  qtyOrdered: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type PagedListResultOfCustomerCreditNoteItemUnit {
  currentPage: Int!
  items: [CustomerCreditNoteItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerCreditNoteItemUnitQLSumType {
  cost: Decimal!
  price: Decimal!
  vat: Decimal!
}

type CustomerCreditNoteItemUnitQLAvgType {
  cost: Decimal!
  price: Decimal!
  vat: Decimal!
}

type PagedListResultOfCustomerFeatureMapping {
  currentPage: Int!
  items: [CustomerFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerInvoiceHeader {
  currentPage: Int!
  items: [CustomerInvoiceHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerInvoiceHeaderQLSumType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  grossTotal: Decimal!
  nettTotal: Decimal!
  totalCost: Decimal!
  totalVat: Decimal!
}

type CustomerInvoiceHeaderQLAvgType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  grossTotal: Decimal!
  nettTotal: Decimal!
  totalCost: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfCustomerInvoiceItem {
  currentPage: Int!
  items: [CustomerInvoiceItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerInvoiceItemQLSumType {
  qtyInvoiced: Int!
  qtyOrdered: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type CustomerInvoiceItemQLAvgType {
  qtyInvoiced: Float!
  qtyOrdered: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type PagedListResultOfCustomerInvoiceItemUnit {
  currentPage: Int!
  items: [CustomerInvoiceItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerInvoiceItemUnitQLSumType {
  cost: Decimal!
  price: Decimal!
  vat: Decimal!
}

type CustomerInvoiceItemUnitQLAvgType {
  cost: Decimal!
  price: Decimal!
  vat: Decimal!
}

type PagedListResultOfCustomerPaymentTerm {
  currentPage: Int!
  items: [CustomerPaymentTermQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerPurchaseOrderRequestHeader {
  currentPage: Int!
  items: [CustomerPurchaseOrderRequestHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerPurchaseOrderRequestHeaderQLSumType {
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type CustomerPurchaseOrderRequestHeaderQLAvgType {
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfCustomerPurchaseOrderRequestHeaderFeatureMapping {
  currentPage: Int!
  items: [CustomerPurchaseOrderRequestHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerPurchaseOrderRequestItem {
  currentPage: Int!
  items: [CustomerPurchaseOrderRequestItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerPurchaseOrderRequestItemQLSumType {
  cost: Decimal!
  price: Decimal!
  qtyRequested: Int!
  vat: Decimal!
  vatrate: Decimal!
}

type CustomerPurchaseOrderRequestItemQLAvgType {
  cost: Decimal!
  price: Decimal!
  qtyRequested: Float!
  vat: Decimal!
  vatrate: Decimal!
}

type PagedListResultOfCustomerReturnHeader {
  currentPage: Int!
  items: [CustomerReturnHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerReturnHeaderQLSumType {
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type CustomerReturnHeaderQLAvgType {
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfCustomerReturnHeaderFeatureMapping {
  currentPage: Int!
  items: [CustomerReturnHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerReturnItem {
  currentPage: Int!
  items: [CustomerReturnItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerReturnItemQLSumType {
  returnedQty: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type CustomerReturnItemQLAvgType {
  returnedQty: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type PagedListResultOfCustomerReturnItemUnit {
  currentPage: Int!
  items: [CustomerReturnItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerReturnItemUnitQLSumType {
  unitCost: Decimal!
  unitPrice: Decimal!
}

type CustomerReturnItemUnitQLAvgType {
  unitCost: Decimal!
  unitPrice: Decimal!
}

type PagedListResultOfCustomerReturnRequestHeader {
  currentPage: Int!
  items: [CustomerReturnRequestHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerReturnRequestItem {
  currentPage: Int!
  items: [CustomerReturnRequestItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerReturnRequestItemQLSumType {
  returnRequestQty: Int!
  sortOrder: Int!
}

type CustomerReturnRequestItemQLAvgType {
  returnRequestQty: Float!
  sortOrder: Float!
}

type PagedListResultOfCustomerReturnRequestItemUnit {
  currentPage: Int!
  items: [CustomerReturnRequestItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerSageAux {
  currentPage: Int!
  items: [CustomerSageAuxQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerSageAuxQLSumType {
  balance: Decimal!
  creditLimit: Decimal!
}

type CustomerSageAuxQLAvgType {
  balance: Decimal!
  creditLimit: Decimal!
}

type PagedListResultOfCustomerSicmapping {
  currentPage: Int!
  items: [CustomerSicmappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfCustomerStockLevel {
  currentPage: Int!
  items: [CustomerStockLevelQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type CustomerStockLevelQLSumType {
  qtyMax: Int!
  qtyMin: Int!
  sortOrder: Int!
}

type CustomerStockLevelQLAvgType {
  qtyMax: Float!
  qtyMin: Float!
  sortOrder: Float!
}

type PagedListResultOfDeliveryMethod {
  currentPage: Int!
  items: [DeliveryMethodQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type DeliveryMethodQLSumType {
  defaultCourierCost: Decimal!
  sortOrder: Int!
}

type DeliveryMethodQLAvgType {
  defaultCourierCost: Decimal!
  sortOrder: Float!
}

type PagedListResultOfDepartment {
  currentPage: Int!
  items: [DepartmentQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfDispatchNoteHeader {
  currentPage: Int!
  items: [DispatchNoteHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type DispatchNoteHeaderQLSumType {
  boxesShipped: Int!
  courierCost: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type DispatchNoteHeaderQLAvgType {
  boxesShipped: Float!
  courierCost: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfDispatchNoteHeaderFeatureMapping {
  currentPage: Int!
  items: [DispatchNoteHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfDispatchNoteItem {
  currentPage: Int!
  items: [DispatchNoteItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type DispatchNoteItemQLSumType {
  qtyDispatched: Int!
  qtyOrdered: Int!
  qtyOutstanding: Int!
  qtyRequested: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type DispatchNoteItemQLAvgType {
  qtyDispatched: Float!
  qtyOrdered: Float!
  qtyOutstanding: Float!
  qtyRequested: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitVat: Decimal!
}

type PagedListResultOfDispatchNoteItemUnit {
  currentPage: Int!
  items: [DispatchNoteItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type DispatchNoteItemUnitQLSumType {
  cost: Decimal!
  price: Decimal!
  vat: Decimal!
}

type DispatchNoteItemUnitQLAvgType {
  cost: Decimal!
  price: Decimal!
  vat: Decimal!
}

type PagedListResultOfDispatchNoteTransaction {
  currentPage: Int!
  items: [DispatchNoteTransactionQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfEmployment {
  currentPage: Int!
  items: [EmploymentQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfFeature {
  currentPage: Int!
  items: [FeatureQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfGoodsReceivedNoteHeader {
  currentPage: Int!
  items: [GoodsReceivedNoteHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfGoodsReceivedNoteItem {
  currentPage: Int!
  items: [GoodsReceivedNoteItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type GoodsReceivedNoteItemQLSumType {
  avgCost: Decimal!
  qtyBooked: Int!
  qtyOutstanding: Int!
  qtyRequested: Int!
  totalUnitCost: Decimal!
}

type GoodsReceivedNoteItemQLAvgType {
  avgCost: Decimal!
  qtyBooked: Float!
  qtyOutstanding: Float!
  qtyRequested: Float!
  totalUnitCost: Decimal!
}

type PagedListResultOfGoodsReceivedNoteItemUnit {
  currentPage: Int!
  items: [GoodsReceivedNoteItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type GoodsReceivedNoteItemUnitQLSumType {
  cost: Decimal!
  price: Decimal!
}

type GoodsReceivedNoteItemUnitQLAvgType {
  cost: Decimal!
  price: Decimal!
}

type PagedListResultOfGoodsReceivedNoteItemUnitTransaction {
  currentPage: Int!
  items: [GoodsReceivedNoteItemUnitTransactionQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfGoodsReceivedNoteTransaction {
  currentPage: Int!
  items: [GoodsReceivedNoteTransactionQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfHighValueThreshold {
  currentPage: Int!
  items: [HighValueThresholdQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type HighValueThresholdQLType {
  created: DateTime!
  id: Int!
  systemModified: DateTime!
  systemModifiedBy: String
  thresholdValue: Decimal
}

# HighValueThreshold SearchContext
input HighValueThresholdSearch {
  # Id
  id: [IntSearch]

  # ThresholdValue
  thresholdValue: [FloatSearch]

  # Created
  created: [DateTimeSearch]

  # SystemModified
  systemModified: [DateTimeSearch]

  # SystemModifiedBy
  systemModifiedBy: [StringSearchType]
}

type HighValueThresholdQLSumType {
  thresholdValue: Decimal!
}

type HighValueThresholdQLAvgType {
  thresholdValue: Decimal!
}

type PagedListResultOfIncidental {
  currentPage: Int!
  items: [IncidentalQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type IncidentalQLSumType {
  amount: Decimal!
}

type IncidentalQLAvgType {
  amount: Decimal!
}

type PagedListResultOfIncoTerm {
  currentPage: Int!
  items: [IncoTermQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type IncoTermQLSumType {
  sortOrder: Int!
}

type IncoTermQLAvgType {
  sortOrder: Float!
}

type PagedListResultOfLocale {
  currentPage: Int!
  items: [LocaleQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfLoqateAddress {
  currentPage: Int!
  items: [LoqateAddressQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type LoqateAddressQLSumType {
  countryIsoNumber: Int!
}

type LoqateAddressQLAvgType {
  countryIsoNumber: Float!
}

type PagedListResultOfManufacturer {
  currentPage: Int!
  items: [ManufacturerQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfMemo {
  currentPage: Int!
  items: [MemoQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfMemoMapping {
  currentPage: Int!
  items: [MemoMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfMemoType {
  currentPage: Int!
  items: [MemoTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfNonOrderedGoodsHeader {
  currentPage: Int!
  items: [NonOrderedGoodsHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfNonOrderedGoodsItem {
  currentPage: Int!
  items: [NonOrderedGoodsItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type NonOrderedGoodsItemQLSumType {
  avgCost: Decimal!
  avgPrice: Decimal!
  qtyCredited: Int!
  qtyOrdered: Int!
  qtyOutstanding: Int!
  qtyReceived: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal!
  totalUnitMarkup: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vatrate: Decimal!
}

type NonOrderedGoodsItemQLAvgType {
  avgCost: Decimal!
  avgPrice: Decimal!
  qtyCredited: Float!
  qtyOrdered: Float!
  qtyOutstanding: Float!
  qtyReceived: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal!
  totalUnitMarkup: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vatrate: Decimal!
}

type PagedListResultOfNonOrderedGoodsItemUnit {
  currentPage: Int!
  items: [NonOrderedGoodsItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type NonOrderedGoodsItemUnitQLSumType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
}

type NonOrderedGoodsItemUnitQLAvgType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
}

type PagedListResultOfNonOrderedGoodsOrigin {
  currentPage: Int!
  items: [NonOrderedGoodsOriginQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfOutstandingPurchaseOrder {
  currentPage: Int!
  items: [OutstandingPurchaseOrderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type OutstandingPurchaseOrderQLType {
  created: DateTime!
  dateRequired: DateTime
  delivered: Int
  id: Long!
  name: String
  outstanding: Int
  status: String
}

# OutstandingPurchaseOrder SearchContext
input OutstandingPurchaseOrderSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # DateRequired
  dateRequired: [DateTimeSearch]

  # Delivered
  delivered: [IntSearch]

  # Outstanding
  outstanding: [IntSearch]

  # Status
  status: [StringSearchType]
}

type OutstandingPurchaseOrderQLSumType {
  delivered: Int!
  outstanding: Int!
}

type OutstandingPurchaseOrderQLAvgType {
  delivered: Float!
  outstanding: Float!
}

type PagedListResultOfParentUserProfileMapping {
  currentPage: Int!
  items: [ParentUserProfileMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfPaymentMethod {
  currentPage: Int!
  items: [PaymentMethodQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfPaymentTerm {
  currentPage: Int!
  items: [PaymentTermQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfProFormaInvoiceHeader {
  currentPage: Int!
  items: [ProFormaInvoiceHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type ProFormaInvoiceHeaderQLSumType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalMargin: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalVat: Decimal!
}

type ProFormaInvoiceHeaderQLAvgType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalMargin: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfProFormaInvoiceHeaderFeatureMapping {
  currentPage: Int!
  items: [ProFormaInvoiceHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfProFormaInvoiceItem {
  currentPage: Int!
  items: [ProFormaInvoiceItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type ProFormaInvoiceItemQLSumType {
  cost: Decimal!
  margin: Decimal!
  price: Decimal!
  profit: Decimal!
  qty: Int!
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vat: Decimal!
  vatrate: Decimal!
}

type ProFormaInvoiceItemQLAvgType {
  cost: Decimal!
  margin: Decimal!
  price: Decimal!
  profit: Decimal!
  qty: Float!
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vat: Decimal!
  vatrate: Decimal!
}

type PagedListResultOfProofOfDelivery {
  currentPage: Int!
  items: [ProofOfDeliveryQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfPurchaseOrderHeader {
  currentPage: Int!
  items: [PurchaseOrderHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PurchaseOrderHeaderQLSumType {
  exchangeRate: Decimal!
  stormDeliveryCharge: Decimal!
  supplierDeliveryCharge: Decimal!
  totalCost: Decimal!
  totalMargin: Decimal!
  totalMarkup: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalVat: Decimal!
}

type PurchaseOrderHeaderQLAvgType {
  exchangeRate: Decimal!
  stormDeliveryCharge: Decimal!
  supplierDeliveryCharge: Decimal!
  totalCost: Decimal!
  totalMargin: Decimal!
  totalMarkup: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfPurchaseOrderHeaderCarriageChargeMapping {
  currentPage: Int!
  items: [PurchaseOrderHeaderCarriageChargeMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PurchaseOrderHeaderCarriageChargeMappingQLSumType {
  carriageCharge: Decimal!
}

type PurchaseOrderHeaderCarriageChargeMappingQLAvgType {
  carriageCharge: Decimal!
}

type PagedListResultOfPurchaseOrderHeaderFeatureMapping {
  currentPage: Int!
  items: [PurchaseOrderHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfPurchaseOrderHeaderMemoRecursive {
  currentPage: Int!
  items: [PurchaseOrderHeaderMemoRecursiveQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PurchaseOrderHeaderMemoRecursiveQLType {
  allocatedToId: Int
  allocateToAvatarUrl: String
  allocateToEmail: String
  allocateToFullName: String
  completedByAvatarUrl: String
  completedByEmail: String
  completedByFullName: String
  completedById: Int
  completedDate: DateTime
  created: DateTime
  createdByAvatarUrl: String
  createdByEmail: String
  createdByFullName: String
  createdById: Int
  id: Long
  isCompleted: Boolean
  isDeleted: Boolean
  isViewed: Boolean
  memoLevel: Int
  memoMappingId: Long
  modified: DateTime
  modifiedById: Int
  notes: String
  parentId: Long
  position: String
  purchaseOrderHeaderId: Long
}

# PurchaseOrderHeaderMemoRecursive SearchContext
input PurchaseOrderHeaderMemoRecursiveSearch {
  # PurchaseOrderHeaderId
  purchaseOrderHeaderId: [IntSearch]

  # Id
  id: [IntSearch]

  # Position
  position: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # ParentId
  parentId: [IntSearch]

  # Notes
  notes: [StringSearchType]

  # AllocatedToId
  allocatedToId: [IntSearch]

  # IsViewed
  isViewed: [BooleanSearch]

  # IsCompleted
  isCompleted: [BooleanSearch]

  # CompletedById
  completedById: [IntSearch]

  # CompletedDate
  completedDate: [DateTimeSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # MemoLevel
  memoLevel: [IntSearch]

  # CreatedByFullName
  createdByFullName: [StringSearchType]

  # CreatedByEmail
  createdByEmail: [StringSearchType]

  # CreatedByAvatarUrl
  createdByAvatarUrl: [StringSearchType]

  # AllocateToFullName
  allocateToFullName: [StringSearchType]

  # AllocateToEmail
  allocateToEmail: [StringSearchType]

  # AllocateToAvatarUrl
  allocateToAvatarUrl: [StringSearchType]

  # CompletedByFullName
  completedByFullName: [StringSearchType]

  # CompletedByEmail
  completedByEmail: [StringSearchType]

  # CompletedByAvatarUrl
  completedByAvatarUrl: [StringSearchType]
}

type PurchaseOrderHeaderMemoRecursiveQLSumType {
  memoLevel: Int!
}

type PurchaseOrderHeaderMemoRecursiveQLAvgType {
  memoLevel: Float!
}

type PagedListResultOfPurchaseOrderItem {
  currentPage: Int!
  items: [PurchaseOrderItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PurchaseOrderItemQLSumType {
  avgCost: Decimal!
  avgPrice: Decimal!
  qtyInvoiced: Int!
  qtyOrdered: Int!
  qtyOutstanding: Int!
  qtyReceived: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal!
  totalUnitMarkup: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vatrate: Decimal!
}

type PurchaseOrderItemQLAvgType {
  avgCost: Decimal!
  avgPrice: Decimal!
  qtyInvoiced: Float!
  qtyOrdered: Float!
  qtyOutstanding: Float!
  qtyReceived: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitMargin: Decimal!
  totalUnitMarkup: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vatrate: Decimal!
}

type PagedListResultOfPurchaseOrderItemUnit {
  currentPage: Int!
  items: [PurchaseOrderItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PurchaseOrderItemUnitQLSumType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
}

type PurchaseOrderItemUnitQLAvgType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
}

type PagedListResultOfQuoteHeader {
  currentPage: Int!
  items: [QuoteHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type QuoteHeaderQLSumType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalMargin: Decimal!
  totalMarkup: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalVat: Decimal!
}

type QuoteHeaderQLAvgType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalMargin: Decimal!
  totalMarkup: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfQuoteHeaderFeatureMapping {
  currentPage: Int!
  items: [QuoteHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfQuoteItem {
  currentPage: Int!
  items: [QuoteItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type QuoteItemQLSumType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
  qty: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vat: Decimal!
  vatrate: Decimal!
}

type QuoteItemQLAvgType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
  qty: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitVat: Decimal!
  vat: Decimal!
  vatrate: Decimal!
}

type PagedListResultOfQuoteList {
  currentPage: Int!
  items: [QuoteListQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type QuoteListQLType {
  closedBy: DateTime
  createdBy: String
  customerName: String
  dateRequired: DateTime
  manager: String
  reference: String
  stormRef: String
  team: String
  totalCost: String
  totalCostGbp: Decimal!
  totalPrice: String
  totalPriceGbp: Decimal!
  totalProfit: String
  totalProfitGbp: Decimal
}

# QuoteList SearchContext
input QuoteListSearch {
  # StormRef
  stormRef: [StringSearchType]

  # CustomerName
  customerName: [StringSearchType]

  # DateRequired
  dateRequired: [DateTimeSearch]

  # ClosedBy
  closedBy: [DateTimeSearch]

  # Reference
  reference: [StringSearchType]

  # TotalCostGbp
  totalCostGbp: [FloatSearch]

  # TotalPriceGbp
  totalPriceGbp: [FloatSearch]

  # TotalProfitGbp
  totalProfitGbp: [FloatSearch]

  # TotalCost
  totalCost: [StringSearchType]

  # TotalPrice
  totalPrice: [StringSearchType]

  # TotalProfit
  totalProfit: [StringSearchType]

  # Manager
  manager: [StringSearchType]

  # CreatedBy
  createdBy: [StringSearchType]

  # Team
  team: [StringSearchType]
}

type QuoteListQLSumType {
  totalCostGbp: Decimal!
  totalPriceGbp: Decimal!
  totalProfitGbp: Decimal!
}

type QuoteListQLAvgType {
  totalCostGbp: Decimal!
  totalPriceGbp: Decimal!
  totalProfitGbp: Decimal!
}

type PagedListResultOfQuoteValidationTerm {
  currentPage: Int!
  items: [QuoteValidationTermQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfRole {
  currentPage: Int!
  items: [RoleQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSalesOrderHeader {
  currentPage: Int!
  items: [SalesOrderHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SalesOrderHeaderQLSumType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalCourierCost: Decimal!
  totalInvoiced: Decimal!
  totalMargin: Decimal!
  totalMarkup: Decimal!
  totalNetCost: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalSaleCost: Decimal!
  totalShippingCost: Decimal!
  totalUnInvoiced: Decimal!
  totalVat: Decimal!
}

type SalesOrderHeaderQLAvgType {
  deliveryCharge: Decimal!
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalCourierCost: Decimal!
  totalInvoiced: Decimal!
  totalMargin: Decimal!
  totalMarkup: Decimal!
  totalNetCost: Decimal!
  totalPrice: Decimal!
  totalProfit: Decimal!
  totalSaleCost: Decimal!
  totalShippingCost: Decimal!
  totalUnInvoiced: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfSalesOrderHeaderFeatureMapping {
  currentPage: Int!
  items: [SalesOrderHeaderFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSalesOrderHeaderResponseEmailMapping {
  currentPage: Int!
  items: [SalesOrderHeaderResponseEmailMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSalesOrderItem {
  currentPage: Int!
  items: [SalesOrderItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SalesOrderItemQLSumType {
  avgCost: Decimal!
  avgPrice: Decimal!
  qtyAllocated: Int!
  qtyDispatched: Int!
  qtyInvoiced: Int!
  qtyOrdered: Int!
  qtyOutstanding: Int!
  qtyQueued: Int!
  sortOrder: Int!
  totalUnitCost: Decimal!
  totalUnitInvoiced: Decimal!
  totalUnitMargin: Decimal!
  totalUnitMarkup: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitUnInvoiced: Decimal!
  totalUnitVat: Decimal!
  vatrate: Decimal!
}

type SalesOrderItemQLAvgType {
  avgCost: Decimal!
  avgPrice: Decimal!
  qtyAllocated: Float!
  qtyDispatched: Float!
  qtyInvoiced: Float!
  qtyOrdered: Float!
  qtyOutstanding: Float!
  qtyQueued: Float!
  sortOrder: Float!
  totalUnitCost: Decimal!
  totalUnitInvoiced: Decimal!
  totalUnitMargin: Decimal!
  totalUnitMarkup: Decimal!
  totalUnitPrice: Decimal!
  totalUnitProfit: Decimal!
  totalUnitUnInvoiced: Decimal!
  totalUnitVat: Decimal!
  vatrate: Decimal!
}

type PagedListResultOfSalesOrderItemUnit {
  currentPage: Int!
  items: [SalesOrderItemUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SalesOrderItemUnitQLSumType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
  sortOrder: Int!
}

type SalesOrderItemUnitQLAvgType {
  cost: Decimal!
  margin: Decimal!
  markup: Decimal!
  price: Decimal!
  profit: Decimal!
  sortOrder: Float!
}

type PagedListResultOfSalesOrderRequestHeader {
  currentPage: Int!
  items: [SalesOrderRequestHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SalesOrderRequestHeaderQLSumType {
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type SalesOrderRequestHeaderQLAvgType {
  exchangeRate: Decimal!
  totalCost: Decimal!
  totalPrice: Decimal!
  totalVat: Decimal!
}

type PagedListResultOfSalesOrderRequestItem {
  currentPage: Int!
  items: [SalesOrderRequestItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SalesOrderRequestItemQLSumType {
  cost: Decimal!
  price: Decimal!
  qtyRequested: Int!
  vat: Decimal!
  vatrate: Decimal!
}

type SalesOrderRequestItemQLAvgType {
  cost: Decimal!
  price: Decimal!
  qtyRequested: Float!
  vat: Decimal!
  vatrate: Decimal!
}

type PagedListResultOfSector {
  currentPage: Int!
  items: [SectorQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSic {
  currentPage: Int!
  items: [SicQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SicQLType {
  created: DateTime!
  id: Int!
  name: String
  sicCode: Int!
  sicsection: SicsectionQLType
  sicsectionId: Int!
}

type SicsectionQLType {
  created: DateTime!
  id: Int!
  name: String
  sectionCode: String
  sics(
    sortOrder: [SortOrderType]
    top: Int

    # SicSearchTyp Filter
    filter: SicSearch
  ): [SicQLType]

  #
  sicsCount: Int
}

# Sic SearchContext
input SicSearch {
  # Id
  id: [IntSearch]

  # SicCode
  sicCode: [IntSearch]

  # Name
  name: [StringSearchType]

  # SicsectionId
  sicsectionId: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # Sicsection
  sicsection: SicsectionSearch
}

# Sicsection SearchContext
input SicsectionSearch {
  # Id
  id: [IntSearch]

  # SectionCode
  sectionCode: [StringSearchType]

  # Name
  name: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in Sics
  sics: SicSearch
}

type SicQLSumType {
  sicCode: Int!
}

type SicQLAvgType {
  sicCode: Float!
}

type PagedListResultOfSicsection {
  currentPage: Int!
  items: [SicsectionQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStock {
  currentPage: Int!
  items: [StockQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockQLSumType {
  avgUnitCost: Decimal!
  avgUnitPrice: Decimal!
  lastUnitCost: Decimal!
}

type StockQLAvgType {
  avgUnitCost: Decimal!
  avgUnitPrice: Decimal!
  lastUnitCost: Decimal!
}

type PagedListResultOfStockByCategory {
  currentPage: Int!
  items: [StockByCategoryQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByCategoryQLType {
  categoryCreated: DateTime!
  categoryCreatedBy: Int
  categoryId: Int!
  categoryName: String
  categoryParentId: Int
  categorySortOrder: Int
  categoryStatusId: Int!
  categoryUnspsc: String
  manufacturerName: String
  stockCategoryId: Int!
  stockDescription: String
  stockGuid: ID!
  stockId: Long!
  stockIsEditable: Boolean!
  stockManufacturerId: Int!
  stockPartNo: String
  stockQty: Int
  stockSourceUrl: String
}

# StockByCategory SearchContext
input StockByCategorySearch {
  # StockId
  stockId: [IntSearch]

  # StockPartNo
  stockPartNo: [StringSearchType]

  # StockManufacturerId
  stockManufacturerId: [IntSearch]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # StockCategoryId
  stockCategoryId: [IntSearch]

  # CategoryName
  categoryName: [StringSearchType]

  # CategoryUnspsc
  categoryUnspsc: [StringSearchType]

  # CategoryParentId
  categoryParentId: [IntSearch]

  # CategoryId
  categoryId: [IntSearch]

  # CategorySortOrder
  categorySortOrder: [IntSearch]

  # CategoryStatusId
  categoryStatusId: [IntSearch]

  # CategoryCreated
  categoryCreated: [DateTimeSearch]

  # CategoryCreatedBy
  categoryCreatedBy: [IntSearch]

  # StockDescription
  stockDescription: [StringSearchType]

  # StockQty
  stockQty: [IntSearch]

  # StockIsEditable
  stockIsEditable: [BooleanSearch]

  # StockSourceUrl
  stockSourceUrl: [StringSearchType]

  # StockGuid
  stockGuid: [GuidSearchTypeScalarSearch]
}

type StockByCategoryQLSumType {
  categoryCreatedBy: Int!
  categorySortOrder: Int!
  stockQty: Int!
}

type StockByCategoryQLAvgType {
  categoryCreatedBy: Float!
  categorySortOrder: Float!
  stockQty: Float!
}

type PagedListResultOfStockByCustomer {
  currentPage: Int!
  items: [StockByCustomerQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByCustomerQLType {
  categoryName: String
  categoryParentId: Int
  categoryUnspsc: String
  customerId: Int!
  customerName: String
  manufacturerName: String
  stockCategoryId: Int!
  stockDescription: String
  stockGuid: ID!
  stockId: Long!
  stockIsEditable: Boolean!
  stockManufacturerId: Int!
  stockPartNo: String
  stockSourceUrl: String
  stockUnitQty: Int
}

# StockByCustomer SearchContext
input StockByCustomerSearch {
  # CustomerName
  customerName: [StringSearchType]

  # CustomerId
  customerId: [IntSearch]

  # StockId
  stockId: [IntSearch]

  # StockPartNo
  stockPartNo: [StringSearchType]

  # StockManufacturerId
  stockManufacturerId: [IntSearch]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # StockCategoryId
  stockCategoryId: [IntSearch]

  # CategoryName
  categoryName: [StringSearchType]

  # CategoryUnspsc
  categoryUnspsc: [StringSearchType]

  # CategoryParentId
  categoryParentId: [IntSearch]

  # StockDescription
  stockDescription: [StringSearchType]

  # StockUnitQty
  stockUnitQty: [IntSearch]

  # StockIsEditable
  stockIsEditable: [BooleanSearch]

  # StockSourceUrl
  stockSourceUrl: [StringSearchType]

  # StockGuid
  stockGuid: [GuidSearchTypeScalarSearch]
}

type StockByCustomerQLSumType {
  stockUnitQty: Int!
}

type StockByCustomerQLAvgType {
  stockUnitQty: Float!
}

type PagedListResultOfStockByLocation {
  currentPage: Int!
  items: [StockByLocationQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByLocationQLType {
  categoryName: String
  categoryParentId: Int
  categoryUnspsc: String
  manufacturerName: String
  stockAreaName: String
  stockCategoryId: Int!
  stockDescription: String
  stockGuid: ID!
  stockId: Long!
  stockIsEditable: Boolean!
  stockLocationName: String
  stockManufacturerId: Int!
  stockPartNo: String
  stockQty: Int
  stockSourceUrl: String
}

# StockByLocation SearchContext
input StockByLocationSearch {
  # StockLocationName
  stockLocationName: [StringSearchType]

  # StockAreaName
  stockAreaName: [StringSearchType]

  # StockId
  stockId: [IntSearch]

  # StockPartNo
  stockPartNo: [StringSearchType]

  # StockManufacturerId
  stockManufacturerId: [IntSearch]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # StockCategoryId
  stockCategoryId: [IntSearch]

  # CategoryName
  categoryName: [StringSearchType]

  # CategoryUnspsc
  categoryUnspsc: [StringSearchType]

  # CategoryParentId
  categoryParentId: [IntSearch]

  # StockDescription
  stockDescription: [StringSearchType]

  # StockQty
  stockQty: [IntSearch]

  # StockIsEditable
  stockIsEditable: [BooleanSearch]

  # StockSourceUrl
  stockSourceUrl: [StringSearchType]

  # StockGuid
  stockGuid: [GuidSearchTypeScalarSearch]
}

type StockByLocationQLSumType {
  stockQty: Int!
}

type StockByLocationQLAvgType {
  stockQty: Float!
}

type PagedListResultOfStockByLocationSummary {
  currentPage: Int!
  items: [StockByLocationSummaryQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByLocationSummaryQLType {
  id: Long!
  label: String
  value: Int
}

# StockByLocationSummary SearchContext
input StockByLocationSummarySearch {
  # Id
  id: [IntSearch]

  # Label
  label: [StringSearchType]

  # Value
  value: [IntSearch]
}

type StockByLocationSummaryQLSumType {
  value: Int!
}

type StockByLocationSummaryQLAvgType {
  value: Float!
}

type PagedListResultOfStockByPartNo {
  currentPage: Int!
  items: [StockByPartNoQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByPartNoQLType {
  categoryName: String
  categoryParentId: Int
  categoryUnspsc: String
  manufacturerName: String
  stockCategoryId: Int!
  stockDescription: String
  stockGuid: ID!
  stockId: Long!
  stockIsEditable: Boolean!
  stockManufacturerId: Int!
  stockPartNo: String
  stockQty: Int
  stockSourceUrl: String
}

# StockByPartNo SearchContext
input StockByPartNoSearch {
  # StockId
  stockId: [IntSearch]

  # StockPartNo
  stockPartNo: [StringSearchType]

  # StockManufacturerId
  stockManufacturerId: [IntSearch]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # StockCategoryId
  stockCategoryId: [IntSearch]

  # CategoryName
  categoryName: [StringSearchType]

  # CategoryUnspsc
  categoryUnspsc: [StringSearchType]

  # CategoryParentId
  categoryParentId: [IntSearch]

  # StockDescription
  stockDescription: [StringSearchType]

  # StockQty
  stockQty: [IntSearch]

  # StockIsEditable
  stockIsEditable: [BooleanSearch]

  # StockSourceUrl
  stockSourceUrl: [StringSearchType]

  # StockGuid
  stockGuid: [GuidSearchTypeScalarSearch]
}

type StockByPartNoQLSumType {
  stockQty: Int!
}

type StockByPartNoQLAvgType {
  stockQty: Float!
}

type PagedListResultOfStockBySalesPersonSummary {
  currentPage: Int!
  items: [StockBySalesPersonSummaryQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockBySalesPersonSummaryQLType {
  id: Long!
  label: String
  value: Int
}

# StockBySalesPersonSummary SearchContext
input StockBySalesPersonSummarySearch {
  # Id
  id: [IntSearch]

  # Label
  label: [StringSearchType]

  # Value
  value: [IntSearch]
}

type StockBySalesPersonSummaryQLSumType {
  value: Int!
}

type StockBySalesPersonSummaryQLAvgType {
  value: Float!
}

type PagedListResultOfStockByType {
  currentPage: Int!
  items: [StockByTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByTypeQLType {
  categoryName: String
  categoryParentId: Int
  categoryUnspsc: String
  manufacturerName: String
  stockCategoryId: Int!
  stockDescription: String
  stockGuid: ID!
  stockId: Long!
  stockIsEditable: Boolean!
  stockManufacturerId: Int!
  stockPartNo: String
  stockQty: Int
  stockSourceUrl: String
  stockTypeDescription: String
  stockTypeName: String
}

# StockByType SearchContext
input StockByTypeSearch {
  # StockTypeName
  stockTypeName: [StringSearchType]

  # StockTypeDescription
  stockTypeDescription: [StringSearchType]

  # StockId
  stockId: [IntSearch]

  # StockPartNo
  stockPartNo: [StringSearchType]

  # StockManufacturerId
  stockManufacturerId: [IntSearch]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # StockCategoryId
  stockCategoryId: [IntSearch]

  # CategoryName
  categoryName: [StringSearchType]

  # CategoryUnspsc
  categoryUnspsc: [StringSearchType]

  # CategoryParentId
  categoryParentId: [IntSearch]

  # StockDescription
  stockDescription: [StringSearchType]

  # StockQty
  stockQty: [IntSearch]

  # StockIsEditable
  stockIsEditable: [BooleanSearch]

  # StockSourceUrl
  stockSourceUrl: [StringSearchType]

  # StockGuid
  stockGuid: [GuidSearchTypeScalarSearch]
}

type StockByTypeQLSumType {
  stockQty: Int!
}

type StockByTypeQLAvgType {
  stockQty: Float!
}

type PagedListResultOfStockByTypeSummary {
  currentPage: Int!
  items: [StockByTypeSummaryQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByTypeSummaryQLType {
  id: Long!
  label: String
  value: Int
}

# StockByTypeSummary SearchContext
input StockByTypeSummarySearch {
  # Id
  id: [IntSearch]

  # Label
  label: [StringSearchType]

  # Value
  value: [IntSearch]
}

type StockByTypeSummaryQLSumType {
  value: Int!
}

type StockByTypeSummaryQLAvgType {
  value: Float!
}

type PagedListResultOfStockByUnit {
  currentPage: Int!
  items: [StockByUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockByUnitQLType {
  categoryName: String
  categoryParentId: Int
  categoryUnspsc: String
  manufacturerName: String
  stockCategoryId: Int!
  stockDescription: String
  stockGuid: ID!
  stockId: Long!
  stockIsEditable: Boolean!
  stockManufacturerId: Int!
  stockPartNo: String
  stockQty: Int!
  stockSourceUrl: String
  stockStatusName: String
  stockUnitAssetTag: String
  stockUnitCreated: DateTime!
  stockUnitGuid: ID!
  stockUnitId: Long!
  stockUnitIdRef: String
  stockUnitSerialNo: String
}

# StockByUnit SearchContext
input StockByUnitSearch {
  # StockUnitIdRef
  stockUnitIdRef: [StringSearchType]

  # StockUnitId
  stockUnitId: [IntSearch]

  # StockUnitGuid
  stockUnitGuid: [GuidSearchTypeScalarSearch]

  # StockUnitSerialNo
  stockUnitSerialNo: [StringSearchType]

  # StockUnitAssetTag
  stockUnitAssetTag: [StringSearchType]

  # StockUnitCreated
  stockUnitCreated: [DateTimeSearch]

  # StockStatusName
  stockStatusName: [StringSearchType]

  # StockId
  stockId: [IntSearch]

  # StockPartNo
  stockPartNo: [StringSearchType]

  # StockManufacturerId
  stockManufacturerId: [IntSearch]

  # ManufacturerName
  manufacturerName: [StringSearchType]

  # StockCategoryId
  stockCategoryId: [IntSearch]

  # CategoryName
  categoryName: [StringSearchType]

  # CategoryUnspsc
  categoryUnspsc: [StringSearchType]

  # CategoryParentId
  categoryParentId: [IntSearch]

  # StockDescription
  stockDescription: [StringSearchType]

  # StockQty
  stockQty: [IntSearch]

  # StockIsEditable
  stockIsEditable: [BooleanSearch]

  # StockSourceUrl
  stockSourceUrl: [StringSearchType]

  # StockGuid
  stockGuid: [GuidSearchTypeScalarSearch]
}

type StockByUnitQLSumType {
  stockQty: Int!
}

type StockByUnitQLAvgType {
  stockQty: Float!
}

type PagedListResultOfStockFeatureMapping {
  currentPage: Int!
  items: [StockFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockLocation {
  currentPage: Int!
  items: [StockLocationQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockLocationInUse {
  currentPage: Int!
  items: [StockLocationInUseQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockLocationInUseQLType {
  applicationId: Int!
  areaId: Int!
  created: DateTime!
  createdById: Int
  id: Int!
  isDeleted: Boolean!
  locationName: String
  modified: DateTime!
  modifiedById: Int
  parentStockLocationId: Int
}

# StockLocationInUse SearchContext
input StockLocationInUseSearch {
  # Id
  id: [IntSearch]

  # AreaId
  areaId: [IntSearch]

  # LocationName
  locationName: [StringSearchType]

  # ParentStockLocationId
  parentStockLocationId: [IntSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # ApplicationId
  applicationId: [IntSearch]
}

type PagedListResultOfStockMemoRecursive {
  currentPage: Int!
  items: [StockMemoRecursiveQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockMemoRecursiveQLType {
  allocatedToId: Int
  allocateToAvatarUrl: String
  allocateToEmail: String
  allocateToFullName: String
  completedByAvatarUrl: String
  completedByEmail: String
  completedByFullName: String
  completedById: Int
  completedDate: DateTime
  created: DateTime!
  createdByAvatarUrl: String
  createdByEmail: String
  createdByFullName: String
  createdById: Int
  id: Long
  isCompleted: Boolean!
  isDeleted: Boolean!
  isViewed: Boolean!
  memoLevel: Int
  memoMappingId: Long
  modified: DateTime!
  modifiedById: Int
  notes: String
  parentId: Long
  position: String
  stockId: Long!
}

# StockMemoRecursive SearchContext
input StockMemoRecursiveSearch {
  # StockId
  stockId: [IntSearch]

  # Id
  id: [IntSearch]

  # Position
  position: [StringSearchType]

  # MemoMappingId
  memoMappingId: [IntSearch]

  # ParentId
  parentId: [IntSearch]

  # Notes
  notes: [StringSearchType]

  # AllocatedToId
  allocatedToId: [IntSearch]

  # IsViewed
  isViewed: [BooleanSearch]

  # IsCompleted
  isCompleted: [BooleanSearch]

  # CompletedById
  completedById: [IntSearch]

  # CompletedDate
  completedDate: [DateTimeSearch]

  # IsDeleted
  isDeleted: [BooleanSearch]

  # Created
  created: [DateTimeSearch]

  # CreatedById
  createdById: [IntSearch]

  # Modified
  modified: [DateTimeSearch]

  # ModifiedById
  modifiedById: [IntSearch]

  # MemoLevel
  memoLevel: [IntSearch]

  # CreatedByFullName
  createdByFullName: [StringSearchType]

  # CreatedByEmail
  createdByEmail: [StringSearchType]

  # CreatedByAvatarUrl
  createdByAvatarUrl: [StringSearchType]

  # AllocateToFullName
  allocateToFullName: [StringSearchType]

  # AllocateToEmail
  allocateToEmail: [StringSearchType]

  # AllocateToAvatarUrl
  allocateToAvatarUrl: [StringSearchType]

  # CompletedByFullName
  completedByFullName: [StringSearchType]

  # CompletedByEmail
  completedByEmail: [StringSearchType]

  # CompletedByAvatarUrl
  completedByAvatarUrl: [StringSearchType]
}

type StockMemoRecursiveQLSumType {
  memoLevel: Int!
}

type StockMemoRecursiveQLAvgType {
  memoLevel: Float!
}

type PagedListResultOfStockMovement {
  currentPage: Int!
  items: [StockMovementQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockMovementQLSumType {
  qty: Int!
  unitCost: Decimal!
  unitPrice: Decimal!
}

type StockMovementQLAvgType {
  qty: Float!
  unitCost: Decimal!
  unitPrice: Decimal!
}

type PagedListResultOfStockMovementParentType {
  currentPage: Int!
  items: [StockMovementParentTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockMovementRequestHeader {
  currentPage: Int!
  items: [StockMovementRequestHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockMovementRequestItem {
  currentPage: Int!
  items: [StockMovementRequestItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockMovementTransaction {
  currentPage: Int!
  items: [StockMovementTransactionQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockMovementType {
  currentPage: Int!
  items: [StockMovementTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockTakeAdjustmentCode {
  currentPage: Int!
  items: [StockTakeAdjustmentCodeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockTakeAdjustmentCodeQLSumType {
  value: Int!
}

type StockTakeAdjustmentCodeQLAvgType {
  value: Float!
}

type PagedListResultOfStockTakeDiscrepancy {
  currentPage: Int!
  items: [StockTakeDiscrepancyQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockTakeDiscrepancyQLSumType {
  discrepancyValue: Int!
}

type StockTakeDiscrepancyQLAvgType {
  discrepancyValue: Float!
}

type PagedListResultOfStockTakeHeader {
  currentPage: Int!
  items: [StockTakeHeaderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockTakeItem {
  currentPage: Int!
  items: [StockTakeItemQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockTakeItemQLSumType {
  qtyAvailable: Int!
}

type StockTakeItemQLAvgType {
  qtyAvailable: Float!
}

type PagedListResultOfStockTally {
  currentPage: Int!
  items: [StockTallyQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockTallyQLSumType {
  quantity: Int!
}

type StockTallyQLAvgType {
  quantity: Float!
}

type PagedListResultOfStockThreshold {
  currentPage: Int!
  items: [StockThresholdQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockThresholdQLSumType {
  qty: Int!
}

type StockThresholdQLAvgType {
  qty: Float!
}

type PagedListResultOfStockType {
  currentPage: Int!
  items: [StockTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockUnit {
  currentPage: Int!
  items: [StockUnitQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockUnitQLSumType {
  qty: Int!
  unitCost: Decimal!
  unitPrice: Decimal!
}

type StockUnitQLAvgType {
  qty: Float!
  unitCost: Decimal!
  unitPrice: Decimal!
}

type PagedListResultOfStockUnitAsset {
  currentPage: Int!
  items: [StockUnitAssetQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockUnitAttribute {
  currentPage: Int!
  items: [StockUnitAttributeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockUnitAttributeType {
  currentPage: Int!
  items: [StockUnitAttributeTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockUnitGroup {
  currentPage: Int!
  items: [StockUnitGroupQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StockUnitGroupQLSumType {
  qtyAvailable: Int!
}

type StockUnitGroupQLAvgType {
  qtyAvailable: Float!
}

type PagedListResultOfStockUnitStatus {
  currentPage: Int!
  items: [StockUnitStatusQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStockUnitTransaction {
  currentPage: Int!
  items: [StockUnitTransactionQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStormDeliveryCharge {
  currentPage: Int!
  items: [StormDeliveryChargeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StormDeliveryChargeQLSumType {
  chargeRate: Decimal!
  minimumSpend: Decimal!
}

type StormDeliveryChargeQLAvgType {
  chargeRate: Decimal!
  minimumSpend: Decimal!
}

type PagedListResultOfStormError {
  currentPage: Int!
  items: [StormErrorQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StormErrorQLType {
  code: String
  created: DateTime!
  id: Int!
  message: String
  stormErrorType: StormErrorTypeQLType
  stormErrorTypeId: Int!
}

type StormErrorTypeQLType {
  created: DateTime!
  id: Int!
  name: String
  stormErrors(
    sortOrder: [SortOrderType]
    top: Int

    # StormErrorSearchTyp Filter
    filter: StormErrorSearch
  ): [StormErrorQLType]

  #
  stormErrorsCount: Int
}

# StormError SearchContext
input StormErrorSearch {
  # Id
  id: [IntSearch]

  # Code
  code: [StringSearchType]

  # Message
  message: [StringSearchType]

  # StormErrorTypeId
  stormErrorTypeId: [IntSearch]

  # Created
  created: [DateTimeSearch]

  # StormErrorType
  stormErrorType: StormErrorTypeSearch
}

# StormErrorType SearchContext
input StormErrorTypeSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # Searches for matches in StormErrors
  stormErrors: StormErrorSearch
}

type PagedListResultOfStormErrorType {
  currentPage: Int!
  items: [StormErrorTypeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStormStatus {
  currentPage: Int!
  items: [StormStatusQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfStormStatusMapping {
  currentPage: Int!
  items: [StormStatusMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type StormStatusMappingQLSumType {
  sortOrder: Int!
}

type StormStatusMappingQLAvgType {
  sortOrder: Float!
}

type PagedListResultOfSupplier {
  currentPage: Int!
  items: [SupplierQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSupplierContactMapping {
  currentPage: Int!
  items: [SupplierContactMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSupplierDeliveryCharge {
  currentPage: Int!
  items: [SupplierDeliveryChargeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SupplierDeliveryChargeQLSumType {
  chargeRate: Decimal!
  minimumSpend: Decimal!
}

type SupplierDeliveryChargeQLAvgType {
  chargeRate: Decimal!
  minimumSpend: Decimal!
}

type PagedListResultOfSupplierFeatureMapping {
  currentPage: Int!
  items: [SupplierFeatureMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSupplierProductsPurchased {
  currentPage: Int!
  items: [SupplierProductsPurchasedQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SupplierProductsPurchasedQLType {
  created: DateTime!
  id: Long!
  manufacturer: String
  name: String
  partNo: String
  productDescription: String
  qtyOutstanding: Int
  unitCost: Decimal!
}

# SupplierProductsPurchased SearchContext
input SupplierProductsPurchasedSearch {
  # Id
  id: [IntSearch]

  # Name
  name: [StringSearchType]

  # Created
  created: [DateTimeSearch]

  # QtyOutstanding
  qtyOutstanding: [IntSearch]

  # UnitCost
  unitCost: [FloatSearch]

  # PartNo
  partNo: [StringSearchType]

  # ProductDescription
  productDescription: [StringSearchType]

  # Manufacturer
  manufacturer: [StringSearchType]
}

type SupplierProductsPurchasedQLSumType {
  qtyOutstanding: Int!
  unitCost: Decimal!
}

type SupplierProductsPurchasedQLAvgType {
  qtyOutstanding: Float!
  unitCost: Decimal!
}

type PagedListResultOfSupplierProvider {
  currentPage: Int!
  items: [SupplierProviderQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSupplierProviderMapping {
  currentPage: Int!
  items: [SupplierProviderMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfSupplierStockAndCost {
  currentPage: Int!
  items: [SupplierStockAndCostQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type SupplierStockAndCostQLSumType {
  cost: Decimal!
  stock: Int!
}

type SupplierStockAndCostQLAvgType {
  cost: Decimal!
  stock: Float!
}

type PagedListResultOfTableName {
  currentPage: Int!
  items: [TableNameQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfTeam {
  currentPage: Int!
  items: [TeamQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type TeamQLSumType {
  teamTarget: Decimal!
}

type TeamQLAvgType {
  teamTarget: Decimal!
}

type PagedListResultOfUnitOfMeasurement {
  currentPage: Int!
  items: [UnitOfMeasurementQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfUserProfile {
  currentPage: Int!
  items: [UserProfileQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfUserProfileDepartmentMapping {
  currentPage: Int!
  items: [UserProfileDepartmentMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfUserProfileTarget {
  currentPage: Int!
  items: [UserProfileTargetQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type UserProfileTargetQLSumType {
  target: Decimal!
}

type UserProfileTargetQLAvgType {
  target: Decimal!
}

type PagedListResultOfUserProfileTeamMapping {
  currentPage: Int!
  items: [UserProfileTeamMappingQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfVatcode {
  currentPage: Int!
  items: [VatcodeQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type VatcodeQLSumType {
  rate: Decimal!
}

type VatcodeQLAvgType {
  rate: Decimal!
}

type PagedListResultOfWarranty {
  currentPage: Int!
  items: [WarrantyQLType]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type PagedListResultOfContactAutocompleteOutputModel {
  currentPage: Int!
  items: [ContactAutocompleteOutputModel]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type ContactAutocompleteOutputModel {
  email: String
  name: String
}

input ContactAutocompleteInputModel {
  includeExternalUsers: Boolean
  keyword: String!
  pageSize: Int
  pageNumber: Int
}

type EmailOutputModel {
  bcc: [MailAddressModel]
  body: String
  cc: [MailAddressModel]
  from: MailAddressModel
  isBodyHtml: Boolean
  priority: MailPriorityEnumQLType
  subject: String
  to: [MailAddressModel]
}

enum MailPriorityEnumQLType {
  NORMAL
  LOW
  HIGH
}

type MailAddressModel {
  displayName: String
  email: String
}

input EmailInputModel {
  id: Long
  subject: String
  extraDescription: String
  priority: MailPriorityEnumQLType
  cc: [EmailAddressModelInputModel]
  to: [EmailAddressModelInputModel]
}

input EmailAddressModelInputModel {
  email: String!
  displayName: String
}

type StockSearchOutputModel {
  categories: [StockSearchCategoryOutputModel]
  currentPage: Int
  manufacturers: [StockSearchManufacturerOutputModel]
  pageCount: Int
  pageSize: Int
  products: [StockSearchProductOutputModel]
  suppliers: [StockSearchSupplierOutputModel]
  totalCount: Int
}

type StockSearchManufacturerOutputModel {
  id: String
  name: String
}

type StockSearchCategoryOutputModel {
  id: String
  name: String
}

type StockSearchProductOutputModel {
  bestSupplier: StockSearchProductSupplierAvailabilityOutputModel
  category: String
  extendedSpecUrl: String
  id: String
  mainImageUrl: String
  manufacturer: StockSearchManufacturerOutputModel
  manufacturerPartNo: String
  mediumImageUrl: String
  shortDescription: String
  stockInSAS: [Long]
  suppliers: [StockSearchProductSupplierAvailabilityOutputModel]
  thumbImageUrl: String
  title: String
  uNSPSC: String
}

type StockSearchProductSupplierAvailabilityOutputModel {
  cost: Decimal
  costLevel: SupplierStockResultTypeEnumQLType
  currencyCode: String
  deliveryCharge: Decimal
  id: String
  name: String
  stock: Int
  supplierId: String
  supplierIdInSAS: Int
  supplierPartNo: String
  supplierRef: String
  totalCost: Decimal
  website: String
}

enum SupplierStockResultTypeEnumQLType {
  UNKNOWN
  LOWEST_COST
  LOWEST_COST_WITH_STOCK
  HIGHEST_COST
}

type StockSearchSupplierOutputModel {
  id: String
  name: String
}

input StockSearchInputModel {
  query: String!
  pageNumber: Int
  pageSize: Int
  categories: [String]
  manufacturers: [String]
  suppliers: [String]
  searchId: ID
  inStock: Boolean
}

input StockLiveStockInputModel {
  stockId: Long
  partNumber: String
  checkIfAvailableInSAS: Boolean
}

type AddressesSearchOutputModel {
  addresses: [AddressSearchOutputModel]
  errors: [ErrorOutputModel]
}

type AddressSearchOutputModel {
  description: String
  hasFullAddressOutput: Boolean
  highlightDescription: String
  highlightName: String
  name: String
  reference: String
}

type ErrorOutputModel {
  code: String
  message: String
}

input AddressSearchInputModel {
  query: String
  reference: String
  pageSize: Int
  country: String
}

type AddressGetOutputModel {
  addresses: [AddressOutputModel]
  errors: [ErrorOutputModel]
}

type AddressOutputModel {
  adminAreaCode: String
  adminAreaName: String
  barcode: String
  block: String
  buildingName: String
  buildingNumber: String
  city: String
  company: String
  countryIso2: String
  countryIso3: String
  countryIsoNumber: Int
  countryName: String
  department: String
  district: String
  domesticId: String
  id: String
  language: String
  languageAlternatives: String
  line1: String
  line2: String
  line3: String
  line4: String
  line5: String
  neighbourhood: String
  pOBoxNumber: String
  postalCode: String
  province: String
  provinceCode: String
  provinceName: String
  secondaryStreet: String
  street: String
  subBuilding: String
}

input AddressGetInputModel {
  reference: String!
  isMockData: Boolean
}

input MemoTypeInputModel {
  memoType: MemoTypeEnumQLType
  transactionId: Long!
}

enum MemoTypeEnumQLType {
  NONE
  ADDRESS
  CONTACT
  CUSTOMER
  CUSTOMER_RETURN_HEADER
  CUSTOMER_RETURN_ITEM_UNIT
  CUSTOMER_RETURN_REQUEST_ITEM_UNIT
  DISPATCH_NOTE_HEADER
  MEMO
  PROOF_OF_DELIVERY
  PURCHASE_ORDER_HEADER
  STOCK
  QUOTE_HEADER
  SUPPLIER
  STOCK_UNIT
  COURIER
  CUSTOMER_CREDIT_NOTE_HEADER
  CUSTOMER_INVOICE_HEADER
  CUSTOMER_RETURN_REQUEST_HEADER
  GOODS_RECEIVED_NOTE_HEADER
  INCIDENTAL
  BUILD_REQUEST_HEADER
  BUILD_REQUEST_ITEM_UNIT
  NON_ORDERED_GOODS_HEADER
  SALES_ORDER_HEADER
  STOCK_MOVEMENT
  STOCK_MOVEMENT_REQUEST_HEADER
  STOCK_TAKE_HEADER
  STOCK_UNIT_ASSET
}

type PagedListResultOfTransactionOutputModel {
  currentPage: Int!
  items: [TransactionOutputModel]
  pageCount: Int!
  pageSize: Int!
  totalCount: Int!
}

type TransactionOutputModel {
  currencyLocale: String
  customer: CustomerQLType
  date: DateTime
  idRef: String
  reference: String
  status: StormStatusQLType
  totalPrice: Decimal
}

input TransactionHeaderInputModel {
  customerIds: [Int]!
  transactionType: OnePortalTransactionTypeEnumQLType
  dateFrom: DateTime
  dateTo: DateTime
  status: [StormStatusTypeEnumQLType]
  query: [String]
  pageSize: Int
  pageNumber: Int
  sortOrder: TransactionHeaderSortOrderInputModel
}

enum OnePortalTransactionTypeEnumQLType {
  NONE
  QUOTE
  SALES_ORDER
  INVOICE
  CREDIT_NOTE
  DISPATCH_NOTE
  RETURN
  STOCK
}

enum StormStatusTypeEnumQLType {
  NONE
  OPN
  PAR
  QUE
  DLV
  DIS
  CAN
  REQ
  CRD
  ORD
  HLD
  PRO
  ACT
  LEA
  REC
  INA
  RES
  COD
  COM
  INP
  DEC
  LOS
  REP
  DRA
  RET
  MAP
  PRF
}

input TransactionHeaderSortOrderInputModel {
  field: OnePortalTransactionOrderTypeEnumQLType
  direction: SortDirectionEnumEnumQLType
}

enum OnePortalTransactionOrderTypeEnumQLType {
  NONE
  ID
  DATE
  REFERENCE
  STATUS_CODE
  TOTAL_PRICE
  CUSTOMER_NAME
}

enum SortDirectionEnumEnumQLType {
  ASC
  DESC
}

type PluginSearchOutputModel {
  result: PluginSearchItemOutputModel
  scope: PluginTypeEnumQLType
  totalCount: Int
  totalSize: Int
}

enum PluginTypeEnumQLType {
  NONE
  PURCHASE_ORDER
  DISPATCH_NOTE
  STOCK
  STOCK_UNIT_ASSET
  QUOTE
  SALES_ORDER
  INVOICE
}

type PluginSearchItemOutputModel {
  headers: [PluginSearchItemHeaderOutputModel]
  items: [PluginSearchItemValueOutputModel]
}

type PluginSearchItemHeaderOutputModel {
  align: String
  isSortable: Boolean
  key: String
  label: String
  valueType: String
}

type PluginSearchItemValueOutputModel {
  id: String
  value1: String
  value2: String
  value3: String
  value4: String
}

input SearchPluginInputModel {
  size: Int
  search: String!
  scope: PluginTypeEnumQLType
}

input RFQEmailInputModel {
  itemGuids: [ID]
  supplierGuid: ID
  id: Long
  subject: String
  extraDescription: String
  priority: MailPriorityEnumQLType
  cc: [EmailAddressModelInputModel]
  to: [EmailAddressModelInputModel]
}

type SageLedgerAccountInfoOutputModel {
  availableToSpend: Decimal
  balance: Decimal
  creditLimit: Decimal
  overCreditLimit: Boolean
}

input SageSalesLedgerInputModel {
  accountNumber: String!
  mockDataEnabled: Boolean
}

input StockUnitSearchInputModel {
  serialNo: String
  assetTag: String
  transactionType: TransactionBookingTypeEnumQLType
  transactionId: Long
  take: Int
  mockDataEnabled: Boolean
}

enum TransactionBookingTypeEnumQLType {
  NONE
  SALES_ORDER_ITEM_ID
  PURCHASE_ORDER_ITEM_ID
  DISPATCH_NOTE_ITEM_ID
  NON_ORDER_ITEM_ID
  CUSTOMER_RETURN_ITEM_ID
  GOODS_RECEIVED_NOTE_ITEM_ID
  BUILD_REQUEST_ITEM_ID
}

enum TableNameTypeEnumQLType {
  UNKNOWN
  CATEGORY
  CONTACT
  CUSTOMER
  CUSTOMER_PURCHASE_ORDER_REQUEST_HEADER
  CUSTOMER_RETURN_HEADER
  CUSTOMER_RETURN_ITEM
  CUSTOMER_RETURN_REQUEST_HEADER
  DISPATCH_NOTE_HEADER
  PURCHASE_ORDER_HEADER
  QUOTE_HEADER
  SALES_ORDER_HEADER
  SALES_ORDER_REQUEST_HEADER
  STOCK_MOVEMENT_REQUEST_HEADER
  ADDRESS
  CUSTOMER_RETURN_ITEM_UNIT
  CUSTOMER_RETURN_REQUEST_ITEM_UNIT
  PROOF_OF_DELIVERY
  STOCK
  VAT_CODE
  SUPPLIER
  INCIDENTAL
  STOCK_UNIT
  NON_ORDERED_GOODS_HEADER
  GOODS_RECEIVED_NOTE_HEADER
  COURIER
  CUSTOMER_CREDIT_NOTE_HEADER
  CUSTOMER_INVOICE_HEADER
  BUILD_REQUEST_HEADER
  BUILD_REQUEST_ITEM_UNIT
  STOCK_MOVEMENT
  STOCK_MOVEMENT_REQUEST
  STOCK_TAKE_HEADER
  STOCK_UNIT_ASSET
  PRO_FORMA_INVOICE_HEADER
  ASSET_ROLL_HEADER
  SHIPPING_NOTE_HEADER
}

type TimelineOutputModel {
  customerId: Int
  date: DateTime
  direction: DirectionTypeEnumQLType
  guid: ID
  id: Long
  idRef: String
  reference: [String]
  status: String
  transactionName: String
  type: TimelineTypeEnumQLType
}

enum TimelineTypeEnumQLType {
  NONE
  QUOTE
  SALES_ORDER
  PURCHASE_ORDER
  DISPATCH_NOTE
  INVOICE
  CREDIT_NOTE
  BUILD_REQUEST
  WAREHOUSE
  BUILDROOM
  STOCK_UNIT
}

enum DirectionTypeEnumQLType {
  UNKNOWN
  IN
  OUT
}

input TimelineInputModel {
  guid: ID!
  type: TimelineTypeEnumQLType
  mockDataEnabled: Boolean
}

type WorkflowOutputModel {
  oK: Boolean
  schemeCode: String
  workflowID: String
}

input WorkflowStartInputModel {
  schemeCode: String!
  workflowID: String!
  parameters: _Any
}

scalar _Any

input WorkflowCompleteInputModel {
  schemeCode: String
  workflowID: String!
  result: String
  additionalInformation: String
  parameters: _Any
}

type WorkflowListOutputModel {
  oK: Boolean
  schemeCode: String
  workflowID: String
  workflows: [WorkflowDescriptor]
}

type WorkflowDescriptor {
  createDate: DateTime
  createdBy: String
  schemeCode: String
  state: String
  stormRef: String
  workflowId: String
}

input WorkflowListInputModel {
  schemeCode: String
  state: String
  createdBy: String
}

type WorkflowDetailsOutputModel {
  additionalInfo: String
  approvers: [String]
  context: String
  createDate: DateTime
  createdBy: String
  oK: Boolean
  schemeCode: String
  stormRef: String
  workflowID: String
}

input WorkflowInputModel {
  schemeCode: String
  workflowID: String
}

input WorkflowCancelInputModel {
  workflowID: String!
}

input WorkflowEmailInputModel {
  schemeCode: String!
  workflowID: String
  emailType: String
  from: String
  subject: String
  recipients: [String]
  parameters: _Any
}

input WorkflowUserResponseInputModel {
  workflowID: String!
  parameters: _Any!
}

type SASMutations {
  addressManager_AddOrUpdate(
    input: AddressInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): AddressQLType

  # Auth: app-buildroom addAssetRoll
  assetRollManager_Create(
    input: AssetRollHeaderCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): AssetRollHeaderQLType

  # Auth: app-buildroom addAssetRoll
  assetRollManager_CreateItem(
    input: AssetRollItemCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): AssetRollItemQLType

  # Auth: app-buildroom editAssetRoll
  assetRollManager_Update(
    input: AssetRollHeaderUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): AssetRollHeaderQLType

  # Auth: app-buildroom editAssetRoll
  assetRollManager_UpdateItem(
    input: AssetRollItemUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): AssetRollItemQLType

  # Auth: app-buildroom editBuildRequestAuth: app-sales editBuildRequest
  buildRequestManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): BuildRequestHeaderQLType

  # Auth: app-sales editBuildRequest
  buildRequestManager_ConvertSalesOrder(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): BuildRequestHeaderQLType

  # Auth: app-buildroom addBuildRequestAuth: app-sales addBuildRequest
  buildRequestManager_Create(
    input: BuildRequestHeaderCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): BuildRequestHeaderQLType

  # Auth: app-buildroom addBuildRequestAuth: app-sales addBuildRequest
  buildRequestManager_CreateItem(
    input: BuildRequestItemCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): BuildRequestItemQLType

  # Auth: app-sales editBuildRequestAuth: app-buildroom editBuildRequest
  buildRequestManager_Delete(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-buildroom editBuildRequestAuth: app-sales editBuildRequest
  buildRequestManager_DeleteItem(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-buildroom editBuildRequestAuth: app-sales editBuildRequest
  buildRequestManager_Update(
    input: BuildRequestHeaderUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): BuildRequestHeaderQLType

  # Auth: app-sales editBuildRequestAuth: app-buildroom editBuildRequest
  buildRequestManager_UpdateItem(
    input: BuildRequestItemUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): BuildRequestItemQLType
  categoryManager_Create(
    input: CategoryCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): CategoryQLType
  categoryManager_SetIsAuthorised(
    categoryId: Int!
    isAuthorised: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean
  categoryManager_Update(
    input: CategoryUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): CategoryQLType

  # Auth: app-sales editContact
  contactManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ContactQLType

  # Auth: app-sales createContact
  contactManager_Create(
    input: ContactCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ContactQLType

  # Auth: app-sales editContact
  contactManager_Delete(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales editContact
  contactManager_LinkSuppliers(
    input: ContactSupplierLinkInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ContactQLType

  # Auth: app-sales editContact
  contactManager_Update(
    input: ContactUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ContactQLType

  # Auth: app-sales editContact
  contactManager_UpdateCustomerMapping(
    input: CustomerContactMappingInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ContactQLType

  # Auth: app-sales EditCustomer
  customerManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): CustomerQLType

  # Auth: app-sales CreateCustomer
  customerManager_Create(
    input: CustomerCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): CustomerQLType

  # Auth: app-sales EditCustomer
  customerManager_Delete(
    id: Int!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales EditCustomer
  customerManager_Update(
    input: CustomerUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): CustomerQLType

  # Auth: app-warehouse CreateDispatchNoteAuth: app-sales CreateDispatchNote
  dispatchNoteManager_Booking(
    input: DispatchNoteBookingInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): DispatchNoteHeaderQLType

  # Auth: app-sales EditDispatchNoteAuth: app-warehouse EditDispatchNote
  dispatchNoteManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): DispatchNoteHeaderQLType

  # Auth: app-sales CreateDispatchNote
  dispatchNoteManager_ConvertSalesOrder(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): DispatchNoteHeaderQLType

  # Auth: app-warehouse EditDispatchNoteAuth: app-sales EditDispatchNote
  dispatchNoteManager_Delete(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse EditDispatchNoteAuth: app-sales EditDispatchNote
  dispatchNoteManager_DeleteItem(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse ViewDispatchNoteAuth: app-sales ViewDispatchNote
  dispatchNoteManager_Email(
    input: EmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-sales ViewDispatchNoteAuth: app-warehouse ViewDispatchNote
  dispatchNoteManager_Export(
    dispatchNoteHeader: DispatchNoteHeaderSearch
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-warehouse ViewDispatchNoteAuth: app-sales ViewDispatchNote
  dispatchNoteManager_Print(
    input: PrintInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse ViewDispatchNoteAuth: app-sales ViewDispatchNote
  dispatchNoteManager_SendEmail(
    input: EmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-warehouse WDNA
  dispatchNoteManager_SetAllowBulkBookOut(
    dispatchNoteItemID: Long!
    allowBulkBookOut: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse EditDispatchNoteAuth: app-sales EditDispatchNote
  dispatchNoteManager_Update(
    input: DispatchNoteHeaderUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): DispatchNoteHeaderQLType

  # Auth: app-warehouse EditDispatchNote
  dispatchNoteManager_UpdateItem(
    input: DispatchNoteItemUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): DispatchNoteItemQLType

  # Auth: app-warehouse WGRNE
  goodsReceivedNoteManager_Booking(
    input: GoodsReceivedNoteBookingInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): GoodsReceivedNoteHeaderQLType

  # Auth: app-warehouse WGRNE
  goodsReceivedNoteManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): GoodsReceivedNoteHeaderQLType

  # Auth: app-warehouse WGRNC
  goodsReceivedNoteManager_ConvertCustomerReturnRequest(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): GoodsReceivedNoteHeaderQLType

  # Auth: app-warehouse WGRNC
  goodsReceivedNoteManager_ConvertNonOrderedGoods(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): GoodsReceivedNoteHeaderQLType

  # Auth: app-warehouse WGRNC
  goodsReceivedNoteManager_ConvertPurchaseOrder(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): GoodsReceivedNoteHeaderQLType

  # Auth: app-warehouse WGRNE
  goodsReceivedNoteManager_Delete(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse WGRNV
  goodsReceivedNoteManager_Export(
    goodsReceivedNoteHeader: GoodsReceivedNoteHeaderSearch
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-warehouse WGRNV
  goodsReceivedNoteManager_Print(
    input: PrintInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse WGRNV
  goodsReceivedNoteManager_SendEmail(
    input: EmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-warehouse WGRNA
  goodsReceivedNoteManager_SetAllowBulkBookIn(
    goodsReceivedNoteItemID: Long!
    allowBulkBookIn: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse WGRNE
  goodsReceivedNoteManager_Update(
    input: GoodsReceivedNoteHeaderInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): GoodsReceivedNoteHeaderQLType

  # Auth: app-warehouse WGRNE
  goodsReceivedNoteManager_UpdateItem(
    input: GoodsReceivedNoteItemInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): GoodsReceivedNoteItemQLType
  manufacturerManager_Create(
    input: ManufacturerCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ManufacturerQLType
  manufacturerManager_SetIsAuthorised(
    manufacturerId: Int!
    isAuthorised: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean
  manufacturerManager_Update(
    input: ManufacturerUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ManufacturerQLType
  memoManager_AddOrUpdateMemo(
    input: MemoInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): MemoQLType
  memoManager_DeleteMemo(
    input: MemoDeleteInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean
  memoManager_UpdateCompletion(
    input: MemoCompletionInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): MemoQLType
  proformaInvoiceManager_ConvertQuote(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ProFormaInvoiceHeaderQLType
  proformaInvoiceManager_ConvertSalesOrder(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ProFormaInvoiceHeaderQLType
  purchaseOrderManager_AddOrUpdate(
    input: PurchaseOrderInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderHeaderQLType
  purchaseOrderManager_AddOrUpdateItem(
    input: PurchaseOrderItemInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderItemQLType

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderHeaderQLType
  purchaseOrderManager_ConvertSalesOrder(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderHeaderQLType

  # Auth: app-sales createPurchaseOrder
  purchaseOrderManager_Create(
    input: PurchaseOrderCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderHeaderQLType

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_CreateItem(
    input: PurchaseOrderItemCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderItemQLType

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_Delete(
    input: DeleteInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_DeleteItem(
    input: DeleteInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse WPOV
  purchaseOrderManager_Export(
    purchaseOrderHeader: PurchaseOrderHeaderSearch
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel
  purchaseOrderManager_Request(
    id: Int!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderHeaderQLType

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_SetIsAuthorised(
    id: Long!
    isAuthorised: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean
  purchaseOrderManager_SetIsAuthorised_2(
    salesOrderHeaderId: Long!
    isAuthorised: Boolean!
    mockDataEnabled: Boolean = false

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_SetIsDisputed(
    id: Long!
    isDisputed: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_Update(
    input: PurchaseOrderUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderHeaderQLType

  # Auth: app-sales editPurchaseOrder
  purchaseOrderManager_UpdateItem(
    input: PurchaseOrderItemUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderItemQLType
  purchaseOrderManager_UpdateItemPosition(
    input: ItemPositionInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PurchaseOrderHeaderQLType

  # Auth: app-sales SQUE
  quoteManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteHeaderQLType

  # Auth: app-sales SQUC
  quoteManager_Create(
    input: QuoteCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteHeaderQLType

  # Auth: app-sales SQUE
  quoteManager_CreateItem(
    input: QuoteItemCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteItemQLType

  # Auth: app-sales SQUE
  quoteManager_Delete(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales SQUE
  quoteManager_DeleteItem(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales SQUE
  quoteManager_Duplicate(
    input: DuplicateHeaderInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteHeaderQLType

  # Auth: app-sales SQUV
  quoteManager_Export(
    quoteHeader: QuoteHeaderSearch
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-sales SQUE
  quoteManager_Margin(
    input: MarginInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteHeaderQLType

  # Auth: app-sales SQUE
  quoteManager_MarginItem(
    input: MarginInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteItemQLType

  # Auth: app-sales SQUE
  quoteManager_Markup(
    input: MarkupInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteHeaderQLType

  # Auth: app-sales SQUE
  quoteManager_MarkupItem(
    input: MarkupInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteItemQLType

  # Auth: app-sales SQUE
  quoteManager_Merge(
    input: MergeHeaderInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteHeaderQLType

  # Auth: app-sales SQUE
  quoteManager_SendEmail(
    input: EmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-sales SQUV
  quoteManager_SendRFQEmail(
    input: RFQEmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-sales SQUE
  quoteManager_SetIsAuthorised(
    quoteId: Long!
    isAuthorised: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales SQUE
  quoteManager_Update(
    input: QuoteUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteHeaderQLType

  # Auth: app-sales SQUE
  quoteManager_UpdateItem(
    input: QuoteItemUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteItemQLType

  # Auth: app-sales SQUE
  quoteManager_UpdateItemPosition(
    input: ItemPositionInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): QuoteItemQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_Convert(
    input: ConvertInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-sales SSOC
  salesOrderManager_Create(
    input: SalesOrderCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_CreateItem(
    input: SalesOrderItemCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderItemQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_Delete(
    input: DeleteInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales editSalesOrder
  salesOrderManager_DeleteItem(
    input: DeleteInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales editSalesOrder
  salesOrderManager_Duplicate(
    input: DuplicateHeaderInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_DuplicateItem(
    input: SalesOrderItemDuplicateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderItemQLType

  # Auth: app-warehouse viewSalesOrder
  salesOrderManager_Export(
    salesOrderHeader: SalesOrderHeaderSearch
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-sales editSalesOrder
  salesOrderManager_Margin(
    input: MarginInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_MarginItem(
    input: MarginInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderItemQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_Markup(
    input: MarkupInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_MarkupItem(
    input: MarkupInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderItemQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_Merge(
    input: MergeHeaderInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-warehouse viewSalesOrder
  salesOrderManager_SendEmail(
    input: EmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-sales viewSalesOrder
  salesOrderManager_SendRFQEmail(
    input: RFQEmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-sales SSOA
  salesOrderManager_SetIsAuthorised(
    salesOrderHeaderId: Long!
    isAuthorised: Boolean!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-sales editSalesOrder
  salesOrderManager_Update(
    input: SalesOrderUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderHeaderQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_UpdateItem(
    input: SalesOrderItemUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderItemQLType

  # Auth: app-sales editSalesOrder
  salesOrderManager_UpdateItemPosition(
    input: ItemPositionInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SalesOrderItemQLType
  stockManager_AddOrUpdateStock(
    input: StockInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockQLType
  stockManager_AddStockTake(
    input: StockTakeInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockTakeOutputModel
  stockManager_CancelStockMovementRequest(
    input: CancelStockMovementRequestInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean
  stockManager_Export(
    stock: StockSearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel
  stockManager_ExportByCategory(
    stockByCategory: StockByCategorySearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel
  stockManager_ExportByCustomer(
    stockByCustomer: StockByCustomerSearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel
  stockManager_ExportByLocation(
    stockByLocation: StockByLocationSearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel
  stockManager_ExportByPartNo(
    stockByPartNo: StockByPartNoSearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel
  stockManager_ExportByType(
    stockByType: StockByTypeSearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-warehouse WGRNE
  stockMovementRequestManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockMovementRequestHeaderQLType

  # Auth: app-warehouse WSMRC
  stockMovementRequestManager_Create(
    input: StockMovementRequestCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockMovementRequestHeaderQLType

  # Auth: app-warehouse WGRNE
  stockMovementRequestManager_Delete(
    id: Long!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse WGRNV
  stockMovementRequestManager_Email(
    input: EmailInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): EmailOutputModel

  # Auth: app-warehouse WGRNV
  stockMovementRequestManager_Export(
    stockMovementRequest: StockMovementRequestHeaderSearch
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = EXCEL_LIST

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-warehouse WGRNV
  stockMovementRequestManager_Print(
    input: PrintInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse WGRNE
  stockMovementRequestManager_Update(
    input: StockMovementRequestUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockMovementRequestHeaderQLType

  # Auth: app-warehouse WGRNE
  stockMovementRequestManager_UpdateItem(
    input: StockMovementRequestItemUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockMovementRequestItemQLType

  # Auth: app-warehouse WSUE
  stockUnitManager_Booking(
    input: StockUnitBookingInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockUnitQLType

  # Auth: app-warehouse WGRNV
  stockUnitManager_Export(
    stockUnitSearch: StockUnitSearch
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel
    exportType: ExportTypeEnumQLType = PDF

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel
  stockUnitManager_ExportLabel(
    stockUnit: StockUnitSearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-warehouse WGRNV
  stockUnitManager_ExportUnitList(
    stockByUnitSearch: StockByUnitSearch!
    pageSize: Int = 10
    pageNumber: Int = 1
    sortOrder: SortOrderModelInputModel

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): ExportOutputModel

  # Auth: app-warehouse WSUV
  stockUnitManager_Print(
    input: PrintInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean

  # Auth: app-warehouse WSUE
  stockUnitManager_Unlink(
    input: StockUnitUnlinkInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockUnitQLType

  # Auth: app-warehouse WSUE
  stockUnitManager_Update(
    input: StockUnitUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): StockUnitQLType
  supplierManager_ChangeStatus(
    input: StatusInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SupplierQLType
  supplierManager_Create(
    input: SupplierCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SupplierQLType
  supplierManager_Delete(
    id: Int!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): Boolean
  supplierManager_Update(
    input: SupplierUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SupplierQLType
  supplierStockAndCostManager_Create(
    input: SupplierStockAndCostCreateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SupplierStockAndCostQLType
  supplierStockAndCostManager_Refresh(
    id: Int!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SupplierStockAndCostQLType
  supplierStockAndCostManager_Update(
    input: SupplierStockAndCostUpdateInputModel!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): SupplierStockAndCostQLType
}

input AddressInputModel {
  id: Int
  addressTypeId: AddressesTypeEnumQLType
  reference: String
  companyName: String
  address1: String
  address2: String
  address3: String
  address4: String
  city: String
  county: String
  postCode: String
  phoneNumber: String
  extension: String
  faxNumber: String
  countryId: Int
  vatcodeId: Int
  specialInstructions: String
  isDeleted: Boolean
  memoMappingId: Long
  applicationId: ApplicationTypeEnumQLType
  mockDataEnabled: Boolean
}

enum AddressesTypeEnumQLType {
  UNKNOWN
  CUSTOMER
  CONTACT
  SUPPLIER
  DISPATCH
  REQUESTED_DISPATCH
  PURCHASE_ORDER
  CUSTOMER_RETURN_COLLECTION
  REQUESTED_CUSTOMER_RETURN_COLLECTION
  SALES_ORDER_REQUEST
  PURCHASE_ORDER_REQUEST
}

enum ApplicationTypeEnumQLType {
  UNKNOWN
  SAS
  WAREHOUSE
  WAREHOUSE_MOBILE
  SALES
  ACCOUNTS
  BUILDROOM
  ONE_PORTAL
  CALENDAR
}

input AssetRollHeaderCreateInputModel {
  customerId: Int
  assetTagPrefix: String
  startNumber: Int
  endNumber: Int
  memoMappingId: Long
  salesOrderHeaderId: Long
}

input AssetRollItemCreateInputModel {
  assetRollHeaderId: Long
  salesOrderItemId: Long
  stockId: Long
  partNo: String
  description: String
  qty: Int
  isAssetTagRequired: Boolean
}

input AssetRollHeaderUpdateInputModel {
  id: Int!
  customerId: Int
  assetTagPrefix: String
  startNumber: Int
  endNumber: Int
  memoMappingId: Long
  salesOrderHeaderId: Long
}

input AssetRollItemUpdateInputModel {
  id: Int!
  assetRollHeaderId: Long
  salesOrderItemId: Long
  stockId: Long
  partNo: String
  description: String
  qty: Int
  isAssetTagRequired: Boolean
}

input ConvertInputModel {
  transactionReference: String!
  transactionItemReferences: [String]
  excludeWarnings: Boolean
}

input BuildRequestHeaderCreateInputModel {
  requiredDate: DateTime
  customerId: Int
  customerPo: String
  customerRef: String
  requestedById: Int
  assignedToId: Int
  memoMappingId: Long
  correlationId: Long
  startDate: DateTime
  completedDate: DateTime
  completedById: Int
  salesOrderHeaderId: Long
  configurationDetails: String
  contactId: Int
}

input BuildRequestItemCreateInputModel {
  buildRequestHeaderId: Long
  salesOrderItemId: Long
  stockId: Long
  partNo: String
  description: String
  qty: Int
  isAssetTagRequired: Boolean
}

input BuildRequestHeaderUpdateInputModel {
  id: Long!
  requiredDate: DateTime
  customerId: Int
  customerPo: String
  customerRef: String
  requestedById: Int
  assignedToId: Int
  memoMappingId: Long
  correlationId: Long
  startDate: DateTime
  completedDate: DateTime
  completedById: Int
  salesOrderHeaderId: Long
  configurationDetails: String
  contactId: Int
}

input BuildRequestItemUpdateInputModel {
  id: Long!
  buildRequestHeaderId: Long
  salesOrderItemId: Long
  stockId: Long
  partNo: String
  description: String
  qty: Int
  isAssetTagRequired: Boolean
}

input StatusInputModel {
  id: Long
  stormStatus: StormStatusTypeEnumQLType
}

input CategoryCreateInputModel {
  parentCategoryId: Int
  name: String
  sortOrder: Int
  isVirtual: Boolean
}

input CategoryUpdateInputModel {
  id: Int!
  parentCategoryId: Int
  name: String
  sortOrder: Int
  isVirtual: Boolean
}

input ContactCreateInputModel {
  addressId: Int
  title: String
  salutation: String
  name: String
  jobTitle: String
  email: String
  phoneNumber: String
  extension: String
  mobileNumber: String
  mailshots: Boolean
  memoMappingId: Long
  linkCustomers: [Int]
}

input ContactUpdateInputModel {
  id: Int!
  unlinkCustomers: [Int]
  addressId: Int
  title: String
  salutation: String
  name: String
  jobTitle: String
  email: String
  phoneNumber: String
  extension: String
  mobileNumber: String
  mailshots: Boolean
  memoMappingId: Long
  linkCustomers: [Int]
}

input CustomerContactMappingInputModel {
  contactId: Int!
  linkCustomers: [Int]
  unlinkCustomers: [Int]
}

input ContactSupplierLinkInputModel {
  contactId: Int!
  supplierIds: [Int]
}

input CustomerCreateInputModel {
  primaryContactId: Int
  parentCustomerId: Int
  vATCodeId: Int
  currencyId: Int
  salesPersonId: Int
  creditControllerId: Int
  customerPaymentTermId: Int
  quoteValidationTermId: Int
  sectorId: Int
  sageAccount: String
  companyNumber: String
  customerName: String
  uRN: String
  isCustomerVisible: Boolean
  gDPRCompliant: Boolean
  memoMappingId: Long
  accountSetupDate: DateTime
}

input CustomerUpdateInputModel {
  id: Int!
  primaryContactId: Int
  parentCustomerId: Int
  vATCodeId: Int
  currencyId: Int
  salesPersonId: Int
  creditControllerId: Int
  customerPaymentTermId: Int
  quoteValidationTermId: Int
  sectorId: Int
  sageAccount: String
  companyNumber: String
  customerName: String
  uRN: String
  isCustomerVisible: Boolean
  gDPRCompliant: Boolean
  memoMappingId: Long
  accountSetupDate: DateTime
}

input DispatchNoteBookingInputModel {
  id: Long
  items: [DispatchNoteBookingItemInputModel]!
}

input DispatchNoteBookingItemInputModel {
  id: Long
  qtyDispatched: Int
  applicationId: ApplicationTypeEnumQLType
  mockDataEnabled: Boolean
}

input DispatchNoteHeaderUpdateInputModel {
  id: Long!
  dateRequired: DateTime
  requestedDeliveryMethodId: Int
  requestedCourierId: Int
  requestedDispatchDate: DateTime
  dispatchedFor: Int
  dispatchInstructions: String
  customerRef: String
  proofOfDeliveryId: Int
  courierRef: String
  courierId: Int
  courierCost: Decimal
  deliveryMethodId: Int
  trackingRef: String
  deliverySpecialInstructions: String
  boxesShipped: Int
  requestedAddressId: Int
  addressId: Int
  incoTermId: Int
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input DispatchNoteItemUpdateInputModel {
  id: Long!
  dispatchNoteHeaderId: Long
  stockId: Long
  partNo: String
  description: String
  qtyRequested: Int
  vatcodeId: Int
}

input PrintInputModel {
  name: String
  guids: [ID]
}

type ExportOutputModel {
  fileName: String
  fileUrl: String
}

input SortOrderModelInputModel {
  field: String
  direction: SortDirectionEnumEnumQLType
}

enum ExportTypeEnumQLType {
  EXCEL_LIST
  EXCEL
  WORD
  PDF
}

input GoodsReceivedNoteBookingInputModel {
  id: Long
  items: [GoodsReceivedNoteBookingItemInputModel]!
}

input GoodsReceivedNoteBookingItemInputModel {
  id: Long
  qtyBooked: Int
  mockDataEnabled: Boolean
}

input GoodsReceivedNoteHeaderInputModel {
  id: Long
  dateReceived: DateTime
  receivedById: Int
  areaId: Int
  goodsReceivedNoteTransactionId: Long
  customerId: Int
  supplierId: Int
  stormStatusId: StormStatusTypeEnumQLType
  memoMappingId: Long
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input GoodsReceivedNoteItemInputModel {
  id: Long
  goodsReceivedNoteHeaderId: Long
  stockId: Long
  manufacturerId: Int
  partNo: String
  description: String
  qtyOrdered: Int
  qtyReceived: Int
  isDeleted: Boolean
  mockDataEnabled: Boolean
}

input ManufacturerCreateInputModel {
  parentManufacturerId: Int
  name: String
  isVisible: Boolean
}

input ManufacturerUpdateInputModel {
  id: Int!
  parentManufacturerId: Int
  name: String
  isVisible: Boolean
}

input MemoInputModel {
  id: Long
  memoMappingId: Long
  isDeleted: Boolean
  memoType: MemoTypeEnumQLType
  transactionId: Long!
  parentId: Long
  notes: String!
  allocatedToId: Int
  isViewed: Boolean
  isCompleted: Boolean
  completedById: Int
  completedDate: DateTime
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input MemoCompletionInputModel {
  id: Long!
  isCompleted: Boolean
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input MemoDeleteInputModel {
  memoType: MemoTypeEnumQLType
  transactionId: Long
  id: Long!
  mockDataEnabled: Boolean
}

input PurchaseOrderCreateInputModel {
  customerId: Int
  dateRequired: DateTime
  salesOrderHeaderId: Long
  reference: String
  supplierId: Int
  currencyId: Int
  sameDayDispatch: Boolean
  dispatchAddressId: Int
  supplierDeliveryCharge: Decimal
  stormDeliveryCharge: Decimal
  memoMappingId: Long
  isDirectDelivery: Boolean
}

input PurchaseOrderUpdateInputModel {
  id: Long!
  customerId: Int
  dateRequired: DateTime
  salesOrderHeaderId: Long
  reference: String
  supplierId: Int
  currencyId: Int
  sameDayDispatch: Boolean
  dispatchAddressId: Int
  supplierDeliveryCharge: Decimal
  stormDeliveryCharge: Decimal
  memoMappingId: Long
  isDirectDelivery: Boolean
}

input PurchaseOrderItemCreateInputModel {
  purchaseOrderHeaderId: Long
  sortOrder: Int
  stockId: Long
  partNo: String
  description: String
  qtyOrdered: Int
  vatcodeId: Int
  unitOfMeasurementId: Int
  supplierInvoiceRef: String
  estimatedCost: Decimal
  estimatedPrice: Decimal
}

input PurchaseOrderItemUpdateInputModel {
  id: Long!
  purchaseOrderHeaderId: Long
  sortOrder: Int
  stockId: Long
  partNo: String
  description: String
  qtyOrdered: Int
  vatcodeId: Int
  unitOfMeasurementId: Int
  supplierInvoiceRef: String
  estimatedCost: Decimal
  estimatedPrice: Decimal
}

input DeleteInputModel {
  keys: [Long]!
}

input PurchaseOrderInputModel {
  id: Long
  customerId: Int
  dateRequired: DateTime
  salesOrderHeaderId: Long
  reference: String
  supplierId: Int
  stormStatusId: StormStatusTypeEnumQLType
  currencyId: Int
  approved: Boolean
  sameDayDispatch: Boolean
  dispatchAddressId: Int
  supplierDeliveryCharge: Decimal
  stormDeliveryCharge: Decimal
  memoMappingId: Long
  isDirectDelivery: Boolean
  isDeleted: Boolean
  applicationId: ApplicationTypeEnumQLType
  items: [PurchaseOrderItemInputModel]
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input PurchaseOrderItemInputModel {
  id: Long
  purchaseOrderHeaderId: Long
  sortOrder: Int
  applicationId: ApplicationTypeEnumQLType
  stockId: Long
  partNo: String
  description: String
  qtyOrdered: Int
  vatcodeId: Int
  unitOfMeasurementId: Int
  isDeleted: Boolean
  supplierInvoiceRef: String
  avgCost: Decimal
  avgPrice: Decimal
  salesOrderItemId: Long
  saveChanges: Boolean
  mockDataEnabled: Boolean
}

input ItemPositionInputModel {
  id: Long!
  isOptionalItem: Boolean
  previousId: Long
  parentBundleId: Long
}

input QuoteCreateInputModel {
  customerId: Int!
  contactId: Int
  dateRequired: DateTime
  closeByDate: DateTime
  deliveryCharge: Decimal
  reference: String
  printComments: String
}

input MarginInputModel {
  id: Long!
  margin: Decimal!
  currencyPrecision: Int!
}

input MarkupInputModel {
  id: Long!
  markup: Decimal!
  currencyPrecision: Int
}

input QuoteUpdateInputModel {
  id: Long!
  customerId: Int!
  contactId: Int
  dateRequired: DateTime
  closeByDate: DateTime
  deliveryCharge: Decimal
  reference: String
  printComments: String
}

input QuoteItemCreateInputModel {
  quoteHeaderId: Long!
  reference: String
  sortOrder: Int
  stockId: Long
  partNo: String
  description: String
  manufacturerId: Int
  categoryId: Int
  qty: Int
  vatcodeId: Int
  supplierStockAndCostId: Int
  parentBundleId: Long
  unitOfMeasurementId: Int
  cost: Decimal
  price: Decimal
  leadTime: DateTime
  isCustomerVisible: Boolean
  isOptionalItem: Boolean
}

input QuoteItemUpdateInputModel {
  id: Long!
  quoteHeaderId: Long!
  reference: String
  sortOrder: Int
  stockId: Long
  partNo: String
  description: String
  qty: Int
  vatcodeId: Int
  supplierStockAndCostId: Int
  parentBundleId: Long
  unitOfMeasurementId: Int
  cost: Decimal
  price: Decimal
  leadTime: DateTime
  isCustomerVisible: Boolean
  isOptionalItem: Boolean
}

input DuplicateHeaderInputModel {
  id: Long!
  customerId: Int
}

input MergeHeaderInputModel {
  fromId: [Long]!
  toId: Long!
}

input SalesOrderCreateInputModel {
  customerId: Int
  contactId: Int
  dateRequired: DateTime
  etadate: DateTime
  deliveryCharge: Decimal
  quoteHeaderId: Long
  incoTermId: Int
  reference: String
  customerPo: String
}

input SalesOrderUpdateInputModel {
  id: Long!
  customerId: Int
  contactId: Int
  dateRequired: DateTime
  etadate: DateTime
  deliveryCharge: Decimal
  quoteHeaderId: Long
  incoTermId: Int
  reference: String
  customerPo: String
}

input SalesOrderItemUpdateInputModel {
  id: Long
  salesOrderHeaderId: Long
  stockId: Long
  partNo: String
  description: String
  qtyOrdered: Int
  vatcodeId: Int
  parentBundleId: Long
  unitOfMeasurementId: Int
  supplierStockAndCostId: Int
  leadTime: DateTime
  isCustomerVisible: Boolean
  customerRef: String
  avgCost: Decimal
  avgPrice: Decimal
}

input SalesOrderItemDuplicateInputModel {
  id: Long
}

input SalesOrderItemCreateInputModel {
  salesOrderHeaderId: Long!
  reference: String
  sortOrder: Int
  stockId: Long
  partNo: String
  description: String
  manufacturerId: Int
  categoryId: Int
  qty: Int
  vatcodeId: Int
  supplierStockAndCostId: Int
  parentBundleId: Long
  unitOfMeasurementId: Int
  cost: Decimal
  price: Decimal
  leadTime: DateTime
  isCustomerVisible: Boolean
  isOptionalItem: Boolean
}

input CancelStockMovementRequestInputModel {
  id: Long!
  mockDataEnabled: Boolean
}

type StockTakeOutputModel {
  headerOutputId: Long
  headerOutputRefId: String
  items: [StockTakeItemOutputModel]
  stockLocationId: Int
}

type StockTakeItemOutputModel {
  fromStockLocationId: Int
  headerOutputId: Long
  headerOutputRefId: String
  itemOutputId: Long
  qtyAvailable: Int
  stockUnitID: Long
  stockUnitStatusId: Int
  toStockLocationId: Int
}

input StockTakeInputModel {
  stockLocationId: Int
  stockUnits: [StockTakeAssetInputModel]!
  stockUnitGroups: [StockTakeAssetGroupItemInputModel]
  mockDataEnabled: Boolean
}

input StockTakeAssetInputModel {
  stockUnitId: Long
  toStockLocationId: Int
  qtyAvailable: Int!
  status: StockUnitStatusTypeEnumQLType!
}

enum StockUnitStatusTypeEnumQLType {
  AVA
  DIS
  OFF
  MIS
  DAM
}

input StockTakeAssetGroupItemInputModel {
  stockUnitGroupId: Long
  toStockLocationId: Int
  qtyAvailable: Int!
  status: StockUnitStatusTypeEnumQLType!
}

input StockInputModel {
  id: Long
  productId: Long!
  productDescription: String
  partNo: String!
  manufacturerId: Int!
  categoryId: Int!
  mainImageUrl: String
  thumbImageUrl: String
  qty: Int
  applicationId: ApplicationTypeEnumQLType
  isEditable: Boolean!
  sourceUrl: String
  memoMappingId: Long
  isDeleted: Boolean
  mockDataEnabled: Boolean
}

input StockMovementRequestCreateInputModel {
  items: [StockMovementRequestItemInputModel]!
  toStockLocationId: Int!
  requestedForId: Int
  stormStatus: StormStatusTypeEnumQLType
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input StockMovementRequestItemInputModel {
  stockUnitId: Long
  fromStockLocationId: Int
  completedById: Int
  completedDate: DateTime
  completed: Boolean!
}

input StockMovementRequestUpdateInputModel {
  id: Long!
  items: [StockMovementRequestItemInputModel]!
  toStockLocationId: Int
  requestedById: Int
  requestedForId: Int
}

input StockMovementRequestItemUpdateInputModel {
  id: Long!
  stockMovementRequestHeaderId: Long!
  stockUnitId: Long
  fromStockLocationId: Int
  completedById: Int
  completedDate: DateTime
  completed: Boolean!
}

input StockUnitUpdateInputModel {
  id: Long!
  customerId: Int
  isDeleted: Boolean
  applicationId: ApplicationTypeEnumQLType
  stockTypeId: Int
  stockUnitAsset: StockUnitAssetInputModel
  stockUnitTransactionId: Long
  stockId: Long
  stockLocationId: Int
  stockUnitParentId: Long
  stockUnitStatusId: Int
  stockUnitGroupId: Long
  supplierId: Int
  unitCost: Decimal
  unitPrice: Decimal
  qtyAvailable: Int
  qtyBooked: Int
  unitOfMeasurementId: Int
  transactionType: TransactionBookingTypeEnumQLType
  transactionId: Long!
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input StockUnitAssetInputModel {
  id: Long
  serialNo: String
  assetTag: String
}

input StockUnitBookingInputModel {
  serialNo: String!
  direction: DirectionTypeEnumQLType!
  transactionType: TransactionBookingTypeEnumQLType
  transactionId: Long!
  excludeWarnings: Boolean
  printOnSave: Boolean
  printerName: String
  sendNotificationOnSave: Boolean
  emails: [String]
  mockDataEnabled: Boolean
}

input StockUnitUnlinkInputModel {
  id: Long!
  direction: DirectionTypeEnumQLType!
  transactionType: TransactionTypeEnumQLType
  transactionId: Long!
  mockDataEnabled: Boolean
}

enum TransactionTypeEnumQLType {
  NONE
  SALES_ORDER_ITEM_UNIT_ID
  PURCHASE_ORDER_ITEM_UNIT_ID
  DISPATCH_NOTE_ITEM_UNIT_ID
  NON_ORDER_ITEM_ID
  CUSTOMER_RETURN_ITEM_UNIT_ID
  GOODS_RECEIVED_NOTE_ITEM_UNIT_ID
}

input SupplierCreateInputModel {
  primaryContactId: Int
  parentSupplierId: Int
  vATCodeId: Int
  defaultCurrencyId: Int
  purchaseLedgerControllerId: Int
  paymentTermId: Int
  quoteValidationTermId: Int
  sectorId: Int
  accountRef: String
  companyNumber: String
  name: String
  isCustomerVisible: Boolean
  memoMappingId: Long
}

input SupplierUpdateInputModel {
  id: Int
  primaryContactId: Int
  parentSupplierId: Int
  vATCodeId: Int
  defaultCurrencyId: Int
  purchaseLedgerControllerId: Int
  paymentTermId: Int
  quoteValidationTermId: Int
  sectorId: Int
  accountRef: String
  companyNumber: String
  name: String
  isCustomerVisible: Boolean
  memoMappingId: Long
}

input SupplierStockAndCostCreateInputModel {
  cost: Decimal
  supplierPartNo: String
  manufacturerPartNo: String
  supplierId: Int
  reviewedDate: DateTime
  stock: Int
  etadate: DateTime
}

input SupplierStockAndCostUpdateInputModel {
  id: Int!
  cost: Decimal
  supplierPartNo: String
  manufacturerPartNo: String
  supplierId: Int
  reviewedDate: DateTime
  stock: Int
  etadate: DateTime
}

type SASSubscriptions {
  # Raises when a any update/change to an existing Address
  address_OnChange: AddressQLType

  # Raises when a new Address has been inserted
  address_OnInsert: AddressQLType

  # Raises when specified ID Address has been updated
  address_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): AddressQLType

  # Raises when a any update/change to an existing AddressFeatureMapping
  addressFeatureMapping_OnChange: AddressFeatureMappingQLType

  # Raises when a new AddressFeatureMapping has been inserted
  addressFeatureMapping_OnInsert: AddressFeatureMappingQLType

  # Raises when specified ID AddressFeatureMapping has been updated
  addressFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): AddressFeatureMappingQLType

  # Raises when a any update/change to an existing AddressProviderMapping
  addressProviderMapping_OnChange: AddressProviderMappingQLType

  # Raises when a new AddressProviderMapping has been inserted
  addressProviderMapping_OnInsert: AddressProviderMappingQLType

  # Raises when specified ID AddressProviderMapping has been updated
  addressProviderMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): AddressProviderMappingQLType

  # Raises when a any update/change to an existing AddressType
  addressType_OnChange: AddressTypeQLType

  # Raises when a new AddressType has been inserted
  addressType_OnInsert: AddressTypeQLType

  # Raises when specified ID AddressType has been updated
  addressType_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): AddressTypeQLType

  # Raises when a any update/change to an existing Application
  application_OnChange: ApplicationQLType

  # Raises when a new Application has been inserted
  application_OnInsert: ApplicationQLType

  # Raises when specified ID Application has been updated
  application_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ApplicationQLType

  # Raises when a any update/change to an existing Area
  area_OnChange: AreaQLType

  # Raises when a new Area has been inserted
  area_OnInsert: AreaQLType

  # Raises when specified ID Area has been updated
  area_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): AreaQLType

  # Raises when a any update/change to an existing AssetRollHeader
  assetRollHeader_OnChange: AssetRollHeaderQLType

  # Raises when a new AssetRollHeader has been inserted
  assetRollHeader_OnInsert: AssetRollHeaderQLType

  # Raises when specified ID AssetRollHeader has been updated
  assetRollHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): AssetRollHeaderQLType

  # Raises when a any update/change to an existing AssetRollItem
  assetRollItem_OnChange: AssetRollItemQLType

  # Raises when a new AssetRollItem has been inserted
  assetRollItem_OnInsert: AssetRollItemQLType

  # Raises when specified ID AssetRollItem has been updated
  assetRollItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): AssetRollItemQLType

  # Raises when a any update/change to an existing BuildRequestHeader
  buildRequestHeader_OnChange: BuildRequestHeaderQLType

  # Raises when a new BuildRequestHeader has been inserted
  buildRequestHeader_OnInsert: BuildRequestHeaderQLType

  # Raises when specified ID BuildRequestHeader has been updated
  buildRequestHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): BuildRequestHeaderQLType

  # Raises when a any update/change to an existing BuildRequestHeaderFeatureMapping
  buildRequestHeaderFeatureMapping_OnChange: BuildRequestHeaderFeatureMappingQLType

  # Raises when a new BuildRequestHeaderFeatureMapping has been inserted
  buildRequestHeaderFeatureMapping_OnInsert: BuildRequestHeaderFeatureMappingQLType

  # Raises when specified ID BuildRequestHeaderFeatureMapping has been updated
  buildRequestHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): BuildRequestHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing BuildRequestItem
  buildRequestItem_OnChange: BuildRequestItemQLType

  # Raises when a new BuildRequestItem has been inserted
  buildRequestItem_OnInsert: BuildRequestItemQLType

  # Raises when specified ID BuildRequestItem has been updated
  buildRequestItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): BuildRequestItemQLType

  # Raises when a any update/change to an existing BuildRequestItemUnit
  buildRequestItemUnit_OnChange: BuildRequestItemUnitQLType

  # Raises when a new BuildRequestItemUnit has been inserted
  buildRequestItemUnit_OnInsert: BuildRequestItemUnitQLType

  # Raises when specified ID BuildRequestItemUnit has been updated
  buildRequestItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): BuildRequestItemUnitQLType

  # Raises when a any update/change to an existing Category
  category_OnChange: CategoryQLType

  # Raises when a new Category has been inserted
  category_OnInsert: CategoryQLType

  # Raises when specified ID Category has been updated
  category_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CategoryQLType

  # Raises when a any update/change to an existing Contact
  contact_OnChange: ContactQLType

  # Raises when a new Contact has been inserted
  contact_OnInsert: ContactQLType

  # Raises when specified ID Contact has been updated
  contact_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ContactQLType

  # Raises when a any update/change to an existing ContactFeatureMapping
  contactFeatureMapping_OnChange: ContactFeatureMappingQLType

  # Raises when a new ContactFeatureMapping has been inserted
  contactFeatureMapping_OnInsert: ContactFeatureMappingQLType

  # Raises when specified ID ContactFeatureMapping has been updated
  contactFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ContactFeatureMappingQLType

  # Raises when a any update/change to an existing Correlation
  correlation_OnChange: CorrelationQLType

  # Raises when a new Correlation has been inserted
  correlation_OnInsert: CorrelationQLType

  # Raises when specified ID Correlation has been updated
  correlation_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CorrelationQLType

  # Raises when a any update/change to an existing Country
  country_OnChange: CountryQLType

  # Raises when a new Country has been inserted
  country_OnInsert: CountryQLType

  # Raises when specified ID Country has been updated
  country_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CountryQLType

  # Raises when a any update/change to an existing Courier
  courier_OnChange: CourierQLType

  # Raises when a new Courier has been inserted
  courier_OnInsert: CourierQLType

  # Raises when specified ID Courier has been updated
  courier_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CourierQLType

  # Raises when a any update/change to an existing CourierDeliveryMethod
  courierDeliveryMethod_OnChange: CourierDeliveryMethodQLType

  # Raises when a new CourierDeliveryMethod has been inserted
  courierDeliveryMethod_OnInsert: CourierDeliveryMethodQLType

  # Raises when specified ID CourierDeliveryMethod has been updated
  courierDeliveryMethod_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CourierDeliveryMethodQLType

  # Raises when a any update/change to an existing Currency
  currency_OnChange: CurrencyQLType

  # Raises when a new Currency has been inserted
  currency_OnInsert: CurrencyQLType

  # Raises when specified ID Currency has been updated
  currency_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CurrencyQLType

  # Raises when a any update/change to an existing Customer
  customer_OnChange: CustomerQLType

  # Raises when a new Customer has been inserted
  customer_OnInsert: CustomerQLType

  # Raises when specified ID Customer has been updated
  customer_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerQLType

  # Raises when a any update/change to an existing CustomerAddressMapping
  customerAddressMapping_OnChange: CustomerAddressMappingQLType

  # Raises when a new CustomerAddressMapping has been inserted
  customerAddressMapping_OnInsert: CustomerAddressMappingQLType

  # Raises when specified ID CustomerAddressMapping has been updated
  customerAddressMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerAddressMappingQLType

  # Raises when a any update/change to an existing CustomerContactMapping
  customerContactMapping_OnChange: CustomerContactMappingQLType

  # Raises when a new CustomerContactMapping has been inserted
  customerContactMapping_OnInsert: CustomerContactMappingQLType

  # Raises when specified ID CustomerContactMapping has been updated
  customerContactMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerContactMappingQLType

  # Raises when a any update/change to an existing CustomerCreditNoteHeader
  customerCreditNoteHeader_OnChange: CustomerCreditNoteHeaderQLType

  # Raises when a new CustomerCreditNoteHeader has been inserted
  customerCreditNoteHeader_OnInsert: CustomerCreditNoteHeaderQLType

  # Raises when specified ID CustomerCreditNoteHeader has been updated
  customerCreditNoteHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerCreditNoteHeaderQLType

  # Raises when a any update/change to an existing CustomerCreditNoteItem
  customerCreditNoteItem_OnChange: CustomerCreditNoteItemQLType

  # Raises when a new CustomerCreditNoteItem has been inserted
  customerCreditNoteItem_OnInsert: CustomerCreditNoteItemQLType

  # Raises when specified ID CustomerCreditNoteItem has been updated
  customerCreditNoteItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerCreditNoteItemQLType

  # Raises when a any update/change to an existing CustomerCreditNoteItemUnit
  customerCreditNoteItemUnit_OnChange: CustomerCreditNoteItemUnitQLType

  # Raises when a new CustomerCreditNoteItemUnit has been inserted
  customerCreditNoteItemUnit_OnInsert: CustomerCreditNoteItemUnitQLType

  # Raises when specified ID CustomerCreditNoteItemUnit has been updated
  customerCreditNoteItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerCreditNoteItemUnitQLType

  # Raises when a any update/change to an existing CustomerFeatureMapping
  customerFeatureMapping_OnChange: CustomerFeatureMappingQLType

  # Raises when a new CustomerFeatureMapping has been inserted
  customerFeatureMapping_OnInsert: CustomerFeatureMappingQLType

  # Raises when specified ID CustomerFeatureMapping has been updated
  customerFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerFeatureMappingQLType

  # Raises when a any update/change to an existing CustomerInvoiceHeader
  customerInvoiceHeader_OnChange: CustomerInvoiceHeaderQLType

  # Raises when a new CustomerInvoiceHeader has been inserted
  customerInvoiceHeader_OnInsert: CustomerInvoiceHeaderQLType

  # Raises when specified ID CustomerInvoiceHeader has been updated
  customerInvoiceHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerInvoiceHeaderQLType

  # Raises when a any update/change to an existing CustomerInvoiceItem
  customerInvoiceItem_OnChange: CustomerInvoiceItemQLType

  # Raises when a new CustomerInvoiceItem has been inserted
  customerInvoiceItem_OnInsert: CustomerInvoiceItemQLType

  # Raises when specified ID CustomerInvoiceItem has been updated
  customerInvoiceItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerInvoiceItemQLType

  # Raises when a any update/change to an existing CustomerInvoiceItemUnit
  customerInvoiceItemUnit_OnChange: CustomerInvoiceItemUnitQLType

  # Raises when a new CustomerInvoiceItemUnit has been inserted
  customerInvoiceItemUnit_OnInsert: CustomerInvoiceItemUnitQLType

  # Raises when specified ID CustomerInvoiceItemUnit has been updated
  customerInvoiceItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerInvoiceItemUnitQLType

  # Raises when a any update/change to an existing CustomerPaymentTerm
  customerPaymentTerm_OnChange: CustomerPaymentTermQLType

  # Raises when a new CustomerPaymentTerm has been inserted
  customerPaymentTerm_OnInsert: CustomerPaymentTermQLType

  # Raises when specified ID CustomerPaymentTerm has been updated
  customerPaymentTerm_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerPaymentTermQLType

  # Raises when a any update/change to an existing CustomerPurchaseOrderRequestHeader
  customerPurchaseOrderRequestHeader_OnChange: CustomerPurchaseOrderRequestHeaderQLType

  # Raises when a new CustomerPurchaseOrderRequestHeader has been inserted
  customerPurchaseOrderRequestHeader_OnInsert: CustomerPurchaseOrderRequestHeaderQLType

  # Raises when specified ID CustomerPurchaseOrderRequestHeader has been updated
  customerPurchaseOrderRequestHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerPurchaseOrderRequestHeaderQLType

  # Raises when a any update/change to an existing CustomerPurchaseOrderRequestHeaderFeatureMapping
  customerPurchaseOrderRequestHeaderFeatureMapping_OnChange: CustomerPurchaseOrderRequestHeaderFeatureMappingQLType

  # Raises when a new CustomerPurchaseOrderRequestHeaderFeatureMapping has been inserted
  customerPurchaseOrderRequestHeaderFeatureMapping_OnInsert: CustomerPurchaseOrderRequestHeaderFeatureMappingQLType

  # Raises when specified ID CustomerPurchaseOrderRequestHeaderFeatureMapping has been updated
  customerPurchaseOrderRequestHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerPurchaseOrderRequestHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing CustomerPurchaseOrderRequestItem
  customerPurchaseOrderRequestItem_OnChange: CustomerPurchaseOrderRequestItemQLType

  # Raises when a new CustomerPurchaseOrderRequestItem has been inserted
  customerPurchaseOrderRequestItem_OnInsert: CustomerPurchaseOrderRequestItemQLType

  # Raises when specified ID CustomerPurchaseOrderRequestItem has been updated
  customerPurchaseOrderRequestItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerPurchaseOrderRequestItemQLType

  # Raises when a any update/change to an existing CustomerReturnHeader
  customerReturnHeader_OnChange: CustomerReturnHeaderQLType

  # Raises when a new CustomerReturnHeader has been inserted
  customerReturnHeader_OnInsert: CustomerReturnHeaderQLType

  # Raises when specified ID CustomerReturnHeader has been updated
  customerReturnHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerReturnHeaderQLType

  # Raises when a any update/change to an existing CustomerReturnHeaderFeatureMapping
  customerReturnHeaderFeatureMapping_OnChange: CustomerReturnHeaderFeatureMappingQLType

  # Raises when a new CustomerReturnHeaderFeatureMapping has been inserted
  customerReturnHeaderFeatureMapping_OnInsert: CustomerReturnHeaderFeatureMappingQLType

  # Raises when specified ID CustomerReturnHeaderFeatureMapping has been updated
  customerReturnHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerReturnHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing CustomerReturnItem
  customerReturnItem_OnChange: CustomerReturnItemQLType

  # Raises when a new CustomerReturnItem has been inserted
  customerReturnItem_OnInsert: CustomerReturnItemQLType

  # Raises when specified ID CustomerReturnItem has been updated
  customerReturnItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerReturnItemQLType

  # Raises when a any update/change to an existing CustomerReturnItemUnit
  customerReturnItemUnit_OnChange: CustomerReturnItemUnitQLType

  # Raises when a new CustomerReturnItemUnit has been inserted
  customerReturnItemUnit_OnInsert: CustomerReturnItemUnitQLType

  # Raises when specified ID CustomerReturnItemUnit has been updated
  customerReturnItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerReturnItemUnitQLType

  # Raises when a any update/change to an existing CustomerReturnRequestHeader
  customerReturnRequestHeader_OnChange: CustomerReturnRequestHeaderQLType

  # Raises when a new CustomerReturnRequestHeader has been inserted
  customerReturnRequestHeader_OnInsert: CustomerReturnRequestHeaderQLType

  # Raises when specified ID CustomerReturnRequestHeader has been updated
  customerReturnRequestHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerReturnRequestHeaderQLType

  # Raises when a any update/change to an existing CustomerReturnRequestItem
  customerReturnRequestItem_OnChange: CustomerReturnRequestItemQLType

  # Raises when a new CustomerReturnRequestItem has been inserted
  customerReturnRequestItem_OnInsert: CustomerReturnRequestItemQLType

  # Raises when specified ID CustomerReturnRequestItem has been updated
  customerReturnRequestItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerReturnRequestItemQLType

  # Raises when a any update/change to an existing CustomerReturnRequestItemUnit
  customerReturnRequestItemUnit_OnChange: CustomerReturnRequestItemUnitQLType

  # Raises when a new CustomerReturnRequestItemUnit has been inserted
  customerReturnRequestItemUnit_OnInsert: CustomerReturnRequestItemUnitQLType

  # Raises when specified ID CustomerReturnRequestItemUnit has been updated
  customerReturnRequestItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerReturnRequestItemUnitQLType

  # Raises when a any update/change to an existing CustomerSageAux
  customerSageAux_OnChange: CustomerSageAuxQLType

  # Raises when a new CustomerSageAux has been inserted
  customerSageAux_OnInsert: CustomerSageAuxQLType

  # Raises when specified ID CustomerSageAux has been updated
  customerSageAux_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerSageAuxQLType

  # Raises when a any update/change to an existing CustomerSicmapping
  customerSicmapping_OnChange: CustomerSicmappingQLType

  # Raises when a new CustomerSicmapping has been inserted
  customerSicmapping_OnInsert: CustomerSicmappingQLType

  # Raises when specified ID CustomerSicmapping has been updated
  customerSicmapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerSicmappingQLType

  # Raises when a any update/change to an existing CustomerStockLevel
  customerStockLevel_OnChange: CustomerStockLevelQLType

  # Raises when a new CustomerStockLevel has been inserted
  customerStockLevel_OnInsert: CustomerStockLevelQLType

  # Raises when specified ID CustomerStockLevel has been updated
  customerStockLevel_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): CustomerStockLevelQLType

  # Raises when a any update/change to an existing DeliveryMethod
  deliveryMethod_OnChange: DeliveryMethodQLType

  # Raises when a new DeliveryMethod has been inserted
  deliveryMethod_OnInsert: DeliveryMethodQLType

  # Raises when specified ID DeliveryMethod has been updated
  deliveryMethod_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): DeliveryMethodQLType

  # Raises when a any update/change to an existing Department
  department_OnChange: DepartmentQLType

  # Raises when a new Department has been inserted
  department_OnInsert: DepartmentQLType

  # Raises when specified ID Department has been updated
  department_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): DepartmentQLType

  # Raises when a any update/change to an existing DispatchNoteHeader
  dispatchNoteHeader_OnChange: DispatchNoteHeaderQLType

  # Raises when a new DispatchNoteHeader has been inserted
  dispatchNoteHeader_OnInsert: DispatchNoteHeaderQLType

  # Raises when specified ID DispatchNoteHeader has been updated
  dispatchNoteHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): DispatchNoteHeaderQLType

  # Raises when a any update/change to an existing DispatchNoteHeaderFeatureMapping
  dispatchNoteHeaderFeatureMapping_OnChange: DispatchNoteHeaderFeatureMappingQLType

  # Raises when a new DispatchNoteHeaderFeatureMapping has been inserted
  dispatchNoteHeaderFeatureMapping_OnInsert: DispatchNoteHeaderFeatureMappingQLType

  # Raises when specified ID DispatchNoteHeaderFeatureMapping has been updated
  dispatchNoteHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): DispatchNoteHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing DispatchNoteItem
  dispatchNoteItem_OnChange: DispatchNoteItemQLType

  # Raises when a new DispatchNoteItem has been inserted
  dispatchNoteItem_OnInsert: DispatchNoteItemQLType

  # Raises when specified ID DispatchNoteItem has been updated
  dispatchNoteItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): DispatchNoteItemQLType

  # Raises when a any update/change to an existing DispatchNoteItemUnit
  dispatchNoteItemUnit_OnChange: DispatchNoteItemUnitQLType

  # Raises when a new DispatchNoteItemUnit has been inserted
  dispatchNoteItemUnit_OnInsert: DispatchNoteItemUnitQLType

  # Raises when specified ID DispatchNoteItemUnit has been updated
  dispatchNoteItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): DispatchNoteItemUnitQLType

  # Raises when a any update/change to an existing DispatchNoteTransaction
  dispatchNoteTransaction_OnChange: DispatchNoteTransactionQLType

  # Raises when a new DispatchNoteTransaction has been inserted
  dispatchNoteTransaction_OnInsert: DispatchNoteTransactionQLType

  # Raises when specified ID DispatchNoteTransaction has been updated
  dispatchNoteTransaction_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): DispatchNoteTransactionQLType

  # Raises when a any update/change to an existing Employment
  employment_OnChange: EmploymentQLType

  # Raises when a new Employment has been inserted
  employment_OnInsert: EmploymentQLType

  # Raises when specified ID Employment has been updated
  employment_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): EmploymentQLType

  # Raises when a any update/change to an existing Feature
  feature_OnChange: FeatureQLType

  # Raises when a new Feature has been inserted
  feature_OnInsert: FeatureQLType

  # Raises when specified ID Feature has been updated
  feature_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): FeatureQLType

  # Raises when a any update/change to an existing GoodsReceivedNoteHeader
  goodsReceivedNoteHeader_OnChange: GoodsReceivedNoteHeaderQLType

  # Raises when a new GoodsReceivedNoteHeader has been inserted
  goodsReceivedNoteHeader_OnInsert: GoodsReceivedNoteHeaderQLType

  # Raises when specified ID GoodsReceivedNoteHeader has been updated
  goodsReceivedNoteHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): GoodsReceivedNoteHeaderQLType

  # Raises when a any update/change to an existing GoodsReceivedNoteItem
  goodsReceivedNoteItem_OnChange: GoodsReceivedNoteItemQLType

  # Raises when a new GoodsReceivedNoteItem has been inserted
  goodsReceivedNoteItem_OnInsert: GoodsReceivedNoteItemQLType

  # Raises when specified ID GoodsReceivedNoteItem has been updated
  goodsReceivedNoteItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): GoodsReceivedNoteItemQLType

  # Raises when a any update/change to an existing GoodsReceivedNoteItemUnit
  goodsReceivedNoteItemUnit_OnChange: GoodsReceivedNoteItemUnitQLType

  # Raises when a new GoodsReceivedNoteItemUnit has been inserted
  goodsReceivedNoteItemUnit_OnInsert: GoodsReceivedNoteItemUnitQLType

  # Raises when specified ID GoodsReceivedNoteItemUnit has been updated
  goodsReceivedNoteItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): GoodsReceivedNoteItemUnitQLType

  # Raises when a any update/change to an existing GoodsReceivedNoteItemUnitTransaction
  goodsReceivedNoteItemUnitTransaction_OnChange: GoodsReceivedNoteItemUnitTransactionQLType

  # Raises when a new GoodsReceivedNoteItemUnitTransaction has been inserted
  goodsReceivedNoteItemUnitTransaction_OnInsert: GoodsReceivedNoteItemUnitTransactionQLType

  # Raises when specified ID GoodsReceivedNoteItemUnitTransaction has been updated
  goodsReceivedNoteItemUnitTransaction_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): GoodsReceivedNoteItemUnitTransactionQLType

  # Raises when a any update/change to an existing GoodsReceivedNoteTransaction
  goodsReceivedNoteTransaction_OnChange: GoodsReceivedNoteTransactionQLType

  # Raises when a new GoodsReceivedNoteTransaction has been inserted
  goodsReceivedNoteTransaction_OnInsert: GoodsReceivedNoteTransactionQLType

  # Raises when specified ID GoodsReceivedNoteTransaction has been updated
  goodsReceivedNoteTransaction_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): GoodsReceivedNoteTransactionQLType

  # Raises when a any update/change to an existing HighValueThreshold
  highValueThreshold_OnChange: HighValueThresholdQLType

  # Raises when a new HighValueThreshold has been inserted
  highValueThreshold_OnInsert: HighValueThresholdQLType

  # Raises when specified ID HighValueThreshold has been updated
  highValueThreshold_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): HighValueThresholdQLType

  # Raises when a any update/change to an existing Incidental
  incidental_OnChange: IncidentalQLType

  # Raises when a new Incidental has been inserted
  incidental_OnInsert: IncidentalQLType

  # Raises when specified ID Incidental has been updated
  incidental_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): IncidentalQLType

  # Raises when a any update/change to an existing IncoTerm
  incoTerm_OnChange: IncoTermQLType

  # Raises when a new IncoTerm has been inserted
  incoTerm_OnInsert: IncoTermQLType

  # Raises when specified ID IncoTerm has been updated
  incoTerm_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): IncoTermQLType

  # Raises when a any update/change to an existing Locale
  locale_OnChange: LocaleQLType

  # Raises when a new Locale has been inserted
  locale_OnInsert: LocaleQLType

  # Raises when specified ID Locale has been updated
  locale_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): LocaleQLType

  # Raises when a any update/change to an existing LoqateAddress
  loqateAddress_OnChange: LoqateAddressQLType

  # Raises when a new LoqateAddress has been inserted
  loqateAddress_OnInsert: LoqateAddressQLType

  # Raises when specified ID LoqateAddress has been updated
  loqateAddress_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): LoqateAddressQLType

  # Raises when a any update/change to an existing Manufacturer
  manufacturer_OnChange: ManufacturerQLType

  # Raises when a new Manufacturer has been inserted
  manufacturer_OnInsert: ManufacturerQLType

  # Raises when specified ID Manufacturer has been updated
  manufacturer_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ManufacturerQLType

  # Raises when a any update/change to an existing Memo
  memo_OnChange: MemoQLType

  # Raises when a new Memo has been inserted
  memo_OnInsert: MemoQLType

  # Raises when specified ID Memo has been updated
  memo_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): MemoQLType

  # Raises when a any update/change to an existing MemoMapping
  memoMapping_OnChange: MemoMappingQLType

  # Raises when a new MemoMapping has been inserted
  memoMapping_OnInsert: MemoMappingQLType

  # Raises when specified ID MemoMapping has been updated
  memoMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): MemoMappingQLType

  # Raises when a any update/change to an existing MemoType
  memoType_OnChange: MemoTypeQLType

  # Raises when a new MemoType has been inserted
  memoType_OnInsert: MemoTypeQLType

  # Raises when specified ID MemoType has been updated
  memoType_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): MemoTypeQLType

  # Raises when a any update/change to an existing NonOrderedGoodsHeader
  nonOrderedGoodsHeader_OnChange: NonOrderedGoodsHeaderQLType

  # Raises when a new NonOrderedGoodsHeader has been inserted
  nonOrderedGoodsHeader_OnInsert: NonOrderedGoodsHeaderQLType

  # Raises when specified ID NonOrderedGoodsHeader has been updated
  nonOrderedGoodsHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): NonOrderedGoodsHeaderQLType

  # Raises when a any update/change to an existing NonOrderedGoodsItem
  nonOrderedGoodsItem_OnChange: NonOrderedGoodsItemQLType

  # Raises when a new NonOrderedGoodsItem has been inserted
  nonOrderedGoodsItem_OnInsert: NonOrderedGoodsItemQLType

  # Raises when specified ID NonOrderedGoodsItem has been updated
  nonOrderedGoodsItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): NonOrderedGoodsItemQLType

  # Raises when a any update/change to an existing NonOrderedGoodsItemUnit
  nonOrderedGoodsItemUnit_OnChange: NonOrderedGoodsItemUnitQLType

  # Raises when a new NonOrderedGoodsItemUnit has been inserted
  nonOrderedGoodsItemUnit_OnInsert: NonOrderedGoodsItemUnitQLType

  # Raises when specified ID NonOrderedGoodsItemUnit has been updated
  nonOrderedGoodsItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): NonOrderedGoodsItemUnitQLType

  # Raises when a any update/change to an existing NonOrderedGoodsOrigin
  nonOrderedGoodsOrigin_OnChange: NonOrderedGoodsOriginQLType

  # Raises when a new NonOrderedGoodsOrigin has been inserted
  nonOrderedGoodsOrigin_OnInsert: NonOrderedGoodsOriginQLType

  # Raises when specified ID NonOrderedGoodsOrigin has been updated
  nonOrderedGoodsOrigin_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): NonOrderedGoodsOriginQLType
  pageViewManager_Join(
    idRef: String!
    viewerId: String!

    # Request manager to not commit data changes
    readOnly: Boolean = false
  ): PageViewEventOutputModel

  # Raises when a any update/change to an existing ParentUserProfileMapping
  parentUserProfileMapping_OnChange: ParentUserProfileMappingQLType

  # Raises when a new ParentUserProfileMapping has been inserted
  parentUserProfileMapping_OnInsert: ParentUserProfileMappingQLType

  # Raises when specified ID ParentUserProfileMapping has been updated
  parentUserProfileMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ParentUserProfileMappingQLType

  # Raises when a any update/change to an existing PaymentMethod
  paymentMethod_OnChange: PaymentMethodQLType

  # Raises when a new PaymentMethod has been inserted
  paymentMethod_OnInsert: PaymentMethodQLType

  # Raises when specified ID PaymentMethod has been updated
  paymentMethod_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): PaymentMethodQLType

  # Raises when a any update/change to an existing PaymentTerm
  paymentTerm_OnChange: PaymentTermQLType

  # Raises when a new PaymentTerm has been inserted
  paymentTerm_OnInsert: PaymentTermQLType

  # Raises when specified ID PaymentTerm has been updated
  paymentTerm_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): PaymentTermQLType

  # Raises when a any update/change to an existing ProFormaInvoiceHeader
  proFormaInvoiceHeader_OnChange: ProFormaInvoiceHeaderQLType

  # Raises when a new ProFormaInvoiceHeader has been inserted
  proFormaInvoiceHeader_OnInsert: ProFormaInvoiceHeaderQLType

  # Raises when specified ID ProFormaInvoiceHeader has been updated
  proFormaInvoiceHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ProFormaInvoiceHeaderQLType

  # Raises when a any update/change to an existing ProFormaInvoiceHeaderFeatureMapping
  proFormaInvoiceHeaderFeatureMapping_OnChange: ProFormaInvoiceHeaderFeatureMappingQLType

  # Raises when a new ProFormaInvoiceHeaderFeatureMapping has been inserted
  proFormaInvoiceHeaderFeatureMapping_OnInsert: ProFormaInvoiceHeaderFeatureMappingQLType

  # Raises when specified ID ProFormaInvoiceHeaderFeatureMapping has been updated
  proFormaInvoiceHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ProFormaInvoiceHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing ProFormaInvoiceItem
  proFormaInvoiceItem_OnChange: ProFormaInvoiceItemQLType

  # Raises when a new ProFormaInvoiceItem has been inserted
  proFormaInvoiceItem_OnInsert: ProFormaInvoiceItemQLType

  # Raises when specified ID ProFormaInvoiceItem has been updated
  proFormaInvoiceItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ProFormaInvoiceItemQLType

  # Raises when a any update/change to an existing ProofOfDelivery
  proofOfDelivery_OnChange: ProofOfDeliveryQLType

  # Raises when a new ProofOfDelivery has been inserted
  proofOfDelivery_OnInsert: ProofOfDeliveryQLType

  # Raises when specified ID ProofOfDelivery has been updated
  proofOfDelivery_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): ProofOfDeliveryQLType

  # Raises when a any update/change to an existing PurchaseOrderHeader
  purchaseOrderHeader_OnChange: PurchaseOrderHeaderQLType

  # Raises when a new PurchaseOrderHeader has been inserted
  purchaseOrderHeader_OnInsert: PurchaseOrderHeaderQLType

  # Raises when specified ID PurchaseOrderHeader has been updated
  purchaseOrderHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): PurchaseOrderHeaderQLType

  # Raises when a any update/change to an existing PurchaseOrderHeaderCarriageChargeMapping
  purchaseOrderHeaderCarriageChargeMapping_OnChange: PurchaseOrderHeaderCarriageChargeMappingQLType

  # Raises when a new PurchaseOrderHeaderCarriageChargeMapping has been inserted
  purchaseOrderHeaderCarriageChargeMapping_OnInsert: PurchaseOrderHeaderCarriageChargeMappingQLType

  # Raises when specified ID PurchaseOrderHeaderCarriageChargeMapping has been updated
  purchaseOrderHeaderCarriageChargeMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): PurchaseOrderHeaderCarriageChargeMappingQLType

  # Raises when a any update/change to an existing PurchaseOrderHeaderFeatureMapping
  purchaseOrderHeaderFeatureMapping_OnChange: PurchaseOrderHeaderFeatureMappingQLType

  # Raises when a new PurchaseOrderHeaderFeatureMapping has been inserted
  purchaseOrderHeaderFeatureMapping_OnInsert: PurchaseOrderHeaderFeatureMappingQLType

  # Raises when specified ID PurchaseOrderHeaderFeatureMapping has been updated
  purchaseOrderHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): PurchaseOrderHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing PurchaseOrderItem
  purchaseOrderItem_OnChange: PurchaseOrderItemQLType

  # Raises when a new PurchaseOrderItem has been inserted
  purchaseOrderItem_OnInsert: PurchaseOrderItemQLType

  # Raises when specified ID PurchaseOrderItem has been updated
  purchaseOrderItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): PurchaseOrderItemQLType

  # Raises when a any update/change to an existing PurchaseOrderItemUnit
  purchaseOrderItemUnit_OnChange: PurchaseOrderItemUnitQLType

  # Raises when a new PurchaseOrderItemUnit has been inserted
  purchaseOrderItemUnit_OnInsert: PurchaseOrderItemUnitQLType

  # Raises when specified ID PurchaseOrderItemUnit has been updated
  purchaseOrderItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): PurchaseOrderItemUnitQLType

  # Raises when a any update/change to an existing QuoteHeader
  quoteHeader_OnChange: QuoteHeaderQLType

  # Raises when a new QuoteHeader has been inserted
  quoteHeader_OnInsert: QuoteHeaderQLType

  # Raises when specified ID QuoteHeader has been updated
  quoteHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): QuoteHeaderQLType

  # Raises when a any update/change to an existing QuoteHeaderFeatureMapping
  quoteHeaderFeatureMapping_OnChange: QuoteHeaderFeatureMappingQLType

  # Raises when a new QuoteHeaderFeatureMapping has been inserted
  quoteHeaderFeatureMapping_OnInsert: QuoteHeaderFeatureMappingQLType

  # Raises when specified ID QuoteHeaderFeatureMapping has been updated
  quoteHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): QuoteHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing QuoteItem
  quoteItem_OnChange: QuoteItemQLType

  # Raises when a new QuoteItem has been inserted
  quoteItem_OnInsert: QuoteItemQLType

  # Raises when specified ID QuoteItem has been updated
  quoteItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): QuoteItemQLType

  # Raises when a any update/change to an existing QuoteValidationTerm
  quoteValidationTerm_OnChange: QuoteValidationTermQLType

  # Raises when a new QuoteValidationTerm has been inserted
  quoteValidationTerm_OnInsert: QuoteValidationTermQLType

  # Raises when specified ID QuoteValidationTerm has been updated
  quoteValidationTerm_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): QuoteValidationTermQLType

  # Raises when a any update/change to an existing Role
  role_OnChange: RoleQLType

  # Raises when a new Role has been inserted
  role_OnInsert: RoleQLType

  # Raises when specified ID Role has been updated
  role_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): RoleQLType

  # Raises when a any update/change to an existing SalesOrderHeader
  salesOrderHeader_OnChange: SalesOrderHeaderQLType

  # Raises when a new SalesOrderHeader has been inserted
  salesOrderHeader_OnInsert: SalesOrderHeaderQLType

  # Raises when specified ID SalesOrderHeader has been updated
  salesOrderHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SalesOrderHeaderQLType

  # Raises when a any update/change to an existing SalesOrderHeaderFeatureMapping
  salesOrderHeaderFeatureMapping_OnChange: SalesOrderHeaderFeatureMappingQLType

  # Raises when a new SalesOrderHeaderFeatureMapping has been inserted
  salesOrderHeaderFeatureMapping_OnInsert: SalesOrderHeaderFeatureMappingQLType

  # Raises when specified ID SalesOrderHeaderFeatureMapping has been updated
  salesOrderHeaderFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SalesOrderHeaderFeatureMappingQLType

  # Raises when a any update/change to an existing SalesOrderHeaderResponseEmailMapping
  salesOrderHeaderResponseEmailMapping_OnChange: SalesOrderHeaderResponseEmailMappingQLType

  # Raises when a new SalesOrderHeaderResponseEmailMapping has been inserted
  salesOrderHeaderResponseEmailMapping_OnInsert: SalesOrderHeaderResponseEmailMappingQLType

  # Raises when specified ID SalesOrderHeaderResponseEmailMapping has been updated
  salesOrderHeaderResponseEmailMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SalesOrderHeaderResponseEmailMappingQLType

  # Raises when a any update/change to an existing SalesOrderItem
  salesOrderItem_OnChange: SalesOrderItemQLType

  # Raises when a new SalesOrderItem has been inserted
  salesOrderItem_OnInsert: SalesOrderItemQLType

  # Raises when specified ID SalesOrderItem has been updated
  salesOrderItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SalesOrderItemQLType

  # Raises when a any update/change to an existing SalesOrderItemUnit
  salesOrderItemUnit_OnChange: SalesOrderItemUnitQLType

  # Raises when a new SalesOrderItemUnit has been inserted
  salesOrderItemUnit_OnInsert: SalesOrderItemUnitQLType

  # Raises when specified ID SalesOrderItemUnit has been updated
  salesOrderItemUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SalesOrderItemUnitQLType

  # Raises when a any update/change to an existing SalesOrderRequestHeader
  salesOrderRequestHeader_OnChange: SalesOrderRequestHeaderQLType

  # Raises when a new SalesOrderRequestHeader has been inserted
  salesOrderRequestHeader_OnInsert: SalesOrderRequestHeaderQLType

  # Raises when specified ID SalesOrderRequestHeader has been updated
  salesOrderRequestHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SalesOrderRequestHeaderQLType

  # Raises when a any update/change to an existing SalesOrderRequestItem
  salesOrderRequestItem_OnChange: SalesOrderRequestItemQLType

  # Raises when a new SalesOrderRequestItem has been inserted
  salesOrderRequestItem_OnInsert: SalesOrderRequestItemQLType

  # Raises when specified ID SalesOrderRequestItem has been updated
  salesOrderRequestItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SalesOrderRequestItemQLType

  # Raises when a any update/change to an existing Sector
  sector_OnChange: SectorQLType

  # Raises when a new Sector has been inserted
  sector_OnInsert: SectorQLType

  # Raises when specified ID Sector has been updated
  sector_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SectorQLType

  # Raises when a any update/change to an existing Sic
  sic_OnChange: SicQLType

  # Raises when a new Sic has been inserted
  sic_OnInsert: SicQLType

  # Raises when specified ID Sic has been updated
  sic_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SicQLType

  # Raises when a any update/change to an existing Sicsection
  sicsection_OnChange: SicsectionQLType

  # Raises when a new Sicsection has been inserted
  sicsection_OnInsert: SicsectionQLType

  # Raises when specified ID Sicsection has been updated
  sicsection_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SicsectionQLType

  # Raises when a any update/change to an existing Stock
  stock_OnChange: StockQLType

  # Raises when a new Stock has been inserted
  stock_OnInsert: StockQLType

  # Raises when specified ID Stock has been updated
  stock_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockQLType

  # Raises when a any update/change to an existing StockFeatureMapping
  stockFeatureMapping_OnChange: StockFeatureMappingQLType

  # Raises when a new StockFeatureMapping has been inserted
  stockFeatureMapping_OnInsert: StockFeatureMappingQLType

  # Raises when specified ID StockFeatureMapping has been updated
  stockFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockFeatureMappingQLType

  # Raises when a any update/change to an existing StockLocation
  stockLocation_OnChange: StockLocationQLType

  # Raises when a new StockLocation has been inserted
  stockLocation_OnInsert: StockLocationQLType

  # Raises when specified ID StockLocation has been updated
  stockLocation_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockLocationQLType

  # Raises when a any update/change to an existing StockMovement
  stockMovement_OnChange: StockMovementQLType

  # Raises when a new StockMovement has been inserted
  stockMovement_OnInsert: StockMovementQLType

  # Raises when specified ID StockMovement has been updated
  stockMovement_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockMovementQLType

  # Raises when a any update/change to an existing StockMovementParentType
  stockMovementParentType_OnChange: StockMovementParentTypeQLType

  # Raises when a new StockMovementParentType has been inserted
  stockMovementParentType_OnInsert: StockMovementParentTypeQLType

  # Raises when specified ID StockMovementParentType has been updated
  stockMovementParentType_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockMovementParentTypeQLType

  # Raises when a any update/change to an existing StockMovementRequestHeader
  stockMovementRequestHeader_OnChange: StockMovementRequestHeaderQLType

  # Raises when a new StockMovementRequestHeader has been inserted
  stockMovementRequestHeader_OnInsert: StockMovementRequestHeaderQLType

  # Raises when specified ID StockMovementRequestHeader has been updated
  stockMovementRequestHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockMovementRequestHeaderQLType

  # Raises when a any update/change to an existing StockMovementRequestItem
  stockMovementRequestItem_OnChange: StockMovementRequestItemQLType

  # Raises when a new StockMovementRequestItem has been inserted
  stockMovementRequestItem_OnInsert: StockMovementRequestItemQLType

  # Raises when specified ID StockMovementRequestItem has been updated
  stockMovementRequestItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockMovementRequestItemQLType

  # Raises when a any update/change to an existing StockMovementTransaction
  stockMovementTransaction_OnChange: StockMovementTransactionQLType

  # Raises when a new StockMovementTransaction has been inserted
  stockMovementTransaction_OnInsert: StockMovementTransactionQLType

  # Raises when specified ID StockMovementTransaction has been updated
  stockMovementTransaction_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockMovementTransactionQLType

  # Raises when a any update/change to an existing StockMovementType
  stockMovementType_OnChange: StockMovementTypeQLType

  # Raises when a new StockMovementType has been inserted
  stockMovementType_OnInsert: StockMovementTypeQLType

  # Raises when specified ID StockMovementType has been updated
  stockMovementType_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockMovementTypeQLType

  # Raises when a any update/change to an existing StockTakeAdjustmentCode
  stockTakeAdjustmentCode_OnChange: StockTakeAdjustmentCodeQLType

  # Raises when a new StockTakeAdjustmentCode has been inserted
  stockTakeAdjustmentCode_OnInsert: StockTakeAdjustmentCodeQLType

  # Raises when specified ID StockTakeAdjustmentCode has been updated
  stockTakeAdjustmentCode_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockTakeAdjustmentCodeQLType

  # Raises when a any update/change to an existing StockTakeDiscrepancy
  stockTakeDiscrepancy_OnChange: StockTakeDiscrepancyQLType

  # Raises when a new StockTakeDiscrepancy has been inserted
  stockTakeDiscrepancy_OnInsert: StockTakeDiscrepancyQLType

  # Raises when specified ID StockTakeDiscrepancy has been updated
  stockTakeDiscrepancy_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockTakeDiscrepancyQLType

  # Raises when a any update/change to an existing StockTakeHeader
  stockTakeHeader_OnChange: StockTakeHeaderQLType

  # Raises when a new StockTakeHeader has been inserted
  stockTakeHeader_OnInsert: StockTakeHeaderQLType

  # Raises when specified ID StockTakeHeader has been updated
  stockTakeHeader_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockTakeHeaderQLType

  # Raises when a any update/change to an existing StockTakeItem
  stockTakeItem_OnChange: StockTakeItemQLType

  # Raises when a new StockTakeItem has been inserted
  stockTakeItem_OnInsert: StockTakeItemQLType

  # Raises when specified ID StockTakeItem has been updated
  stockTakeItem_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockTakeItemQLType

  # Raises when a any update/change to an existing StockTally
  stockTally_OnChange: StockTallyQLType

  # Raises when a new StockTally has been inserted
  stockTally_OnInsert: StockTallyQLType

  # Raises when specified ID StockTally has been updated
  stockTally_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockTallyQLType

  # Raises when a any update/change to an existing StockThreshold
  stockThreshold_OnChange: StockThresholdQLType

  # Raises when a new StockThreshold has been inserted
  stockThreshold_OnInsert: StockThresholdQLType

  # Raises when specified ID StockThreshold has been updated
  stockThreshold_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockThresholdQLType

  # Raises when a any update/change to an existing StockType
  stockType_OnChange: StockTypeQLType

  # Raises when a new StockType has been inserted
  stockType_OnInsert: StockTypeQLType

  # Raises when specified ID StockType has been updated
  stockType_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockTypeQLType

  # Raises when a any update/change to an existing StockUnit
  stockUnit_OnChange: StockUnitQLType

  # Raises when a new StockUnit has been inserted
  stockUnit_OnInsert: StockUnitQLType

  # Raises when specified ID StockUnit has been updated
  stockUnit_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockUnitQLType

  # Raises when a any update/change to an existing StockUnitAsset
  stockUnitAsset_OnChange: StockUnitAssetQLType

  # Raises when a new StockUnitAsset has been inserted
  stockUnitAsset_OnInsert: StockUnitAssetQLType

  # Raises when specified ID StockUnitAsset has been updated
  stockUnitAsset_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockUnitAssetQLType

  # Raises when a any update/change to an existing StockUnitAttribute
  stockUnitAttribute_OnChange: StockUnitAttributeQLType

  # Raises when a new StockUnitAttribute has been inserted
  stockUnitAttribute_OnInsert: StockUnitAttributeQLType

  # Raises when specified ID StockUnitAttribute has been updated
  stockUnitAttribute_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockUnitAttributeQLType

  # Raises when a any update/change to an existing StockUnitAttributeType
  stockUnitAttributeType_OnChange: StockUnitAttributeTypeQLType

  # Raises when a new StockUnitAttributeType has been inserted
  stockUnitAttributeType_OnInsert: StockUnitAttributeTypeQLType

  # Raises when specified ID StockUnitAttributeType has been updated
  stockUnitAttributeType_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockUnitAttributeTypeQLType

  # Raises when a any update/change to an existing StockUnitGroup
  stockUnitGroup_OnChange: StockUnitGroupQLType

  # Raises when a new StockUnitGroup has been inserted
  stockUnitGroup_OnInsert: StockUnitGroupQLType

  # Raises when specified ID StockUnitGroup has been updated
  stockUnitGroup_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockUnitGroupQLType

  # Raises when a any update/change to an existing StockUnitStatus
  stockUnitStatus_OnChange: StockUnitStatusQLType

  # Raises when a new StockUnitStatus has been inserted
  stockUnitStatus_OnInsert: StockUnitStatusQLType

  # Raises when specified ID StockUnitStatus has been updated
  stockUnitStatus_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockUnitStatusQLType

  # Raises when a any update/change to an existing StockUnitTransaction
  stockUnitTransaction_OnChange: StockUnitTransactionQLType

  # Raises when a new StockUnitTransaction has been inserted
  stockUnitTransaction_OnInsert: StockUnitTransactionQLType

  # Raises when specified ID StockUnitTransaction has been updated
  stockUnitTransaction_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StockUnitTransactionQLType

  # Raises when a any update/change to an existing StormDeliveryCharge
  stormDeliveryCharge_OnChange: StormDeliveryChargeQLType

  # Raises when a new StormDeliveryCharge has been inserted
  stormDeliveryCharge_OnInsert: StormDeliveryChargeQLType

  # Raises when specified ID StormDeliveryCharge has been updated
  stormDeliveryCharge_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StormDeliveryChargeQLType

  # Raises when a any update/change to an existing StormError
  stormError_OnChange: StormErrorQLType

  # Raises when a new StormError has been inserted
  stormError_OnInsert: StormErrorQLType

  # Raises when specified ID StormError has been updated
  stormError_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StormErrorQLType

  # Raises when a any update/change to an existing StormErrorType
  stormErrorType_OnChange: StormErrorTypeQLType

  # Raises when a new StormErrorType has been inserted
  stormErrorType_OnInsert: StormErrorTypeQLType

  # Raises when specified ID StormErrorType has been updated
  stormErrorType_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StormErrorTypeQLType

  # Raises when a any update/change to an existing StormStatus
  stormStatus_OnChange: StormStatusQLType

  # Raises when a new StormStatus has been inserted
  stormStatus_OnInsert: StormStatusQLType

  # Raises when specified ID StormStatus has been updated
  stormStatus_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StormStatusQLType

  # Raises when a any update/change to an existing StormStatusMapping
  stormStatusMapping_OnChange: StormStatusMappingQLType

  # Raises when a new StormStatusMapping has been inserted
  stormStatusMapping_OnInsert: StormStatusMappingQLType

  # Raises when specified ID StormStatusMapping has been updated
  stormStatusMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): StormStatusMappingQLType

  # Raises when a any update/change to an existing Supplier
  supplier_OnChange: SupplierQLType

  # Raises when a new Supplier has been inserted
  supplier_OnInsert: SupplierQLType

  # Raises when specified ID Supplier has been updated
  supplier_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SupplierQLType

  # Raises when a any update/change to an existing SupplierContactMapping
  supplierContactMapping_OnChange: SupplierContactMappingQLType

  # Raises when a new SupplierContactMapping has been inserted
  supplierContactMapping_OnInsert: SupplierContactMappingQLType

  # Raises when specified ID SupplierContactMapping has been updated
  supplierContactMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SupplierContactMappingQLType

  # Raises when a any update/change to an existing SupplierDeliveryCharge
  supplierDeliveryCharge_OnChange: SupplierDeliveryChargeQLType

  # Raises when a new SupplierDeliveryCharge has been inserted
  supplierDeliveryCharge_OnInsert: SupplierDeliveryChargeQLType

  # Raises when specified ID SupplierDeliveryCharge has been updated
  supplierDeliveryCharge_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SupplierDeliveryChargeQLType

  # Raises when a any update/change to an existing SupplierFeatureMapping
  supplierFeatureMapping_OnChange: SupplierFeatureMappingQLType

  # Raises when a new SupplierFeatureMapping has been inserted
  supplierFeatureMapping_OnInsert: SupplierFeatureMappingQLType

  # Raises when specified ID SupplierFeatureMapping has been updated
  supplierFeatureMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SupplierFeatureMappingQLType

  # Raises when a any update/change to an existing SupplierProvider
  supplierProvider_OnChange: SupplierProviderQLType

  # Raises when a new SupplierProvider has been inserted
  supplierProvider_OnInsert: SupplierProviderQLType

  # Raises when specified ID SupplierProvider has been updated
  supplierProvider_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SupplierProviderQLType

  # Raises when a any update/change to an existing SupplierProviderMapping
  supplierProviderMapping_OnChange: SupplierProviderMappingQLType

  # Raises when a new SupplierProviderMapping has been inserted
  supplierProviderMapping_OnInsert: SupplierProviderMappingQLType

  # Raises when specified ID SupplierProviderMapping has been updated
  supplierProviderMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SupplierProviderMappingQLType

  # Raises when a any update/change to an existing SupplierStockAndCost
  supplierStockAndCost_OnChange: SupplierStockAndCostQLType

  # Raises when a new SupplierStockAndCost has been inserted
  supplierStockAndCost_OnInsert: SupplierStockAndCostQLType

  # Raises when specified ID SupplierStockAndCost has been updated
  supplierStockAndCost_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): SupplierStockAndCostQLType

  # Raises when a any update/change to an existing TableName
  tableName_OnChange: TableNameQLType

  # Raises when a new TableName has been inserted
  tableName_OnInsert: TableNameQLType

  # Raises when specified ID TableName has been updated
  tableName_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): TableNameQLType

  # Raises when a any update/change to an existing Team
  team_OnChange: TeamQLType

  # Raises when a new Team has been inserted
  team_OnInsert: TeamQLType

  # Raises when specified ID Team has been updated
  team_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): TeamQLType

  # Raises when a any update/change to an existing UnitOfMeasurement
  unitOfMeasurement_OnChange: UnitOfMeasurementQLType

  # Raises when a new UnitOfMeasurement has been inserted
  unitOfMeasurement_OnInsert: UnitOfMeasurementQLType

  # Raises when specified ID UnitOfMeasurement has been updated
  unitOfMeasurement_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): UnitOfMeasurementQLType

  # Raises when a any update/change to an existing UserProfile
  userProfile_OnChange: UserProfileQLType

  # Raises when a new UserProfile has been inserted
  userProfile_OnInsert: UserProfileQLType

  # Raises when specified ID UserProfile has been updated
  userProfile_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): UserProfileQLType

  # Raises when a any update/change to an existing UserProfileDepartmentMapping
  userProfileDepartmentMapping_OnChange: UserProfileDepartmentMappingQLType

  # Raises when a new UserProfileDepartmentMapping has been inserted
  userProfileDepartmentMapping_OnInsert: UserProfileDepartmentMappingQLType

  # Raises when specified ID UserProfileDepartmentMapping has been updated
  userProfileDepartmentMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): UserProfileDepartmentMappingQLType

  # Raises when a any update/change to an existing UserProfileTarget
  userProfileTarget_OnChange: UserProfileTargetQLType

  # Raises when a new UserProfileTarget has been inserted
  userProfileTarget_OnInsert: UserProfileTargetQLType

  # Raises when specified ID UserProfileTarget has been updated
  userProfileTarget_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): UserProfileTargetQLType

  # Raises when a any update/change to an existing UserProfileTeamMapping
  userProfileTeamMapping_OnChange: UserProfileTeamMappingQLType

  # Raises when a new UserProfileTeamMapping has been inserted
  userProfileTeamMapping_OnInsert: UserProfileTeamMappingQLType

  # Raises when specified ID UserProfileTeamMapping has been updated
  userProfileTeamMapping_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): UserProfileTeamMappingQLType

  # Raises when a any update/change to an existing Vatcode
  vatcode_OnChange: VatcodeQLType

  # Raises when a new Vatcode has been inserted
  vatcode_OnInsert: VatcodeQLType

  # Raises when specified ID Vatcode has been updated
  vatcode_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): VatcodeQLType

  # Raises when a any update/change to an existing Warranty
  warranty_OnChange: WarrantyQLType

  # Raises when a new Warranty has been inserted
  warranty_OnInsert: WarrantyQLType

  # Raises when specified ID Warranty has been updated
  warranty_OnUpdate(
    # Key of object to receive updates from
    id: Int!
  ): WarrantyQLType
}

type PageViewEventOutputModel {
  count: Int
  eventType: PageViewEventTypeEnumQLType
  idRef: String
  viewerId: String
}

enum PageViewEventTypeEnumQLType {
  JOIN
  LEAVE
}
